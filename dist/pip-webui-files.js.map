{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/files.ts","src/progress/FileProgressController.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","temp/pip-webui-files-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFiles.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","ï»¿\r\nimport {FileSelectController} from './select/FileSelectController';\r\nimport {FileProgressController} from './progress/FileProgressController';\r\nimport {FileUploadService} from './service/FileUploadService';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'select/FileSelect.html'\r\n        };\r\n    }\r\n\r\n     function fileProgressDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileProgressController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                cancel: '=pipCancel',\r\n                retry: '=pipRetry' ,\r\n                name: '=pipName',\r\n                state: '=pipState',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'progress/FileProgress.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', [])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        .directive('pipFileProgress', fileProgressDirective)\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nexport interface IFileProgressController {\r\n    name: string;\r\n    type: string;\r\n    onCancel(): void;\r\n    onCancel(): void;\r\n    abort(): void;\r\n}\r\n\r\nexport class FileProgressController implements IFileProgressController {\r\n    private _service: IFileUploadService;\r\n    private _cancel: Function;\r\n    private _retry: Function;\r\n    \r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        $scope: ng.IScope, \r\n        pipFileUpload: IFileUploadService\r\n    ) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this._cancel = $scope['cancel'];\r\n        this._retry = $scope['retry'];\r\n        this.name = $scope['name'];\r\n        this.state = $scope['state'];\r\n        this.progress = $scope['progress'];\r\n\r\n        $scope.$watch('state', (state: string) => {\r\n            this.state = state;\r\n        })\r\n\r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n\r\n        this._service = pipFileUpload;\r\n    }\r\n\r\n    public errorFail(): string {\r\n        return this._service.error;\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._cancel) this._cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._retry) this._retry();\r\n    }\r\n\r\n    public abort() {\r\n        this._service.abort();\r\n        if (this._cancel) this._cancel();\r\n    }\r\n\r\n}","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","export class GlobalProgress {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    globalProgress: string;\r\n    error: string;\r\n    transaction;//: pip.services.Transaction;\r\n    upload(url: string, file: any, callback?: (data: any, err: any) => void): void;\r\n    abort(): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    private _http: ng.IHttpService;\r\n\r\n    public progress: number;\r\n    public globalProgress: string;\r\n    public error: string = null;\r\n    public transaction;//: pip.services.Transaction;\r\n\r\n    public constructor(\r\n        $http: ng.IHttpService,\r\n        pipTransaction//: pip.services.ITransactionService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._http = $http;\r\n        this.transaction = pipTransaction.create('upload file');\r\n    }\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n        //console.log(file); \r\n\r\n        let fd = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        this.transaction.begin(GlobalProgress.Start);\r\n        this.globalProgress = GlobalProgress.Start;\r\n        this._http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.globalProgress = GlobalProgress.Upload;\r\n            this.transaction.end(GlobalProgress.Upload);\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.globalProgress = GlobalProgress.Fail;\r\n            this.transaction.end(GlobalProgress.Fail);\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n\r\n    public abort(): void {\r\n        this.transaction.abort();\r\n        //this.globalProgress = null;\r\n    }\r\n\r\n\r\n}","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('progress/FileProgress.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon\" ng-class=\"{\\'color-badge-bg\\': vm.state == \\'fail\\', \\'bb-orange\\': vm.state == \\'start\\', \\'bb-green\\': vm.state == \\'upload\\' }\"><md-icon md-svg-icon=\"icons:check\" ng-if=\"vm.state == \\'upload\\'\"></md-icon><md-icon md-svg-icon=\"bootbarn-icons:play\" ng-if=\"vm.state == \\'start\\'\"></md-icon><md-icon md-svg-icon=\"icons:cross\" ng-if=\"vm.state == \\'fail\\'\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\" ng-if=\"vm.state == \\'start\\'\">Uploading {{vm.type}}</h3><h3 class=\"pip-title\" ng-if=\"vm.state == \\'upload\\'\">Uploaded {{vm.type}} successfully!</h3><h3 class=\"pip-title\" ng-if=\"vm.state == \\'fail\\'\">Uploading {{vm.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div class=\"color-error pip-error\" ng-if=\"vm.state == \\'fail\\'\">{{vm.errorFail()}}</div><div ng-if=\"vm.state == \\'start\\'\"><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{vm.progress}}\" ng-if=\"vm.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"vm.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\" ng-show=\"!vm.state || vm.state == \\'fail\\'\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onRetry()\" ng-show=\"vm.state == \\'fail\\'\">Retry</md-button><md-button class=\"md-accent\" ng-click=\"vm.abort()\" ng-show=\"vm.state == \\'start\\'\">Abort</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"vm.onUploadButtonClick()\" ng-if=\"!vm.localFile\">Choose File</md-button><div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{vm.localFile.name}}</div><div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div></div><md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}