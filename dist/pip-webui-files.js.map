{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/translate.ts","src/fail/FileFailController.ts","src/files.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","src/start/FileStartController.ts","src/success/FileSuccessController.ts","src/upload/FileUploadController.ts","temp/pip-webui-files-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFiles.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileFailController implements IFileFailController {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.error = $scope['error'] || null;\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n      \r\n    }\r\n}","﻿\r\nimport {FileSelectController} from './select/FileSelectController';\r\nimport {FileUploadController} from './upload/FileUploadController';\r\nimport {FileSuccessController} from './success/FileSuccessController';\r\nimport {FileFailController} from './fail/FileFailController';\r\nimport {FileUploadService} from './service/FileUploadService';\r\nimport {FileStartController} from './start/FileStartController';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'select/FileSelect.html'\r\n        };\r\n    }\r\n\r\n     function fileUploadDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileUploadController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttonFunction: '=?pipButtonFunctions',\r\n                buttons: '=?pipButtons',\r\n                error: '=?pipError',\r\n                name: '=pipName',\r\n                state: '=pipState',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'upload/FileUpload.html'\r\n        };\r\n    }\r\n\r\n     function fileSuccessDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n            },\r\n            templateUrl: 'success/FileSuccess.html'\r\n        };\r\n    }\r\n\r\n     function fileFailDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileFailController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                error: '=pipError'\r\n            },\r\n            templateUrl: 'fail/FileFail.html'\r\n        };\r\n    }\r\n\r\n    function fileStartDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileStartController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'start/FileStart.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', [])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        .directive('pipFileUpload', fileUploadDirective)\r\n        .directive('pipSuccesUpload', fileSuccessDirective)\r\n        .directive('pipFailUpload', fileFailDirective)\r\n        .directive('pipStartUpload', fileStartDirective)\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    state: string;\r\n    error: string;\r\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    private _http: ng.IHttpService;\r\n\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor(\r\n        $http: ng.IHttpService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._http = $http;\r\n    }\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n        //console.log(file); \r\n\r\n        let fd = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        this.state = FileUploadState.Start;\r\n        this._http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.state = FileUploadState.Upload;\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.state = FileUploadState.Fail;\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.progress = $scope['progress'] || null;\r\n      \r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileSuccessController implements IFileSuccessController {\r\n    public name: string;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n      \r\n    }\r\n}","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\nexport class FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\nexport class FileUploadController implements IFileUploadController {\r\n    //private _buttonFunction: FileUploadButtons;\r\n    private _functions: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor(\r\n        $scope: ng.IScope\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._functions = $scope['buttonFunction'];\r\n        \r\n        // Init parameters\r\n        if (this._functions) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n        this.buttons = $scope['buttons'] || false;\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.state = $scope['state'];\r\n        this.error = $scope['error'];\r\n        this.progress = $scope['progress'];\r\n\r\n        $scope.$watch('state', (state: string) => {\r\n            this.state = state;\r\n        })\r\n\r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n\r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._functions.cancel) this._functions.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._functions.retry) this._functions.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this._functions.abort) this._functions.abort();\r\n    }\r\n\r\n}","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{vm.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div class=\"color-error pip-error\">{{vm.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in vm.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"vm.onUploadButtonClick()\" ng-if=\"!vm.localFile\">Choose File</md-button><div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{vm.localFile.name}}</div><div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div></div><md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::vm.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{vm.progress}}\" ng-if=\"vm.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"vm.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"vm.state == \\'upload\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-buttons=\"vm.buttons\"></pip-succes-upload><pip-fail-upload ng-if=\"vm.state == \\'fail\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-error=\"vm.error\" pip-buttons=\"vm.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"vm.state == \\'start\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-progress=\"vm.progress\" pip-buttons=\"vm.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY29tbW9uL0J1dHRvbnNVcGxvYWQudHMiLCJzcmMvZGVwZW5kZW5jaWVzL3RyYW5zbGF0ZS50cyIsInNyYy9mYWlsL0ZpbGVGYWlsQ29udHJvbGxlci50cyIsInNyYy9maWxlcy50cyIsInNyYy9zZWxlY3QvRmlsZVNlbGVjdENvbnRyb2xsZXIudHMiLCJzcmMvc2VydmljZS9GaWxlVXBsb2FkU2VydmljZS50cyIsInNyYy9zdGFydC9GaWxlU3RhcnRDb250cm9sbGVyLnRzIiwic3JjL3N1Y2Nlc3MvRmlsZVN1Y2Nlc3NDb250cm9sbGVyLnRzIiwic3JjL3VwbG9hZC9GaWxlVXBsb2FkQ29udHJvbGxlci50cyIsInRlbXAvcGlwLXdlYnVpLWZpbGVzLWh0bWwubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQTtJQUFBO0lBR0EsQ0FBQztJQUFELG9CQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxzQ0FBYTs7QUNPMUIsQ0FBQztJQUNHLFlBQVksQ0FBQztJQUViLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFMUQsVUFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsVUFBVSxTQUFTO1FBQzlDLElBQUksWUFBWSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO2NBQzFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRTNDLE1BQU0sQ0FBQyxVQUFVLEdBQUc7WUFDaEIsTUFBTSxDQUFDLFlBQVksR0FBSSxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDcEUsQ0FBQyxDQUFBO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsRUFBRSxDQUFDOzs7O0FDVEw7SUFNSSw0QkFBWSxNQUFpQjtRQUN6QixVQUFVLENBQUM7UUFEZixpQkFhQztRQVRHLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLE1BQU0sQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUM7UUFDekMsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDO1FBRXJDLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLFVBQUMsS0FBYTtZQUNqQyxLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQTtJQUVOLENBQUM7SUFDTCx5QkFBQztBQUFELENBcEJBLEFBb0JDLElBQUE7QUFwQlksZ0RBQWtCOzs7O0FDWC9CLHNFQUFtRTtBQUNuRSxzRUFBbUU7QUFDbkUseUVBQXNFO0FBQ3RFLGdFQUE2RDtBQUM3RCxpRUFBOEQ7QUFDOUQsbUVBQWdFO0FBRWhFLENBQUM7SUFDRyw0QkFBNEIsTUFBVztRQUNuQyxVQUFVLENBQUM7UUFFWCxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLElBQUksRUFBRSxVQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSztnQkFDeEIsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDcEMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztnQkFFL0IsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7b0JBQ25CLEtBQUssQ0FBQyxNQUFNLENBQUM7d0JBQ1QsV0FBVyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzVDLENBQUMsQ0FBQyxDQUFDO2dCQUNQLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztTQUNKLENBQUM7SUFDTixDQUFDO0lBRUQ7UUFDSSxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLE9BQU8sRUFBRSxJQUFJO1lBQ2IsS0FBSyxFQUFFO2dCQUNILFNBQVMsRUFBRSxHQUFHO2FBQ2pCO1lBQ0QsVUFBVSxFQUFFLDJDQUFvQjtZQUNoQyxZQUFZLEVBQUUsSUFBSTtZQUNsQixXQUFXLEVBQUUsd0JBQXdCO1NBQ3hDLENBQUM7SUFDTixDQUFDO0lBRUE7UUFDRyxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLE9BQU8sRUFBRSxJQUFJO1lBQ2IsVUFBVSxFQUFFLDJDQUFvQjtZQUNoQyxZQUFZLEVBQUUsSUFBSTtZQUNsQixLQUFLLEVBQUU7Z0JBQ0gsY0FBYyxFQUFFLHNCQUFzQjtnQkFDdEMsT0FBTyxFQUFFLGNBQWM7Z0JBQ3ZCLEtBQUssRUFBRSxZQUFZO2dCQUNuQixJQUFJLEVBQUUsVUFBVTtnQkFDaEIsS0FBSyxFQUFFLFdBQVc7Z0JBQ2xCLElBQUksRUFBRSxXQUFXO2dCQUNqQixRQUFRLEVBQUUsY0FBYzthQUMzQjtZQUNELFdBQVcsRUFBRSx3QkFBd0I7U0FDeEMsQ0FBQztJQUNOLENBQUM7SUFFQTtRQUNHLE1BQU0sQ0FBQztZQUNILFFBQVEsRUFBRSxHQUFHO1lBQ2IsT0FBTyxFQUFFLElBQUk7WUFDYixVQUFVLEVBQUUsNkNBQXFCO1lBQ2pDLFlBQVksRUFBRSxJQUFJO1lBQ2xCLEtBQUssRUFBRTtnQkFDSCxPQUFPLEVBQUUsY0FBYztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxXQUFXO2FBQ3BCO1lBQ0QsV0FBVyxFQUFFLDBCQUEwQjtTQUMxQyxDQUFDO0lBQ04sQ0FBQztJQUVBO1FBQ0csTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixPQUFPLEVBQUUsSUFBSTtZQUNiLFVBQVUsRUFBRSx1Q0FBa0I7WUFDOUIsWUFBWSxFQUFFLElBQUk7WUFDbEIsS0FBSyxFQUFFO2dCQUNILE9BQU8sRUFBRSxjQUFjO2dCQUN2QixJQUFJLEVBQUUsVUFBVTtnQkFDaEIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLEtBQUssRUFBRSxXQUFXO2FBQ3JCO1lBQ0QsV0FBVyxFQUFFLG9CQUFvQjtTQUNwQyxDQUFDO0lBQ04sQ0FBQztJQUVEO1FBQ0ksTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixPQUFPLEVBQUUsSUFBSTtZQUNiLFVBQVUsRUFBRSx5Q0FBbUI7WUFDL0IsWUFBWSxFQUFFLElBQUk7WUFDbEIsS0FBSyxFQUFFO2dCQUNILE9BQU8sRUFBRSxjQUFjO2dCQUN2QixJQUFJLEVBQUUsVUFBVTtnQkFDaEIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLFFBQVEsRUFBRSxjQUFjO2FBQzNCO1lBQ0QsV0FBVyxFQUFFLHNCQUFzQjtTQUN0QyxDQUFDO0lBQ04sQ0FBQztJQUVELE9BQU87U0FDRixNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQztTQUN0QixTQUFTLENBQUMsV0FBVyxFQUFFLGtCQUFrQixDQUFDO1NBQzFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsbUJBQW1CLENBQUM7U0FDL0MsU0FBUyxDQUFDLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQztTQUMvQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsb0JBQW9CLENBQUM7U0FDbEQsU0FBUyxDQUFDLGVBQWUsRUFBRSxpQkFBaUIsQ0FBQztTQUM3QyxTQUFTLENBQUMsZ0JBQWdCLEVBQUUsa0JBQWtCLENBQUM7U0FDL0MsT0FBTyxDQUFDLGVBQWUsRUFBRSxxQ0FBaUIsQ0FBQyxDQUFDO0FBR3JELENBQUMsQ0FBQyxFQUFFLENBQUM7Ozs7QUMvR0w7SUFHSSw4QkFBWSxNQUFpQjtRQUN6QixVQUFVLENBQUM7UUFDWCxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNyQyxNQUFNLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxVQUFDLElBQUk7WUFDL0IsTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFTSxrREFBbUIsR0FBMUI7UUFDSSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLGtEQUFtQixHQUExQjtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksS0FBSyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUMsS0FBTSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBRXpCLENBQUM7SUFDTCwyQkFBQztBQUFELENBckJBLEFBcUJDLElBQUE7QUFyQlksb0RBQW9COzs7O0FDTmpDO0lBQUE7SUFLQSxDQUFDO0lBQUQsc0JBQUM7QUFBRCxDQUxBLEFBS0M7QUFKaUIsbUJBQUcsR0FBYSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDNUMscUJBQUssR0FBVyxPQUFPLENBQUM7QUFDeEIsc0JBQU0sR0FBVyxRQUFRLENBQUM7QUFDMUIsb0JBQUksR0FBVyxNQUFNLENBQUM7QUFKM0IsMENBQWU7QUFjNUI7SUFPSSwyQkFDSSxLQUFzQjtRQUV0QixVQUFVLENBQUM7UUFMUixVQUFLLEdBQVcsSUFBSSxDQUFDO1FBT3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxrQ0FBTSxHQUFiLFVBQWMsR0FBVyxFQUFFLElBQVMsRUFBRSxRQUF3QztRQUE5RSxpQkE2QkM7UUExQkcsSUFBSSxFQUFFLEdBQUcsSUFBSSxRQUFRLEVBQUUsQ0FBQztRQUN4QixFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUV4QixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQyxLQUFLLENBQUM7UUFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBTztZQUMxQixtQkFBbUIsRUFBRTtnQkFDakIsUUFBUSxFQUFFLFVBQUMsQ0FBTTtvQkFDYixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO3dCQUNyQixLQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDO29CQUMvQyxDQUFDO2dCQUNMLENBQUM7YUFDSjtZQUNELE9BQU8sRUFBRSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUU7U0FDekMsQ0FBQzthQUNELE9BQU8sQ0FBQyxVQUFDLFFBQWE7WUFDbkIsS0FBSSxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUMsTUFBTSxDQUFDO1lBRXBDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFBQyxRQUFRLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxVQUFDLFFBQWE7WUFDakIsS0FBSSxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDO1lBQ2xDLEtBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUM7WUFFeEMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDO2dCQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDM0MsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQTdDQSxBQTZDQyxJQUFBO0FBN0NZLDhDQUFpQjs7OztBQ0Y5QjtJQU1JLDZCQUFZLE1BQWlCO1FBQ3pCLFVBQVUsQ0FBQztRQURmLGlCQVlDO1FBUkcsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksQ0FBQztRQUN6QyxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxJQUFJLENBQUM7UUFFM0MsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsVUFBQyxRQUFnQjtZQUN2QyxLQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFDTCwwQkFBQztBQUFELENBbkJBLEFBbUJDLElBQUE7QUFuQlksa0RBQW1COzs7O0FDRGhDO0lBS0ksK0JBQVksTUFBaUI7UUFDekIsVUFBVSxDQUFDO1FBR1gsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksQ0FBQztJQUU3QyxDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQWRBLEFBY0MsSUFBQTtBQWRZLHNEQUFxQjs7OztBQ1FsQztJQUFBO0lBSUEsQ0FBQztJQUFELHdCQUFDO0FBQUQsQ0FKQSxBQUlDLElBQUE7QUFKWSw4Q0FBaUI7QUFNOUI7SUFjSSw4QkFDSSxNQUFpQjtRQUVqQixVQUFVLENBQUM7UUFIZixpQkFvQ0M7UUF0Q00sVUFBSyxHQUFXLElBQUksQ0FBQztRQU94QixJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRzNDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ2xCLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxXQUFXLEdBQUc7Z0JBQ2YsRUFBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxjQUFRLEtBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQSxDQUFBLENBQUMsRUFBQztnQkFDbEQsRUFBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxjQUFRLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQSxDQUFBLENBQUMsRUFBQzthQUNuRCxDQUFDO1lBQ0YsSUFBSSxDQUFDLFlBQVksR0FBRztnQkFDaEIsRUFBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxjQUFRLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQSxDQUFDLENBQUMsRUFBQzthQUNwRCxDQUFDO1FBQ04sQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEtBQUssQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxNQUFNLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFbkMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBQyxLQUFhO1lBQ2pDLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFBO1FBRUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBQyxLQUFhO1lBQ2pDLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFBO1FBRUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsVUFBQyxRQUFnQjtZQUN2QyxLQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFTSx1Q0FBUSxHQUFmO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7WUFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3pELENBQUM7SUFFTSxzQ0FBTyxHQUFkO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7WUFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFFTSxzQ0FBTyxHQUFkO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7WUFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFFTCwyQkFBQztBQUFELENBaEVBLEFBZ0VDLElBQUE7QUFoRVksb0RBQW9COztBQ3pCakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJleHBvcnQgY2xhc3MgQnV0dG9uc1VwbG9hZCB7XHJcbiAgICBwdWJsaWMgdGl0bGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBjbGljazogRnVuY3Rpb247XHJcbn0iLCIvKipcclxuICogQGZpbGUgT3B0aW9uYWwgZmlsdGVyIHRvIHRyYW5zbGF0ZSBzdHJpbmcgcmVzb3VyY2VzXHJcbiAqIEBjb3B5cmlnaHQgRGlnaXRhbCBMaXZpbmcgU29mdHdhcmUgQ29ycC4gMjAxNC0yMDE2XHJcbiAqL1xyXG4gXHJcbi8qIGdsb2JhbCBhbmd1bGFyICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIHZhciB0aGlzTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRyYW5zbGF0ZScsIFtdKTtcclxuXHJcbiAgICB0aGlzTW9kdWxlLmZpbHRlcigndHJhbnNsYXRlJywgZnVuY3Rpb24gKCRpbmplY3Rvcikge1xyXG4gICAgICAgIHZhciBwaXBUcmFuc2xhdGUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGUnKSBcclxuICAgICAgICAgICAgPyAkaW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGUnKSA6IG51bGw7XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwaXBUcmFuc2xhdGUgID8gcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZShrZXkpIHx8IGtleSA6IGtleTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbn0pKCk7XHJcbiIsIlxyXG5pbXBvcnQge1xyXG4gICAgQnV0dG9uc1VwbG9hZFxyXG59IGZyb20gXCIuLi9jb21tb24vQnV0dG9uc1VwbG9hZFwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJRmlsZUZhaWxDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIGVycm9yOiBzdHJpbmc7XHJcbiAgICBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlRmFpbENvbnRyb2xsZXIgaW1wbGVtZW50cyBJRmlsZUZhaWxDb250cm9sbGVyIHtcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGVycm9yOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgYnV0dG9uczogQnV0dG9uc1VwbG9hZFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCRzY29wZTogbmcuSVNjb3BlKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIEluaXQgcGFyYW1ldGVyc1xyXG4gICAgICAgIHRoaXMudHlwZSA9ICRzY29wZVsndHlwZSddIHx8ICdmaWxlJztcclxuICAgICAgICB0aGlzLm5hbWUgPSAkc2NvcGVbJ25hbWUnXTtcclxuICAgICAgICB0aGlzLmJ1dHRvbnMgPSAkc2NvcGVbJ2J1dHRvbnMnXSB8fCBudWxsO1xyXG4gICAgICAgIHRoaXMuZXJyb3IgPSAkc2NvcGVbJ2Vycm9yJ10gfHwgbnVsbDtcclxuICAgICAgICBcclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdlcnJvcicsIChlcnJvcjogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcclxuICAgICAgICB9KVxyXG4gICAgICBcclxuICAgIH1cclxufSIsIu+7v1xyXG5pbXBvcnQge0ZpbGVTZWxlY3RDb250cm9sbGVyfSBmcm9tICcuL3NlbGVjdC9GaWxlU2VsZWN0Q29udHJvbGxlcic7XHJcbmltcG9ydCB7RmlsZVVwbG9hZENvbnRyb2xsZXJ9IGZyb20gJy4vdXBsb2FkL0ZpbGVVcGxvYWRDb250cm9sbGVyJztcclxuaW1wb3J0IHtGaWxlU3VjY2Vzc0NvbnRyb2xsZXJ9IGZyb20gJy4vc3VjY2Vzcy9GaWxlU3VjY2Vzc0NvbnRyb2xsZXInO1xyXG5pbXBvcnQge0ZpbGVGYWlsQ29udHJvbGxlcn0gZnJvbSAnLi9mYWlsL0ZpbGVGYWlsQ29udHJvbGxlcic7XHJcbmltcG9ydCB7RmlsZVVwbG9hZFNlcnZpY2V9IGZyb20gJy4vc2VydmljZS9GaWxlVXBsb2FkU2VydmljZSc7XHJcbmltcG9ydCB7RmlsZVN0YXJ0Q29udHJvbGxlcn0gZnJvbSAnLi9zdGFydC9GaWxlU3RhcnRDb250cm9sbGVyJztcclxuXHJcbigoKSA9PiB7XHJcbiAgICBmdW5jdGlvbiBmaWxlTW9kZWxEaXJlY3RpdmUoJHBhcnNlOiBhbnkpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgICAgICAgIGxpbms6IChzY29wZSwgZWxlbWVudCwgYXR0cnMpID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBtb2RlbCA9ICRwYXJzZShhdHRycy5maWxlTW9kZWwpO1xyXG4gICAgICAgICAgICAgICAgbGV0IG1vZGVsU2V0dGVyID0gbW9kZWwuYXNzaWduO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LmJpbmQoJ2NoYW5nZScsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBzY29wZS4kYXBwbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbFNldHRlcihzY29wZSwgZWxlbWVudFswXS5maWxlc1swXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZmlsZVNlbGVjdERpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxyXG4gICAgICAgICAgICBzY29wZToge1xyXG4gICAgICAgICAgICAgICAgbG9jYWxGaWxlOiAnPSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogRmlsZVNlbGVjdENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdzZWxlY3QvRmlsZVNlbGVjdC5odG1sJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgIGZ1bmN0aW9uIGZpbGVVcGxvYWREaXJlY3RpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogRmlsZVVwbG9hZENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkZ1bmN0aW9uOiAnPT9waXBCdXR0b25GdW5jdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgYnV0dG9uczogJz0/cGlwQnV0dG9ucycsXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogJz0/cGlwRXJyb3InLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogJz1waXBOYW1lJyxcclxuICAgICAgICAgICAgICAgIHN0YXRlOiAnPXBpcFN0YXRlJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICc9P3BpcFR5cGUnLFxyXG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3M6ICc9cGlwUHJvZ3Jlc3MnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAndXBsb2FkL0ZpbGVVcGxvYWQuaHRtbCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgICBmdW5jdGlvbiBmaWxlU3VjY2Vzc0RpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBGaWxlU3VjY2Vzc0NvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgIGJ1dHRvbnM6ICc9P3BpcEJ1dHRvbnMnLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogJz1waXBOYW1lJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICc9P3BpcFR5cGUnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3N1Y2Nlc3MvRmlsZVN1Y2Nlc3MuaHRtbCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgICBmdW5jdGlvbiBmaWxlRmFpbERpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBGaWxlRmFpbENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgIGJ1dHRvbnM6ICc9P3BpcEJ1dHRvbnMnLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogJz1waXBOYW1lJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICc9P3BpcFR5cGUnLFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6ICc9cGlwRXJyb3InXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnZmFpbC9GaWxlRmFpbC5odG1sJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZmlsZVN0YXJ0RGlyZWN0aXZlKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IEZpbGVTdGFydENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgIGJ1dHRvbnM6ICc9P3BpcEJ1dHRvbnMnLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogJz1waXBOYW1lJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICc9P3BpcFR5cGUnLFxyXG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3M6ICc9cGlwUHJvZ3Jlc3MnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnc3RhcnQvRmlsZVN0YXJ0Lmh0bWwnXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwRmlsZXMnLCBbXSlcclxuICAgICAgICAuZGlyZWN0aXZlKCdmaWxlTW9kZWwnLCBmaWxlTW9kZWxEaXJlY3RpdmUpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwRmlsZVNlbGVjdCcsIGZpbGVTZWxlY3REaXJlY3RpdmUpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwRmlsZVVwbG9hZCcsIGZpbGVVcGxvYWREaXJlY3RpdmUpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwU3VjY2VzVXBsb2FkJywgZmlsZVN1Y2Nlc3NEaXJlY3RpdmUpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwRmFpbFVwbG9hZCcsIGZpbGVGYWlsRGlyZWN0aXZlKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcFN0YXJ0VXBsb2FkJywgZmlsZVN0YXJ0RGlyZWN0aXZlKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdwaXBGaWxlVXBsb2FkJywgRmlsZVVwbG9hZFNlcnZpY2UpO1xyXG5cclxuXHJcbn0pKCk7XHJcbiIsImV4cG9ydCBpbnRlcmZhY2UgSUZpbGVTZWxlY3RDb250cm9sbGVyIHtcclxuICAgIGxvY2FsRmlsZTogYW55O1xyXG4gICAgb25VcGxvYWRCdXR0b25DbGljaygpOiB2b2lkIDtcclxuICAgIG9uRGVsZXRlQnV0dG9uQ2xpY2soKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVTZWxlY3RDb250cm9sbGVyIGltcGxlbWVudHMgSUZpbGVTZWxlY3RDb250cm9sbGVyIHtcclxuICAgIHB1YmxpYyBsb2NhbEZpbGU6IGFueTtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoJHNjb3BlOiBuZy5JU2NvcGUpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcbiAgICAgICAgdGhpcy5sb2NhbEZpbGUgPSAkc2NvcGVbJ2xvY2FsRmlsZSddO1xyXG4gICAgICAgICRzY29wZS4kd2F0Y2goJ3ZtLmxvY2FsRmlsZScsIChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICRzY29wZVsnbG9jYWxGaWxlJ10gPSBpdGVtO1xyXG4gICAgICAgIH0pIFxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblVwbG9hZEJ1dHRvbkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgICQoJyNpbnBfZmlsZScpLmNsaWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uRGVsZXRlQnV0dG9uQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sb2NhbEZpbGUgPSBudWxsO1xyXG4gICAgICAgIGxldCBmb3JtbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnBfZm9ybScpO1xyXG4gICAgICAgICg8YW55PmZvcm1sKS5yZXNldCgpO1xyXG5cclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkU3RhdGUge1xyXG4gICAgcHVibGljIHN0YXRpYyBBbGw6IHN0cmluZ1tdID0gWydzdGFydCcsICd1cGxvYWQnLCAnZmFpbCddO1xyXG4gICAgcHVibGljIHN0YXRpYyBTdGFydDogc3RyaW5nID0gJ3N0YXJ0JztcclxuICAgIHB1YmxpYyBzdGF0aWMgVXBsb2FkOiBzdHJpbmcgPSAndXBsb2FkJztcclxuICAgIHB1YmxpYyBzdGF0aWMgRmFpbDogc3RyaW5nID0gJ2ZhaWwnO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGaWxlVXBsb2FkU2VydmljZSB7XHJcbiAgICBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgc3RhdGU6IHN0cmluZztcclxuICAgIGVycm9yOiBzdHJpbmc7XHJcbiAgICB1cGxvYWQodXJsOiBzdHJpbmcsIGZpbGU6IGFueSwgdHJhbnNhY3Rpb246IGFueSwgY2FsbGJhY2s/OiAoZGF0YTogYW55LCBlcnI6IGFueSkgPT4gdm9pZCk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkU2VydmljZSBpbXBsZW1lbnRzIElGaWxlVXBsb2FkU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9odHRwOiBuZy5JSHR0cFNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIHByb2dyZXNzOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgc3RhdGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBlcnJvcjogc3RyaW5nID0gbnVsbDtcclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoXHJcbiAgICAgICAgJGh0dHA6IG5nLklIdHRwU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICB0aGlzLl9odHRwID0gJGh0dHA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwbG9hZCh1cmw6IHN0cmluZywgZmlsZTogYW55LCBjYWxsYmFjaz86IChkYXRhOiBhbnksIGVycjogYW55KSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhmaWxlKTsgXHJcblxyXG4gICAgICAgIGxldCBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGZkLmFwcGVuZCgnZmlsZScsIGZpbGUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMucHJvZ3Jlc3MgPSAwO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBGaWxlVXBsb2FkU3RhdGUuU3RhcnQ7XHJcbiAgICAgICAgdGhpcy5faHR0cC5wb3N0KHVybCwgZmQsIDxhbnk+e1xyXG4gICAgICAgICAgICB1cGxvYWRFdmVudEhhbmRsZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBwcm9ncmVzczogKGU6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlLmxlbmd0aENvbXB1dGFibGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9ncmVzcyA9IChlLmxvYWRlZCAvIGUudG90YWwpICogMTAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH1cclxuICAgICAgICB9KSAgICBcclxuICAgICAgICAuc3VjY2VzcygocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gRmlsZVVwbG9hZFN0YXRlLlVwbG9hZDtcclxuXHJcbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2socmVzcG9uc2UsIG51bGwpO1xyXG4gICAgICAgIH0pICAgIFxyXG4gICAgICAgIC5lcnJvcigocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gRmlsZVVwbG9hZFN0YXRlLkZhaWw7XHJcbiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSByZXNwb25zZS5FcnJvciB8fCByZXNwb25zZTtcclxuXHJcbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2sobnVsbCwgcmVzcG9uc2UpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59IiwiXHJcbmltcG9ydCB7XHJcbiAgICBCdXR0b25zVXBsb2FkXHJcbn0gZnJvbSBcIi4uL2NvbW1vbi9CdXR0b25zVXBsb2FkXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGaWxlU3RhcnRDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIHByb2dyZXNzOiBudW1iZXI7XHJcbiAgICBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlU3RhcnRDb250cm9sbGVyIGltcGxlbWVudHMgSUZpbGVTdGFydENvbnRyb2xsZXIge1xyXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcclxuICAgIHB1YmxpYyBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgcHVibGljIHR5cGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcblxyXG4gICAgY29uc3RydWN0b3IoJHNjb3BlOiBuZy5JU2NvcGUpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gSW5pdCBwYXJhbWV0ZXJzXHJcbiAgICAgICAgdGhpcy50eXBlID0gJHNjb3BlWyd0eXBlJ10gfHwgJ2ZpbGUnO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICRzY29wZVsnbmFtZSddO1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucyA9ICRzY29wZVsnYnV0dG9ucyddIHx8IG51bGw7XHJcbiAgICAgICAgdGhpcy5wcm9ncmVzcyA9ICRzY29wZVsncHJvZ3Jlc3MnXSB8fCBudWxsO1xyXG4gICAgICBcclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdwcm9ncmVzcycsIChwcm9ncmVzczogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBwcm9ncmVzcztcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59IiwiXHJcbmltcG9ydCB7XHJcbiAgICBCdXR0b25zVXBsb2FkXHJcbn0gZnJvbSBcIi4uL2NvbW1vbi9CdXR0b25zVXBsb2FkXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGaWxlU3VjY2Vzc0NvbnRyb2xsZXIge1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgYnV0dG9uczogQnV0dG9uc1VwbG9hZFtdO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlsZVN1Y2Nlc3NDb250cm9sbGVyIGltcGxlbWVudHMgSUZpbGVTdWNjZXNzQ29udHJvbGxlciB7XHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHR5cGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcblxyXG4gICAgY29uc3RydWN0b3IoJHNjb3BlOiBuZy5JU2NvcGUpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gSW5pdCBwYXJhbWV0ZXJzXHJcbiAgICAgICAgdGhpcy50eXBlID0gJHNjb3BlWyd0eXBlJ10gfHwgJ2ZpbGUnO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICRzY29wZVsnbmFtZSddO1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucyA9ICRzY29wZVsnYnV0dG9ucyddIHx8IG51bGw7XHJcbiAgICAgIFxyXG4gICAgfVxyXG59IiwiXHJcbmltcG9ydCB7XHJcbiAgICBJRmlsZVVwbG9hZFNlcnZpY2VcclxufSBmcm9tIFwiLi4vc2VydmljZS9GaWxlVXBsb2FkU2VydmljZVwiO1xyXG5cclxuaW1wb3J0IHtcclxuICAgIEJ1dHRvbnNVcGxvYWRcclxufSBmcm9tIFwiLi4vY29tbW9uL0J1dHRvbnNVcGxvYWRcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUZpbGVVcGxvYWRDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgb25DYW5jZWwoKTogdm9pZDtcclxuICAgIG9uUmV0cnkoKTogdm9pZDtcclxuICAgIG9uQWJvcnQoKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWRCdXR0b25zIHtcclxuICAgIHJldHJ5OiBGdW5jdGlvbjtcclxuICAgIGNhbmNlbDogRnVuY3Rpb247XHJcbiAgICBhYm9ydDogRnVuY3Rpb247XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkQ29udHJvbGxlciBpbXBsZW1lbnRzIElGaWxlVXBsb2FkQ29udHJvbGxlciB7XHJcbiAgICAvL3ByaXZhdGUgX2J1dHRvbkZ1bmN0aW9uOiBGaWxlVXBsb2FkQnV0dG9ucztcclxuICAgIHByaXZhdGUgX2Z1bmN0aW9uczogRmlsZVVwbG9hZEJ1dHRvbnM7XHJcbiAgICBwdWJsaWMgdXBsb2FkQnV0dG9uczogQnV0dG9uc1VwbG9hZFtdO1xyXG4gICAgcHVibGljIGZhaWxCdXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbiAgICBwdWJsaWMgc3RhcnRCdXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcblxyXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcclxuICAgIHB1YmxpYyB0eXBlOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgc3RhdGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgcHVibGljIGJ1dHRvbnM6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgZXJyb3I6IHN0cmluZyA9IG51bGw7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgJHNjb3BlOiBuZy5JU2NvcGVcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgdGhpcy5fZnVuY3Rpb25zID0gJHNjb3BlWydidXR0b25GdW5jdGlvbiddO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIEluaXQgcGFyYW1ldGVyc1xyXG4gICAgICAgIGlmICh0aGlzLl9mdW5jdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy51cGxvYWRCdXR0b25zID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuZmFpbEJ1dHRvbnMgPSBbXHJcbiAgICAgICAgICAgICAgICB7dGl0bGU6ICdDYW5jZWwnLCBjbGljazogKCkgPT4geyB0aGlzLm9uQ2FuY2VsKCl9fSxcclxuICAgICAgICAgICAgICAgIHt0aXRsZTogJ1JldHJ5JywgY2xpY2s6ICgpID0+IHsgdGhpcy5vblJldHJ5KCl9fVxyXG4gICAgICAgICAgICBdO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJ0QnV0dG9ucyA9IFtcclxuICAgICAgICAgICAgICAgIHt0aXRsZTogJ0Fib3J0JywgY2xpY2s6ICgpID0+IHsgdGhpcy5vbkFib3J0KCkgfX1cclxuICAgICAgICAgICAgXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5idXR0b25zID0gJHNjb3BlWydidXR0b25zJ10gfHwgZmFsc2U7XHJcbiAgICAgICAgdGhpcy50eXBlID0gJHNjb3BlWyd0eXBlJ10gfHwgJ2ZpbGUnO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICRzY29wZVsnbmFtZSddO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSAkc2NvcGVbJ3N0YXRlJ107XHJcbiAgICAgICAgdGhpcy5lcnJvciA9ICRzY29wZVsnZXJyb3InXTtcclxuICAgICAgICB0aGlzLnByb2dyZXNzID0gJHNjb3BlWydwcm9ncmVzcyddO1xyXG5cclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdzdGF0ZScsIChzdGF0ZTogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdlcnJvcicsIChlcnJvcjogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdwcm9ncmVzcycsIChwcm9ncmVzczogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBwcm9ncmVzcztcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkNhbmNlbCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fZnVuY3Rpb25zLmNhbmNlbCkgdGhpcy5fZnVuY3Rpb25zLmNhbmNlbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblJldHJ5KCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl9mdW5jdGlvbnMucmV0cnkpIHRoaXMuX2Z1bmN0aW9ucy5yZXRyeSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkFib3J0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9mdW5jdGlvbnMuYWJvcnQpIHRoaXMuX2Z1bmN0aW9ucy5hYm9ydCgpO1xyXG4gICAgfVxyXG5cclxufSIsIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnZmFpbC9GaWxlRmFpbC5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1maWxlcyBwaXAtcHJvZ3Jlc3MtZmlsZXNcIj48ZGl2IGNsYXNzPVwicGlwLWJvZHkgcGlwLXNjcm9sbCBwaXAtcHJvZ3Jlc3MtYm9keVwiPjxkaXYgY2xhc3M9XCJsYXlvdXQtcm93XCI+PGRpdiBjbGFzcz1cInBpcC1wcm9ncmVzcy1pY29uIGNvbG9yLWJhZGdlLWJnXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpjcm9zc1wiPjwvbWQtaWNvbj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLXByb2dyZXNzLWNvbnRlbnRcIj48aDMgY2xhc3M9XCJwaXAtdGl0bGVcIj5VcGxvYWRpbmcge3t2bS50eXBlfX0gZmFpbGVkIHdpdGggZXJyb3JzITwvaDM+PGRpdiBjbGFzcz1cImNvbG9yLXNlY29uZGFyeS10ZXh0IHBpcC1zdWJ0aXRsZVwiPnt7dm0ubmFtZX19PC9kaXY+PGRpdiBjbGFzcz1cImNvbG9yLWVycm9yIHBpcC1lcnJvclwiPnt7dm0uZXJyb3J9fTwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtZm9vdGVyIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXJcIiBuZy1pZj1cInZtLmJ1dHRvbnMgJiYgdm0uYnV0dG9ucy5sZW5ndGggPiAwXCI+PGRpdj48bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgbmctcmVwZWF0PVwiZmFpbCBpbiB2bS5idXR0b25zXCIgbmctY2xpY2s9XCJmYWlsLmNsaWNrKClcIj57ezo6ZmFpbC50aXRsZX19PC9tZC1idXR0b24+PC9kaXY+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3NlbGVjdC9GaWxlU2VsZWN0Lmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWZpbGUtc2VsZWN0XCI+PGZvcm0gaWQ9XCJpbnBfZm9ybVwiIGNsYXNzPVwicGlwLWhpZGRlbi1mb3JtXCI+PGlucHV0IHR5cGU9XCJmaWxlXCIgZmlsZS1tb2RlbD1cInZtLmxvY2FsRmlsZVwiIGlkPVwiaW5wX2ZpbGVcIiBuZy1tb2RlbD1cInZtLmxvY2FsRmlsZVwiPjwvZm9ybT48bWQtYnV0dG9uIGNsYXNzPVwibWQtcmFpc2VkIG1kLWFjY2VudCBwaXAtYnV0dG9uXCIgbmctY2xpY2s9XCJ2bS5vblVwbG9hZEJ1dHRvbkNsaWNrKClcIiBuZy1pZj1cIiF2bS5sb2NhbEZpbGVcIj5DaG9vc2UgRmlsZTwvbWQtYnV0dG9uPjxkaXYgbmctaWY9XCJ2bS5sb2NhbEZpbGUubmFtZVwiIGNsYXNzPVwicGlwLWZpbGUgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tc3RhcnQtY2VudGVyXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpkb2N1bWVudFwiIGNsYXNzPVwicGlwLWljb25cIj48L21kLWljb24+PGRpdiBjbGFzcz1cImZsZXhcIj48ZGl2IGNsYXNzPVwidGV4dC1ib2R5MiB0ZXh0LW92ZXJmbG93XCI+e3t2bS5sb2NhbEZpbGUubmFtZX19PC9kaXY+PGRpdiBuZy1pZj1cInZtLmxvY2FsRmlsZS5zaXplXCIgY2xhc3M9XCJjb2xvci1zZWNvbmRhcnktdGV4dFwiPnt7dm0ubG9jYWxGaWxlLnNpemV9fTwvZGl2PjwvZGl2PjxtZC1idXR0b24gbmctY2xpY2s9XCJ2bS5vbkRlbGV0ZUJ1dHRvbkNsaWNrKClcIiBjbGFzcz1cIm1kLWljb24tYnV0dG9uXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpjcm9zcy1jaXJjbGVcIj48L21kLWljb24+PC9tZC1idXR0b24+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3N0YXJ0L0ZpbGVTdGFydC5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1maWxlcyBwaXAtcHJvZ3Jlc3MtZmlsZXNcIj48ZGl2IGNsYXNzPVwicGlwLWJvZHkgcGlwLXNjcm9sbCBwaXAtcHJvZ3Jlc3MtYm9keVwiPjxkaXYgY2xhc3M9XCJsYXlvdXQtcm93XCI+PGRpdiBjbGFzcz1cInBpcC1wcm9ncmVzcy1pY29uIGJiLW9yYW5nZVwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6cGxheVwiPjwvbWQtaWNvbj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLXByb2dyZXNzLWNvbnRlbnRcIj48aDMgY2xhc3M9XCJwaXAtdGl0bGVcIj5VcGxvYWRpbmcge3s6OnZtLnR5cGV9fTwvaDM+PGRpdiBjbGFzcz1cImNvbG9yLXNlY29uZGFyeS10ZXh0IHBpcC1zdWJ0aXRsZVwiPnt7dm0ubmFtZX19PC9kaXY+PGRpdj48bWQtcHJvZ3Jlc3MtbGluZWFyIG1kLW1vZGU9XCJkZXRlcm1pbmF0ZVwiIGNsYXNzPVwibWQtYWNjZW50XCIgdmFsdWU9XCJ7e3ZtLnByb2dyZXNzfX1cIiBuZy1pZj1cInZtLnByb2dyZXNzIDwgMTAwXCI+PC9tZC1wcm9ncmVzcy1saW5lYXI+PG1kLXByb2dyZXNzLWxpbmVhciBtZC1tb2RlPVwiaW5kZXRlcm1pbmF0ZVwiIGNsYXNzPVwibWQtYWNjZW50XCIgbmctaWY9XCJ2bS5wcm9ncmVzcyA9PSAxMDBcIj48L21kLXByb2dyZXNzLWxpbmVhcj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWZvb3RlciBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1lbmQtY2VudGVyXCIgbmctaWY9XCJ2bS5idXR0b25zXCI+PGRpdj48bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgbmctcmVwZWF0PVwic3RhcnQgaW4gdm0uYnV0dG9uc1wiIG5nLWNsaWNrPVwic3RhcnQuY2xpY2soKVwiPnt7c3RhcnQudGl0bGV9fTwvbWQtYnV0dG9uPjwvZGl2PjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzdWNjZXNzL0ZpbGVTdWNjZXNzLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWZpbGVzIHBpcC1wcm9ncmVzcy1maWxlc1wiPjxkaXYgY2xhc3M9XCJwaXAtYm9keSBwaXAtc2Nyb2xsIHBpcC1wcm9ncmVzcy1ib2R5XCI+PGRpdiBjbGFzcz1cImxheW91dC1yb3dcIj48ZGl2IGNsYXNzPVwicGlwLXByb2dyZXNzLWljb24gYmItZ3JlZW5cIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmNoZWNrXCI+PC9tZC1pY29uPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtcHJvZ3Jlc3MtY29udGVudFwiPjxoMyBjbGFzcz1cInBpcC10aXRsZVwiPlVwbG9hZGVkIHt7Ojp2bS50eXBlfX0gc3VjY2Vzc2Z1bGx5ITwvaDM+PGRpdiBjbGFzcz1cImNvbG9yLXNlY29uZGFyeS10ZXh0IHBpcC1zdWJ0aXRsZVwiPnt7dm0ubmFtZX19PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1mb290ZXIgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tZW5kLWNlbnRlclwiIG5nLWlmPVwidm0uYnV0dG9ucyAmJiB2bS5idXR0b25zLmxlbmd0aCA+IDBcIj48ZGl2PjxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1yZXBlYXQ9XCJzdGFydCBpbiB2bS5idXR0b25zXCIgbmctY2xpY2s9XCJzdGFydC5jbGljaygpXCI+e3tzdGFydC50aXRsZX19PC9tZC1idXR0b24+PC9kaXY+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3VwbG9hZC9GaWxlVXBsb2FkLmh0bWwnLFxuICAgICc8ZGl2PjxwaXAtc3VjY2VzLXVwbG9hZCBuZy1pZj1cInZtLnN0YXRlID09IFxcJ3VwbG9hZFxcJ1wiIHBpcC1uYW1lPVwidm0ubmFtZVwiIHBpcC10eXBlPVwidm0udHlwZVwiIHBpcC1idXR0b25zPVwidm0uYnV0dG9uc1wiPjwvcGlwLXN1Y2Nlcy11cGxvYWQ+PHBpcC1mYWlsLXVwbG9hZCBuZy1pZj1cInZtLnN0YXRlID09IFxcJ2ZhaWxcXCdcIiBwaXAtbmFtZT1cInZtLm5hbWVcIiBwaXAtdHlwZT1cInZtLnR5cGVcIiBwaXAtZXJyb3I9XCJ2bS5lcnJvclwiIHBpcC1idXR0b25zPVwidm0uZmFpbEJ1dHRvbnNcIj48L3BpcC1mYWlsLXVwbG9hZD48cGlwLXN0YXJ0LXVwbG9hZCBuZy1pZj1cInZtLnN0YXRlID09IFxcJ3N0YXJ0XFwnXCIgcGlwLW5hbWU9XCJ2bS5uYW1lXCIgcGlwLXR5cGU9XCJ2bS50eXBlXCIgcGlwLXByb2dyZXNzPVwidm0ucHJvZ3Jlc3NcIiBwaXAtYnV0dG9ucz1cInZtLnN0YXJ0QnV0dG9uc1wiPjwvcGlwLXN0YXJ0LXVwbG9hZD48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcC13ZWJ1aS1maWxlcy1odG1sLm1pbi5qcy5tYXBcbiJdfQ=="}