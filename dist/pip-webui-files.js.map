{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/files.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","src/upload/FileUploadController.ts","temp/pip-webui-files-html.js"],"names":[],"mappings":"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":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFiles.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","ï»¿\r\nimport {FileSelectController} from './select/FileSelectController';\r\nimport {FileUploadController} from './upload/FileUploadController';\r\nimport {FileUploadService} from './service/FileUploadService';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'select/FileSelect.html'\r\n        };\r\n    }\r\n\r\n     function fileUploadDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileUploadController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttonFunction: '=?pipButtonFunctions',\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                state: '=pipState',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'upload/FileUpload.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', [])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        .directive('pipFileUpload', fileUploadDirective)\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    state: string;\r\n    error: string;\r\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    private _http: ng.IHttpService;\r\n\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor(\r\n        $http: ng.IHttpService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._http = $http;\r\n    }\r\n\r\n    public upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void {\r\n        //console.log(file); \r\n\r\n        let fd = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        transaction.begin(FileUploadState.Start);\r\n        this.state = FileUploadState.Start;\r\n        this._http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.state = FileUploadState.Upload;\r\n            transaction.end(FileUploadState.Upload);\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.state = FileUploadState.Fail;\r\n            transaction.end(FileUploadState.Fail);\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nexport interface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\nexport class FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\nexport class FileUploadController implements IFileUploadController {\r\n    private _service: IFileUploadService;\r\n    private _buttonFunction: FileUploadButtons;\r\n    \r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n\r\n    constructor(\r\n        $scope: ng.IScope, \r\n        pipFileUpload: IFileUploadService\r\n    ) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this._buttonFunction = $scope['buttonFunction'] || new FileUploadButtons();\r\n        this.buttons = $scope['buttons'] || false;\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.state = $scope['state'];\r\n        this.progress = $scope['progress'];\r\n\r\n        $scope.$watch('state', (state: string) => {\r\n            this.state = state;\r\n        })\r\n\r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n\r\n        this._service = pipFileUpload;\r\n    }\r\n\r\n    public errorFail(): string {\r\n        return this._service.error;\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._buttonFunction.cancel) this._buttonFunction.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._buttonFunction.retry) this._buttonFunction.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this._buttonFunction.abort) this._buttonFunction.abort();\r\n    }\r\n\r\n}","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\">\\n' +\n    '      <form id=\"inp_form\" class=\"pip-hidden-form\">\\n' +\n    '        <input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></input>\\n' +\n    '      </form>\\n' +\n    '        <md-button class=\"md-raised md-accent pip-button\"\\n' +\n    '                   ng-click=\"vm.onUploadButtonClick()\" \\n' +\n    '                   ng-if=\"!vm.localFile\">Choose File</md-button>\\n' +\n    '        <div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\">\\n' +\n    '          <md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon>\\n' +\n    '            <div class=\"flex\">\\n' +\n    '                <div class=\"text-body2 text-overflow\">\\n' +\n    '                    {{vm.localFile.name}}\\n' +\n    '                </div>\\n' +\n    '                <div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div>\\n' +\n    '            </div>\\n' +\n    '            <md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\">\\n' +\n    '              <md-icon md-svg-icon=\"icons:cross-circle\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon\"\\n' +\n    '         ng-class=\"{\\'color-badge-bg\\': vm.state == \\'fail\\',\\n' +\n    '                    \\'bb-orange\\': vm.state == \\'start\\',\\n' +\n    '                    \\'bb-green\\': vm.state == \\'upload\\' }\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:check\" ng-if=\"vm.state == \\'upload\\'\"></md-icon>\\n' +\n    '            <md-icon md-svg-icon=\"icons:play\" ng-if=\"vm.state == \\'start\\'\"></md-icon>\\n' +\n    '            <md-icon md-svg-icon=\"icons:cross\" ng-if=\"vm.state == \\'fail\\'\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\" ng-if=\"vm.state == \\'start\\'\">\\n' +\n    '                Uploading {{vm.type}}\\n' +\n    '            </h3>\\n' +\n    '            <h3 class=\"pip-title\" ng-if=\"vm.state == \\'upload\\'\">\\n' +\n    '                Uploaded {{vm.type}} successfully!\\n' +\n    '            </h3>\\n' +\n    '            <h3 class=\"pip-title\" ng-if=\"vm.state == \\'fail\\'\">\\n' +\n    '                Uploading {{vm.type}} failed with errors!\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{vm.name}}\\n' +\n    '            </div>\\n' +\n    '            <div class=\"color-error pip-error\"\\n' +\n    '                 ng-if=\"vm.state == \\'fail\\'\">\\n' +\n    '                 {{vm.errorFail()}}\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <div ng-if=\"vm.state == \\'start\\'\">\\n' +\n    '                <md-progress-linear md-mode=\"determinate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    value=\"{{vm.progress}}\" \\n' +\n    '                    ng-if=\"vm.progress < 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '                <md-progress-linear md-mode=\"indeterminate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    ng-if=\"vm.progress == 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"md-accent\" \\n' +\n    '                       ng-click=\"vm.onCancel()\" \\n' +\n    '                       ng-show=\"!vm.state || vm.state == \\'fail\\'\">\\n' +\n    '                Cancel\\n' +\n    '            </md-button>\\n' +\n    '\\n' +\n    '            <md-button class=\"md-accent\" \\n' +\n    '                       ng-click=\"vm.onRetry()\"\\n' +\n    '                       ng-show=\"vm.state == \\'fail\\'\">\\n' +\n    '                Retry\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" \\n' +\n    '                       ng-click=\"vm.onAbort()\"\\n' +\n    '                       ng-show=\"vm.state == \\'start\\'\">\\n' +\n    '                Abort\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZGVwZW5kZW5jaWVzL3RyYW5zbGF0ZS50cyIsInNyYy9maWxlcy50cyIsInNyYy9zZWxlY3QvRmlsZVNlbGVjdENvbnRyb2xsZXIudHMiLCJzcmMvc2VydmljZS9GaWxlVXBsb2FkU2VydmljZS50cyIsInNyYy91cGxvYWQvRmlsZVVwbG9hZENvbnRyb2xsZXIudHMiLCJ0ZW1wL3BpcC13ZWJ1aS1maWxlcy1odG1sLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDT0EsQ0FBQztJQUNHLFlBQVksQ0FBQztJQUViLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFMUQsVUFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsVUFBVSxTQUFTO1FBQzlDLElBQUksWUFBWSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO2NBQzFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRTNDLE1BQU0sQ0FBQyxVQUFVLEdBQUc7WUFDaEIsTUFBTSxDQUFDLFlBQVksR0FBSSxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDcEUsQ0FBQyxDQUFBO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsRUFBRSxDQUFDOzs7O0FDcEJMLHNFQUFtRTtBQUNuRSxzRUFBbUU7QUFDbkUsaUVBQThEO0FBRTlELENBQUM7SUFDRyw0QkFBNEIsTUFBVztRQUNuQyxVQUFVLENBQUM7UUFFWCxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLElBQUksRUFBRSxVQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSztnQkFDeEIsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxT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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKipcclxuICogQGZpbGUgT3B0aW9uYWwgZmlsdGVyIHRvIHRyYW5zbGF0ZSBzdHJpbmcgcmVzb3VyY2VzXHJcbiAqIEBjb3B5cmlnaHQgRGlnaXRhbCBMaXZpbmcgU29mdHdhcmUgQ29ycC4gMjAxNC0yMDE2XHJcbiAqL1xyXG4gXHJcbi8qIGdsb2JhbCBhbmd1bGFyICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIHZhciB0aGlzTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRyYW5zbGF0ZScsIFtdKTtcclxuXHJcbiAgICB0aGlzTW9kdWxlLmZpbHRlcigndHJhbnNsYXRlJywgZnVuY3Rpb24gKCRpbmplY3Rvcikge1xyXG4gICAgICAgIHZhciBwaXBUcmFuc2xhdGUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGUnKSBcclxuICAgICAgICAgICAgPyAkaW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGUnKSA6IG51bGw7XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwaXBUcmFuc2xhdGUgID8gcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZShrZXkpIHx8IGtleSA6IGtleTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbn0pKCk7XHJcbiIsIu+7v1xyXG5pbXBvcnQge0ZpbGVTZWxlY3RDb250cm9sbGVyfSBmcm9tICcuL3NlbGVjdC9GaWxlU2VsZWN0Q29udHJvbGxlcic7XHJcbmltcG9ydCB7RmlsZVVwbG9hZENvbnRyb2xsZXJ9IGZyb20gJy4vdXBsb2FkL0ZpbGVVcGxvYWRDb250cm9sbGVyJztcclxuaW1wb3J0IHtGaWxlVXBsb2FkU2VydmljZX0gZnJvbSAnLi9zZXJ2aWNlL0ZpbGVVcGxvYWRTZXJ2aWNlJztcclxuXHJcbigoKSA9PiB7XHJcbiAgICBmdW5jdGlvbiBmaWxlTW9kZWxEaXJlY3RpdmUoJHBhcnNlOiBhbnkpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgICAgICAgIGxpbms6IChzY29wZSwgZWxlbWVudCwgYXR0cnMpID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBtb2RlbCA9ICRwYXJzZShhdHRycy5maWxlTW9kZWwpO1xyXG4gICAgICAgICAgICAgICAgbGV0IG1vZGVsU2V0dGVyID0gbW9kZWwuYXNzaWduO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LmJpbmQoJ2NoYW5nZScsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBzY29wZS4kYXBwbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbFNldHRlcihzY29wZSwgZWxlbWVudFswXS5maWxlc1swXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZmlsZVNlbGVjdERpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxyXG4gICAgICAgICAgICBzY29wZToge1xyXG4gICAgICAgICAgICAgICAgbG9jYWxGaWxlOiAnPSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogRmlsZVNlbGVjdENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdzZWxlY3QvRmlsZVNlbGVjdC5odG1sJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgIGZ1bmN0aW9uIGZpbGVVcGxvYWREaXJlY3RpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogRmlsZVVwbG9hZENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkZ1bmN0aW9uOiAnPT9waXBCdXR0b25GdW5jdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgYnV0dG9uczogJz0/cGlwQnV0dG9ucycsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnPXBpcE5hbWUnLFxyXG4gICAgICAgICAgICAgICAgc3RhdGU6ICc9cGlwU3RhdGUnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJz0/cGlwVHlwZScsXHJcbiAgICAgICAgICAgICAgICBwcm9ncmVzczogJz1waXBQcm9ncmVzcydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd1cGxvYWQvRmlsZVVwbG9hZC5odG1sJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcEZpbGVzJywgW10pXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgnZmlsZU1vZGVsJywgZmlsZU1vZGVsRGlyZWN0aXZlKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcEZpbGVTZWxlY3QnLCBmaWxlU2VsZWN0RGlyZWN0aXZlKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcEZpbGVVcGxvYWQnLCBmaWxlVXBsb2FkRGlyZWN0aXZlKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdwaXBGaWxlVXBsb2FkJywgRmlsZVVwbG9hZFNlcnZpY2UpO1xyXG5cclxuXHJcbn0pKCk7XHJcbiIsImV4cG9ydCBpbnRlcmZhY2UgSUZpbGVTZWxlY3RDb250cm9sbGVyIHtcclxuICAgIGxvY2FsRmlsZTogYW55O1xyXG4gICAgb25VcGxvYWRCdXR0b25DbGljaygpOiB2b2lkIDtcclxuICAgIG9uRGVsZXRlQnV0dG9uQ2xpY2soKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVTZWxlY3RDb250cm9sbGVyIGltcGxlbWVudHMgSUZpbGVTZWxlY3RDb250cm9sbGVyIHtcclxuICAgIHB1YmxpYyBsb2NhbEZpbGU6IGFueTtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoJHNjb3BlOiBuZy5JU2NvcGUpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcbiAgICAgICAgdGhpcy5sb2NhbEZpbGUgPSAkc2NvcGVbJ2xvY2FsRmlsZSddO1xyXG4gICAgICAgICRzY29wZS4kd2F0Y2goJ3ZtLmxvY2FsRmlsZScsIChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICRzY29wZVsnbG9jYWxGaWxlJ10gPSBpdGVtO1xyXG4gICAgICAgIH0pIFxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblVwbG9hZEJ1dHRvbkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgICQoJyNpbnBfZmlsZScpLmNsaWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uRGVsZXRlQnV0dG9uQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5sb2NhbEZpbGUgPSBudWxsO1xyXG4gICAgICAgIGxldCBmb3JtbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnBfZm9ybScpO1xyXG4gICAgICAgICg8YW55PmZvcm1sKS5yZXNldCgpO1xyXG5cclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkU3RhdGUge1xyXG4gICAgcHVibGljIHN0YXRpYyBBbGw6IHN0cmluZ1tdID0gWydzdGFydCcsICd1cGxvYWQnLCAnZmFpbCddO1xyXG4gICAgcHVibGljIHN0YXRpYyBTdGFydDogc3RyaW5nID0gJ3N0YXJ0JztcclxuICAgIHB1YmxpYyBzdGF0aWMgVXBsb2FkOiBzdHJpbmcgPSAndXBsb2FkJztcclxuICAgIHB1YmxpYyBzdGF0aWMgRmFpbDogc3RyaW5nID0gJ2ZhaWwnO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGaWxlVXBsb2FkU2VydmljZSB7XHJcbiAgICBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgc3RhdGU6IHN0cmluZztcclxuICAgIGVycm9yOiBzdHJpbmc7XHJcbiAgICB1cGxvYWQodXJsOiBzdHJpbmcsIGZpbGU6IGFueSwgdHJhbnNhY3Rpb246IGFueSwgY2FsbGJhY2s/OiAoZGF0YTogYW55LCBlcnI6IGFueSkgPT4gdm9pZCk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkU2VydmljZSBpbXBsZW1lbnRzIElGaWxlVXBsb2FkU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9odHRwOiBuZy5JSHR0cFNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIHByb2dyZXNzOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgc3RhdGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBlcnJvcjogc3RyaW5nID0gbnVsbDtcclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoXHJcbiAgICAgICAgJGh0dHA6IG5nLklIdHRwU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICB0aGlzLl9odHRwID0gJGh0dHA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwbG9hZCh1cmw6IHN0cmluZywgZmlsZTogYW55LCB0cmFuc2FjdGlvbjogYW55LCBjYWxsYmFjaz86IChkYXRhOiBhbnksIGVycjogYW55KSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhmaWxlKTsgXHJcblxyXG4gICAgICAgIGxldCBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGZkLmFwcGVuZCgnZmlsZScsIGZpbGUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMucHJvZ3Jlc3MgPSAwO1xyXG4gICAgICAgIHRyYW5zYWN0aW9uLmJlZ2luKEZpbGVVcGxvYWRTdGF0ZS5TdGFydCk7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IEZpbGVVcGxvYWRTdGF0ZS5TdGFydDtcclxuICAgICAgICB0aGlzLl9odHRwLnBvc3QodXJsLCBmZCwgPGFueT57XHJcbiAgICAgICAgICAgIHVwbG9hZEV2ZW50SGFuZGxlcnM6IHtcclxuICAgICAgICAgICAgICAgIHByb2dyZXNzOiAoZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUubGVuZ3RoQ29tcHV0YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2dyZXNzID0gKGUubG9hZGVkIC8gZS50b3RhbCkgKiAxMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiB1bmRlZmluZWQgfVxyXG4gICAgICAgIH0pICAgIFxyXG4gICAgICAgIC5zdWNjZXNzKChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBGaWxlVXBsb2FkU3RhdGUuVXBsb2FkO1xyXG4gICAgICAgICAgICB0cmFuc2FjdGlvbi5lbmQoRmlsZVVwbG9hZFN0YXRlLlVwbG9hZCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKHJlc3BvbnNlLCBudWxsKTtcclxuICAgICAgICB9KSAgICBcclxuICAgICAgICAuZXJyb3IoKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IEZpbGVVcGxvYWRTdGF0ZS5GYWlsO1xyXG4gICAgICAgICAgICB0cmFuc2FjdGlvbi5lbmQoRmlsZVVwbG9hZFN0YXRlLkZhaWwpO1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yID0gcmVzcG9uc2UuRXJyb3IgfHwgcmVzcG9uc2U7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKG51bGwsIHJlc3BvbnNlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcblxyXG5cclxufSIsIlxyXG5pbXBvcnQge1xyXG4gICAgSUZpbGVVcGxvYWRTZXJ2aWNlXHJcbn0gZnJvbSBcIi4uL3NlcnZpY2UvRmlsZVVwbG9hZFNlcnZpY2VcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUZpbGVVcGxvYWRDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgb25DYW5jZWwoKTogdm9pZDtcclxuICAgIG9uUmV0cnkoKTogdm9pZDtcclxuICAgIG9uQWJvcnQoKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWRCdXR0b25zIHtcclxuICAgIHJldHJ5OiBGdW5jdGlvbjtcclxuICAgIGNhbmNlbDogRnVuY3Rpb247XHJcbiAgICBhYm9ydDogRnVuY3Rpb247XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkQ29udHJvbGxlciBpbXBsZW1lbnRzIElGaWxlVXBsb2FkQ29udHJvbGxlciB7XHJcbiAgICBwcml2YXRlIF9zZXJ2aWNlOiBJRmlsZVVwbG9hZFNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9idXR0b25GdW5jdGlvbjogRmlsZVVwbG9hZEJ1dHRvbnM7XHJcbiAgICBcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgcHJvZ3Jlc3M6IG51bWJlcjtcclxuICAgIHB1YmxpYyBidXR0b25zOiBib29sZWFuO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRzY29wZTogbmcuSVNjb3BlLCBcclxuICAgICAgICBwaXBGaWxlVXBsb2FkOiBJRmlsZVVwbG9hZFNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuICAgICAgICBcclxuICAgICAgICAvLyBJbml0IHBhcmFtZXRlcnNcclxuICAgICAgICB0aGlzLl9idXR0b25GdW5jdGlvbiA9ICRzY29wZVsnYnV0dG9uRnVuY3Rpb24nXSB8fCBuZXcgRmlsZVVwbG9hZEJ1dHRvbnMoKTtcclxuICAgICAgICB0aGlzLmJ1dHRvbnMgPSAkc2NvcGVbJ2J1dHRvbnMnXSB8fCBmYWxzZTtcclxuICAgICAgICB0aGlzLnR5cGUgPSAkc2NvcGVbJ3R5cGUnXSB8fCAnZmlsZSc7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJHNjb3BlWyduYW1lJ107XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9ICRzY29wZVsnc3RhdGUnXTtcclxuICAgICAgICB0aGlzLnByb2dyZXNzID0gJHNjb3BlWydwcm9ncmVzcyddO1xyXG5cclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdzdGF0ZScsIChzdGF0ZTogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCdwcm9ncmVzcycsIChwcm9ncmVzczogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBwcm9ncmVzcztcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICB0aGlzLl9zZXJ2aWNlID0gcGlwRmlsZVVwbG9hZDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZXJyb3JGYWlsKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlcnZpY2UuZXJyb3I7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uQ2FuY2VsKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl9idXR0b25GdW5jdGlvbi5jYW5jZWwpIHRoaXMuX2J1dHRvbkZ1bmN0aW9uLmNhbmNlbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblJldHJ5KCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl9idXR0b25GdW5jdGlvbi5yZXRyeSkgdGhpcy5fYnV0dG9uRnVuY3Rpb24ucmV0cnkoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25BYm9ydCgpIHtcclxuICAgICAgICBpZiAodGhpcy5fYnV0dG9uRnVuY3Rpb24uYWJvcnQpIHRoaXMuX2J1dHRvbkZ1bmN0aW9uLmFib3J0KCk7XHJcbiAgICB9XHJcblxyXG59IiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWxlY3QvRmlsZVNlbGVjdC5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1maWxlLXNlbGVjdFwiPlxcbicgK1xuICAgICcgICAgICA8Zm9ybSBpZD1cImlucF9mb3JtXCIgY2xhc3M9XCJwaXAtaGlkZGVuLWZvcm1cIj5cXG4nICtcbiAgICAnICAgICAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiBmaWxlLW1vZGVsPVwidm0ubG9jYWxGaWxlXCIgaWQ9XCJpbnBfZmlsZVwiIG5nLW1vZGVsPVwidm0ubG9jYWxGaWxlXCI+PC9pbnB1dD5cXG4nICtcbiAgICAnICAgICAgPC9mb3JtPlxcbicgK1xuICAgICcgICAgICAgIDxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWQgbWQtYWNjZW50IHBpcC1idXR0b25cIlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgbmctY2xpY2s9XCJ2bS5vblVwbG9hZEJ1dHRvbkNsaWNrKClcIiBcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgIG5nLWlmPVwiIXZtLmxvY2FsRmlsZVwiPkNob29zZSBGaWxlPC9tZC1idXR0b24+XFxuJyArXG4gICAgJyAgICAgICAgPGRpdiBuZy1pZj1cInZtLmxvY2FsRmlsZS5uYW1lXCIgY2xhc3M9XCJwaXAtZmlsZSBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1zdGFydC1jZW50ZXJcIj5cXG4nICtcbiAgICAnICAgICAgICAgIDxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6ZG9jdW1lbnRcIiBjbGFzcz1cInBpcC1pY29uXCI+PC9tZC1pY29uPlxcbicgK1xuICAgICcgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleFwiPlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtYm9keTIgdGV4dC1vdmVyZmxvd1wiPlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgIHt7dm0ubG9jYWxGaWxlLm5hbWV9fVxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgPC9kaXY+XFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICA8ZGl2IG5nLWlmPVwidm0ubG9jYWxGaWxlLnNpemVcIiBjbGFzcz1cImNvbG9yLXNlY29uZGFyeS10ZXh0XCI+e3t2bS5sb2NhbEZpbGUuc2l6ZX19PC9kaXY+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDwvZGl2PlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtYnV0dG9uIG5nLWNsaWNrPVwidm0ub25EZWxldGVCdXR0b25DbGljaygpXCIgY2xhc3M9XCJtZC1pY29uLWJ1dHRvblwiPlxcbicgK1xuICAgICcgICAgICAgICAgICAgIDxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6Y3Jvc3MtY2lyY2xlXCI+PC9tZC1pY29uPlxcbicgK1xuICAgICcgICAgICAgICAgICA8L21kLWJ1dHRvbj5cXG4nICtcbiAgICAnICAgICAgICA8L2Rpdj5cXG4nICtcbiAgICAnPC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3VwbG9hZC9GaWxlVXBsb2FkLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWZpbGVzIHBpcC1wcm9ncmVzcy1maWxlc1wiPlxcbicgK1xuICAgICcgIDxkaXYgY2xhc3M9XCJwaXAtYm9keSBwaXAtc2Nyb2xsIHBpcC1wcm9ncmVzcy1ib2R5XCI+IFxcbicgK1xuICAgICcgICAgPGRpdiBjbGFzcz1cImxheW91dC1yb3dcIj5cXG4nICtcbiAgICAnICAgICAgICA8ZGl2IGNsYXNzPVwicGlwLXByb2dyZXNzLWljb25cIlxcbicgK1xuICAgICcgICAgICAgICBuZy1jbGFzcz1cIntcXCdjb2xvci1iYWRnZS1iZ1xcJzogdm0uc3RhdGUgPT0gXFwnZmFpbFxcJyxcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgICBcXCdiYi1vcmFuZ2VcXCc6IHZtLnN0YXRlID09IFxcJ3N0YXJ0XFwnLFxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgIFxcJ2JiLWdyZWVuXFwnOiB2bS5zdGF0ZSA9PSBcXCd1cGxvYWRcXCcgfVwiPlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmNoZWNrXCIgbmctaWY9XCJ2bS5zdGF0ZSA9PSBcXCd1cGxvYWRcXCdcIj48L21kLWljb24+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6cGxheVwiIG5nLWlmPVwidm0uc3RhdGUgPT0gXFwnc3RhcnRcXCdcIj48L21kLWljb24+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6Y3Jvc3NcIiBuZy1pZj1cInZtLnN0YXRlID09IFxcJ2ZhaWxcXCdcIj48L21kLWljb24+XFxuJyArXG4gICAgJyAgICAgICAgPC9kaXY+XFxuJyArXG4gICAgJyAgICAgICAgPGRpdiBjbGFzcz1cInBpcC1wcm9ncmVzcy1jb250ZW50XCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxoMyBjbGFzcz1cInBpcC10aXRsZVwiIG5nLWlmPVwidm0uc3RhdGUgPT0gXFwnc3RhcnRcXCdcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIFVwbG9hZGluZyB7e3ZtLnR5cGV9fVxcbicgK1xuICAgICcgICAgICAgICAgICA8L2gzPlxcbicgK1xuICAgICcgICAgICAgICAgICA8aDMgY2xhc3M9XCJwaXAtdGl0bGVcIiBuZy1pZj1cInZtLnN0YXRlID09IFxcJ3VwbG9hZFxcJ1wiPlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgVXBsb2FkZWQge3t2bS50eXBlfX0gc3VjY2Vzc2Z1bGx5IVxcbicgK1xuICAgICcgICAgICAgICAgICA8L2gzPlxcbicgK1xuICAgICcgICAgICAgICAgICA8aDMgY2xhc3M9XCJwaXAtdGl0bGVcIiBuZy1pZj1cInZtLnN0YXRlID09IFxcJ2ZhaWxcXCdcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIFVwbG9hZGluZyB7e3ZtLnR5cGV9fSBmYWlsZWQgd2l0aCBlcnJvcnMhXFxuJyArXG4gICAgJyAgICAgICAgICAgIDwvaDM+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1zZWNvbmRhcnktdGV4dCBwaXAtc3VidGl0bGVcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIHt7dm0ubmFtZX19XFxuJyArXG4gICAgJyAgICAgICAgICAgIDwvZGl2PlxcbicgK1xuICAgICcgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZXJyb3IgcGlwLWVycm9yXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICBuZy1pZj1cInZtLnN0YXRlID09IFxcJ2ZhaWxcXCdcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICB7e3ZtLmVycm9yRmFpbCgpfX1cXG4nICtcbiAgICAnICAgICAgICAgICAgPC9kaXY+XFxuJyArXG4gICAgJ1xcbicgK1xuICAgICcgICAgICAgICAgICA8ZGl2IG5nLWlmPVwidm0uc3RhdGUgPT0gXFwnc3RhcnRcXCdcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIDxtZC1wcm9ncmVzcy1saW5lYXIgbWQtbW9kZT1cImRldGVybWluYXRlXCIgXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJtZC1hY2NlbnRcIiBcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cInt7dm0ucHJvZ3Jlc3N9fVwiIFxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgIG5nLWlmPVwidm0ucHJvZ3Jlc3MgPCAxMDBcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIDwvbWQtcHJvZ3Jlc3MtbGluZWFyPlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgPG1kLXByb2dyZXNzLWxpbmVhciBtZC1tb2RlPVwiaW5kZXRlcm1pbmF0ZVwiIFxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwibWQtYWNjZW50XCIgXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgbmctaWY9XCJ2bS5wcm9ncmVzcyA9PSAxMDBcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIDwvbWQtcHJvZ3Jlc3MtbGluZWFyPlxcbicgK1xuICAgICcgICAgICAgICAgICA8L2Rpdj5cXG4nICtcbiAgICAnICAgICAgICA8L2Rpdj5cXG4nICtcbiAgICAnICAgIDwvZGl2PlxcbicgK1xuICAgICcgIDwvZGl2PlxcbicgK1xuICAgICcgIDxkaXYgY2xhc3M9XCJwaXAtZm9vdGVyIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXJcIiBuZy1pZj1cInZtLmJ1dHRvbnNcIj5cXG4nICtcbiAgICAnICAgICAgICA8ZGl2PlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgICAgbmctY2xpY2s9XCJ2bS5vbkNhbmNlbCgpXCIgXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgICAgbmctc2hvdz1cIiF2bS5zdGF0ZSB8fCB2bS5zdGF0ZSA9PSBcXCdmYWlsXFwnXCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICBDYW5jZWxcXG4nICtcbiAgICAnICAgICAgICAgICAgPC9tZC1idXR0b24+XFxuJyArXG4gICAgJ1xcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICAgICAgbmctY2xpY2s9XCJ2bS5vblJldHJ5KClcIlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgICAgIG5nLXNob3c9XCJ2bS5zdGF0ZSA9PSBcXCdmYWlsXFwnXCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICBSZXRyeVxcbicgK1xuICAgICcgICAgICAgICAgICA8L21kLWJ1dHRvbj5cXG4nICtcbiAgICAnICAgICAgICAgICAgPG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWFjY2VudFwiIFxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsaWNrPVwidm0ub25BYm9ydCgpXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgICAgICBuZy1zaG93PVwidm0uc3RhdGUgPT0gXFwnc3RhcnRcXCdcIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIEFib3J0XFxuJyArXG4gICAgJyAgICAgICAgICAgIDwvbWQtYnV0dG9uPlxcbicgK1xuICAgICcgICAgICAgIDwvZGl2PlxcbicgK1xuICAgICcgICAgPC9kaXY+ICBcXG4nICtcbiAgICAnPC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXAtd2VidWktZmlsZXMtaHRtbC5qcy5tYXBcbiJdfQ=="}