{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/Translate.ts","src/fail/FileFail.ts","src/index.ts","src/model/FileModel.ts","src/select/FileSelect.ts","src/service/FileUploadService.ts","src/start/FileStart.ts","src/success/FileSuccess.ts","src/upload/FileUpload.ts","temp/pip-webui-files-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(() => {\r\n    'use strict';\r\n    function filerTranslate($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular.module('pipFiles.Translate', [])\r\n        .filter('translate', filerTranslate);\r\n\r\n})();","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\n\r\ninterface IFileFailBindings {\r\n    [key: string]: any;\r\n\r\n    buttons: any,\r\n    name: any,\r\n    type: any,\r\n    error: any\r\n}\r\n\r\nconst FileFailBindings: IFileFailBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    error: '<pipError'\r\n}\r\n\r\nclass FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n}\r\n\r\n\r\ninterface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileFailController implements IFileFailController, IFileFailBindings {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n(() => {\r\n\r\n    const fileFailComponent: ng.IComponentOptions = {\r\n        controller: FileFailController,\r\n        bindings: FileFailBindings,\r\n        templateUrl: 'fail/FileFail.html'\r\n    };\r\n\r\n    angular\r\n        .module('pipFiles.FailUpload', [])\r\n        .component('pipFailUpload', fileFailComponent)\r\n\r\n\r\n})();","﻿\r\nimport {FileUploadService} from './service/FileUploadService';\r\n\r\nimport './model/FileModel';\r\nimport './success/FileSuccess';\r\nimport './upload/FileUpload';\r\nimport './start/FileStart';\r\nimport './fail/FileFail';\r\nimport './select/FileSelect';\r\n\r\n(() => {\r\n\r\n\r\n    angular\r\n        .module('pipFiles', [\r\n            'pipFiles.Model',\r\n            'pipFiles.SuccessUpload',\r\n            'pipFiles.FileUpload',\r\n            'pipFiles.StartUpload',\r\n            'pipFiles.FailUpload',\r\n            'pipFiles.Select'\r\n        ])\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.Model', [])\r\n        .directive('fileModel', fileModelDirective)\r\n\r\n\r\n})();","interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nclass FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        /*this.localFile = $scope['localFile'];\r\n         */\r\n        $scope.$watch('$ctrl.localFile', (item) => {\r\n            //this.localFile = item;\r\n            console.log('aa', item);\r\n            //$scope['localFile'] = item;\r\n            console.log($scope);\r\n        })\r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}\r\n\r\n\r\n(() => {\r\n   \r\n\r\n    const fileSelectDirective = {\r\n            restrict: 'E',\r\n            replace: true,\r\n            bindings: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            templateUrl: 'select/FileSelect.html'\r\n    }\r\n    \r\n    angular\r\n        .module('pipFiles.Select', [])\r\n        .component('pipFileSelect', fileSelectDirective)\r\n\r\n\r\n})();\r\n","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    state: string;\r\n    error: string;\r\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor( private $http: ng.IHttpService) {}\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n        \r\n        let fd: FormData = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        this.state = FileUploadState.Start;\r\n        this.$http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.state = FileUploadState.Upload;\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.state = FileUploadState.Fail;\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileStartBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any,\r\n    progress: any\r\n}\r\n\r\nconst FileStartBindings: IFileStartBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    progress: '<?pipProgress'\r\n};\r\n\r\n\r\nclass FileStartChanges implements ng.IOnChangesObject, IFileStartBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\ninterface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number = 0;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() {}\r\n\r\n     public $onChanges(changes: FileStartChanges) {\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n(() => {\r\n \r\n    const fileStartDirective = {\r\n        controller: FileStartController,\r\n        bindings: FileStartBindings,\r\n        templateUrl: 'start/FileStart.html'\r\n    };\r\n\r\n    angular\r\n        .module('pipFiles.StartUpload', [])\r\n        .component('pipStartUpload', fileStartDirective)\r\n\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileSuccessBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any\r\n}\r\n\r\nconst FileSuccessBindings: IFileSuccessBindings = {\r\n    buttons: '=?pipButtons',\r\n    name: '=pipName',\r\n    type: '=?pipType',\r\n};\r\n\r\n\r\ninterface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\r\n    public name: string;\r\n    public type: string = 'file';\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() {}\r\n\r\n    public $onChanges(changes) {}\r\n}\r\n\r\n\r\n(() => {\r\n \r\n     const fileSuccessDirective = {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            bindings: FileSuccessBindings,\r\n            templateUrl: 'success/FileSuccess.html'\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.SuccessUpload', [])\r\n        .component('pipSuccesUpload', fileSuccessDirective)\r\n\r\n\r\n})();","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nclass FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\ninterface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\nexport interface IFileUploadBindings {\r\n    [key: string]: any;\r\n\r\n    buttonFunction: any,\r\n    buttons: any,\r\n    error: any,\r\n    name: any,\r\n    state: any,\r\n    type: any,\r\n    progress: any\r\n}\r\n\r\nconst FileUploadBindings: IFileUploadBindings = {\r\n    buttonFunction: '<?pipButtonFunctions',\r\n    buttons: '<?pipButtons',\r\n    error: '<?pipError',\r\n    name: '<pipName',\r\n    state: '<pipState',\r\n    type: '<?pipType',\r\n    progress: '<pipProgress'\r\n}\r\n\r\nclass FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\r\n    buttons: ng.IChangesObject<boolean>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    state: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\nclass FileUploadController implements IFileUploadController, IFileUploadBindings {\r\n    public buttonFunction: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor( $scope: ng.IScope ) {}\r\n    \r\n    public $onInit() {\r\n         if (this.buttons) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n    }\r\n    \r\n    public $onChanges(changes: FileUploadChanges) {\r\n        if (changes.state) {\r\n            this.state = changes.state.currentValue;\r\n        }\r\n\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n        if (changes.error) {\r\n            this.error = changes.error.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\r\n    }\r\n\r\n}\r\n\r\n\r\nconst fileUploadDirective = {\r\n    controller: FileUploadController,\r\n    bindings: FileUploadBindings,\r\n    templateUrl: 'upload/FileUpload.html'\r\n};\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipFiles.FileUpload', [])\r\n        .component('pipFileUpload', fileUploadDirective)\r\n       \r\n})();","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{$ctrl.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div class=\"color-error pip-error\">{{$ctrl.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"$ctrl.localFile\" id=\"inp_file\" ng-model=\"$ctrl.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"$ctrl.onUploadButtonClick()\" ng-if=\"!$ctrl.localFile\">Choose File</md-button><div ng-if=\"$ctrl.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{$ctrl.localFile.name}}</div><div ng-if=\"$ctrl.localFile.size\" class=\"color-secondary-text\">{{$ctrl.localFile.size}}</div></div><md-button ng-click=\"$ctrl.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::$ctrl.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{$ctrl.progress}}\" ng-if=\"$ctrl.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"$ctrl.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in $ctrl.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"$ctrl.state == \\'upload\\' && (!$ctrl.buttons || $ctrl.uploadButtons)\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-buttons=\"$ctrl.uploadButtons\"></pip-succes-upload><pip-fail-upload ng-if=\"$ctrl.state == \\'fail\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-error=\"$ctrl.error\" pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"$ctrl.state == \\'start\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-progress=\"$ctrl.progress\" pip-buttons=\"$ctrl.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY29tbW9uL0J1dHRvbnNVcGxvYWQudHMiLCJzcmMvZGVwZW5kZW5jaWVzL1RyYW5zbGF0ZS50cyIsInNyYy9mYWlsL0ZpbGVGYWlsLnRzIiwic3JjL2luZGV4LnRzIiwic3JjL21vZGVsL0ZpbGVNb2RlbC50cyIsInNyYy9zZWxlY3QvRmlsZVNlbGVjdC50cyIsInNyYy9zZXJ2aWNlL0ZpbGVVcGxvYWRTZXJ2aWNlLnRzIiwic3JjL3N0YXJ0L0ZpbGVTdGFydC50cyIsInNyYy9zdWNjZXNzL0ZpbGVTdWNjZXNzLnRzIiwic3JjL3VwbG9hZC9GaWxlVXBsb2FkLnRzIiwidGVtcC9waXAtd2VidWktZmlsZXMtaHRtbC5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBO0lBQUE7SUFHQSxDQUFDO0lBQUQsb0JBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLHNDQUFhOztBQ08xQixDQUFDO0lBQ0csWUFBWSxDQUFDO0lBQ2Isd0JBQXdCLFNBQXdDO1FBQzVELElBQUksWUFBWSxHQUFRLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO2NBQy9DLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRTNDLE1BQU0sQ0FBQyxVQUFDLEdBQVc7WUFDZixNQUFNLENBQUMsWUFBWSxHQUFJLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNwRSxDQUFDLENBQUE7SUFDTCxDQUFDO0lBRUQsT0FBTyxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLENBQUM7U0FDbkMsTUFBTSxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsQ0FBQztBQUU3QyxDQUFDLENBQUMsRUFBRSxDQUFDOzs7O0FDTkwsSUFBTSxnQkFBZ0IsR0FBc0I7SUFDeEMsT0FBTyxFQUFFLGNB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LENBQUMscUJBQXFCLEVBQUUsRUFBRSxDQUFDO1NBQ2pDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsbUJBQW1CLENBQUMsQ0FBQTtBQUV4RCxDQUFDLENBQUMsRUFBRSxDQUFDOztBQ2xJTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImV4cG9ydCBjbGFzcyBCdXR0b25zVXBsb2FkIHtcclxuICAgIHB1YmxpYyB0aXRsZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGNsaWNrOiBGdW5jdGlvbjtcclxufSIsIi8qKlxyXG4gKiBAZmlsZSBPcHRpb25hbCBmaWx0ZXIgdG8gdHJhbnNsYXRlIHN0cmluZyByZXNvdXJjZXNcclxuICogQGNvcHlyaWdodCBEaWdpdGFsIExpdmluZyBTb2Z0d2FyZSBDb3JwLiAyMDE0LTIwMTZcclxuICovXHJcbiBcclxuLyogZ2xvYmFsIGFuZ3VsYXIgKi9cclxuXHJcbigoKSA9PiB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcbiAgICBmdW5jdGlvbiBmaWxlclRyYW5zbGF0ZSgkaW5qZWN0b3I6IGFuZ3VsYXIuYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XHJcbiAgICAgICAgbGV0IHBpcFRyYW5zbGF0ZTogYW55ID0gJGluamVjdG9yLmhhcygncGlwVHJhbnNsYXRlJykgXHJcbiAgICAgICAgICAgID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlJykgOiBudWxsO1xyXG5cclxuICAgICAgICByZXR1cm4gKGtleTogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBwaXBUcmFuc2xhdGUgID8gcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZShrZXkpIHx8IGtleSA6IGtleTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRyYW5zbGF0ZScsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ3RyYW5zbGF0ZScsIGZpbGVyVHJhbnNsYXRlKTtcclxuXHJcbn0pKCk7IiwiXHJcbmltcG9ydCB7XHJcbiAgICBCdXR0b25zVXBsb2FkXHJcbn0gZnJvbSBcIi4uL2NvbW1vbi9CdXR0b25zVXBsb2FkXCI7XHJcblxyXG5cclxuaW50ZXJmYWNlIElGaWxlRmFpbEJpbmRpbmdzIHtcclxuICAgIFtrZXk6IHN0cmluZ106IGFueTtcclxuXHJcbiAgICBidXR0b25zOiBhbnksXHJcbiAgICBuYW1lOiBhbnksXHJcbiAgICB0eXBlOiBhbnksXHJcbiAgICBlcnJvcjogYW55XHJcbn1cclxuXHJcbmNvbnN0IEZpbGVGYWlsQmluZGluZ3M6IElGaWxlRmFpbEJpbmRpbmdzID0ge1xyXG4gICAgYnV0dG9uczogJzw/cGlwQnV0dG9ucycsXHJcbiAgICBuYW1lOiAnPHBpcE5hbWUnLFxyXG4gICAgdHlwZTogJzw/cGlwVHlwZScsXHJcbiAgICBlcnJvcjogJzxwaXBFcnJvcidcclxufVxyXG5cclxuY2xhc3MgRmlsZUZhaWxDaGFuZ2VzIGltcGxlbWVudHMgbmcuSU9uQ2hhbmdlc09iamVjdCwgSUZpbGVGYWlsQmluZGluZ3Mge1xyXG4gICAgW2tleTogc3RyaW5nXTogbmcuSUNoYW5nZXNPYmplY3Q8YW55PjtcclxuXHJcbiAgICBidXR0b25zOiBuZy5JQ2hhbmdlc09iamVjdDxCdXR0b25zVXBsb2FkW10+O1xyXG4gICAgZXJyb3I6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XHJcbiAgICBuYW1lOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmc+O1xyXG4gICAgdHlwZTogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxufVxyXG5cclxuXHJcbmludGVyZmFjZSBJRmlsZUZhaWxDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIGVycm9yOiBzdHJpbmc7XHJcbiAgICBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbn1cclxuXHJcbmNsYXNzIEZpbGVGYWlsQ29udHJvbGxlciBpbXBsZW1lbnRzIElGaWxlRmFpbENvbnRyb2xsZXIsIElGaWxlRmFpbEJpbmRpbmdzIHtcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGVycm9yOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgYnV0dG9uczogQnV0dG9uc1VwbG9hZFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCRzY29wZTogbmcuSVNjb3BlKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIEluaXQgcGFyYW1ldGVyc1xyXG4gICAgICAgIFxyXG4gICAgICAgICRzY29wZS4kd2F0Y2goJ2Vycm9yJywgKGVycm9yOiBzdHJpbmcpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuKCgpID0+IHtcclxuXHJcbiAgICBjb25zdCBmaWxlRmFpbENvbXBvbmVudDogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XHJcbiAgICAgICAgY29udHJvbGxlcjogRmlsZUZhaWxDb250cm9sbGVyLFxyXG4gICAgICAgIGJpbmRpbmdzOiBGaWxlRmFpbEJpbmRpbmdzLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnZmFpbC9GaWxlRmFpbC5odG1sJ1xyXG4gICAgfTtcclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwRmlsZXMuRmFpbFVwbG9hZCcsIFtdKVxyXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcEZhaWxVcGxvYWQnLCBmaWxlRmFpbENvbXBvbmVudClcclxuXHJcblxyXG59KSgpOyIsIu+7v1xyXG5pbXBvcnQge0ZpbGVVcGxvYWRTZXJ2aWNlfSBmcm9tICcuL3NlcnZpY2UvRmlsZVVwbG9hZFNlcnZpY2UnO1xyXG5cclxuaW1wb3J0ICcuL21vZGVsL0ZpbGVNb2RlbCc7XHJcbmltcG9ydCAnLi9zdWNjZXNzL0ZpbGVTdWNjZXNzJztcclxuaW1wb3J0ICcuL3VwbG9hZC9GaWxlVXBsb2FkJztcclxuaW1wb3J0ICcuL3N0YXJ0L0ZpbGVTdGFydCc7XHJcbmltcG9ydCAnLi9mYWlsL0ZpbGVGYWlsJztcclxuaW1wb3J0ICcuL3NlbGVjdC9GaWxlU2VsZWN0JztcclxuXHJcbigoKSA9PiB7XHJcblxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCdwaXBGaWxlcycsIFtcclxuICAgICAgICAgICAgJ3BpcEZpbGVzLk1vZGVsJyxcclxuICAgICAgICAgICAgJ3BpcEZpbGVzLlN1Y2Nlc3NVcGxvYWQnLFxyXG4gICAgICAgICAgICAncGlwRmlsZXMuRmlsZVVwbG9hZCcsXHJcbiAgICAgICAgICAgICdwaXBGaWxlcy5TdGFydFVwbG9hZCcsXHJcbiAgICAgICAgICAgICdwaXBGaWxlcy5GYWlsVXBsb2FkJyxcclxuICAgICAgICAgICAgJ3BpcEZpbGVzLlNlbGVjdCdcclxuICAgICAgICBdKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdwaXBGaWxlVXBsb2FkJywgRmlsZVVwbG9hZFNlcnZpY2UpO1xyXG5cclxuXHJcbn0pKCk7XHJcbiIsIlxyXG4oKCkgPT4ge1xyXG4gICAgZnVuY3Rpb24gZmlsZU1vZGVsRGlyZWN0aXZlKCRwYXJzZTogYW55KSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0EnLFxyXG4gICAgICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgbW9kZWwgPSAkcGFyc2UoYXR0cnMuZmlsZU1vZGVsKTtcclxuICAgICAgICAgICAgICAgIGxldCBtb2RlbFNldHRlciA9IG1vZGVsLmFzc2lnbjtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5iaW5kKCdjaGFuZ2UnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUuJGFwcGx5KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWxTZXR0ZXIoc2NvcGUsIGVsZW1lbnRbMF0uZmlsZXNbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwRmlsZXMuTW9kZWwnLCBbXSlcclxuICAgICAgICAuZGlyZWN0aXZlKCdmaWxlTW9kZWwnLCBmaWxlTW9kZWxEaXJlY3RpdmUpXHJcblxyXG5cclxufSkoKTsiLCJpbnRlcmZhY2UgSUZpbGVTZWxlY3RDb250cm9sbGVyIHtcclxuICAgIGxvY2FsRmlsZTogYW55O1xyXG4gICAgb25VcGxvYWRCdXR0b25DbGljaygpOiB2b2lkIDtcclxuICAgIG9uRGVsZXRlQnV0dG9uQ2xpY2soKTogdm9pZDtcclxufVxyXG5cclxuY2xhc3MgRmlsZVNlbGVjdENvbnRyb2xsZXIgaW1wbGVtZW50cyBJRmlsZVNlbGVjdENvbnRyb2xsZXIge1xyXG4gICAgcHVibGljIGxvY2FsRmlsZTogYW55O1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3Rvcigkc2NvcGU6IG5nLklTY29wZSkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuICAgICAgICAvKnRoaXMubG9jYWxGaWxlID0gJHNjb3BlWydsb2NhbEZpbGUnXTtcclxuICAgICAgICAgKi9cclxuICAgICAgICAkc2NvcGUuJHdhdGNoKCckY3RybC5sb2NhbEZpbGUnLCAoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAvL3RoaXMubG9jYWxGaWxlID0gaXRlbTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2FhJywgaXRlbSk7XHJcbiAgICAgICAgICAgIC8vJHNjb3BlWydsb2NhbEZpbGUnXSA9IGl0ZW07XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCRzY29wZSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25VcGxvYWRCdXR0b25DbGljaygpOiB2b2lkIHtcclxuICAgICAgICAkKCcjaW5wX2ZpbGUnKS5jbGljaygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkRlbGV0ZUJ1dHRvbkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubG9jYWxGaWxlID0gbnVsbDtcclxuICAgICAgICBsZXQgZm9ybWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wX2Zvcm0nKTtcclxuICAgICAgICAoPGFueT5mb3JtbCkucmVzZXQoKTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4oKCkgPT4ge1xyXG4gICBcclxuXHJcbiAgICBjb25zdCBmaWxlU2VsZWN0RGlyZWN0aXZlID0ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxyXG4gICAgICAgICAgICBiaW5kaW5nczoge1xyXG4gICAgICAgICAgICAgICAgbG9jYWxGaWxlOiAnPSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogRmlsZVNlbGVjdENvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnc2VsZWN0L0ZpbGVTZWxlY3QuaHRtbCdcclxuICAgIH1cclxuICAgIFxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcEZpbGVzLlNlbGVjdCcsIFtdKVxyXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcEZpbGVTZWxlY3QnLCBmaWxlU2VsZWN0RGlyZWN0aXZlKVxyXG5cclxuXHJcbn0pKCk7XHJcbiIsImV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkU3RhdGUge1xyXG4gICAgcHVibGljIHN0YXRpYyBBbGw6IHN0cmluZ1tdID0gWydzdGFydCcsICd1cGxvYWQnLCAnZmFpbCddO1xyXG4gICAgcHVibGljIHN0YXRpYyBTdGFydDogc3RyaW5nID0gJ3N0YXJ0JztcclxuICAgIHB1YmxpYyBzdGF0aWMgVXBsb2FkOiBzdHJpbmcgPSAndXBsb2FkJztcclxuICAgIHB1YmxpYyBzdGF0aWMgRmFpbDogc3RyaW5nID0gJ2ZhaWwnO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGaWxlVXBsb2FkU2VydmljZSB7XHJcbiAgICBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgc3RhdGU6IHN0cmluZztcclxuICAgIGVycm9yOiBzdHJpbmc7XHJcbiAgICB1cGxvYWQodXJsOiBzdHJpbmcsIGZpbGU6IGFueSwgdHJhbnNhY3Rpb246IGFueSwgY2FsbGJhY2s/OiAoZGF0YTogYW55LCBlcnI6IGFueSkgPT4gdm9pZCk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkU2VydmljZSBpbXBsZW1lbnRzIElGaWxlVXBsb2FkU2VydmljZSB7XHJcbiAgICBwdWJsaWMgcHJvZ3Jlc3M6IG51bWJlcjtcclxuICAgIHB1YmxpYyBzdGF0ZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGVycm9yOiBzdHJpbmcgPSBudWxsO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJpdmF0ZSAkaHR0cDogbmcuSUh0dHBTZXJ2aWNlKSB7fVxyXG5cclxuICAgIHB1YmxpYyB1cGxvYWQodXJsOiBzdHJpbmcsIGZpbGU6IGFueSwgY2FsbGJhY2s/OiAoZGF0YTogYW55LCBlcnI6IGFueSkgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBmZDogRm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBmZC5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLnByb2dyZXNzID0gMDtcclxuICAgICAgICB0aGlzLnN0YXRlID0gRmlsZVVwbG9hZFN0YXRlLlN0YXJ0O1xyXG4gICAgICAgIHRoaXMuJGh0dHAucG9zdCh1cmwsIGZkLCA8YW55PntcclxuICAgICAgICAgICAgdXBsb2FkRXZlbnRIYW5kbGVyczoge1xyXG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3M6IChlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZS5sZW5ndGhDb21wdXRhYmxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSAoZS5sb2FkZWQgLyBlLnRvdGFsKSAqIDEwMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZCB9XHJcbiAgICAgICAgfSkgICAgXHJcbiAgICAgICAgLnN1Y2Nlc3MoKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IEZpbGVVcGxvYWRTdGF0ZS5VcGxvYWQ7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKHJlc3BvbnNlLCBudWxsKTtcclxuICAgICAgICB9KSAgICBcclxuICAgICAgICAuZXJyb3IoKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IEZpbGVVcGxvYWRTdGF0ZS5GYWlsO1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yID0gcmVzcG9uc2UuRXJyb3IgfHwgcmVzcG9uc2U7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKG51bGwsIHJlc3BvbnNlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSIsIlxyXG5pbXBvcnQge1xyXG4gICAgQnV0dG9uc1VwbG9hZFxyXG59IGZyb20gXCIuLi9jb21tb24vQnV0dG9uc1VwbG9hZFwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJRmlsZVN0YXJ0QmluZGluZ3Mge1xyXG4gICAgW2tleTogc3RyaW5nXTogYW55O1xyXG5cclxuICAgIHR5cGU6IGFueVxyXG4gICAgYnV0dG9uczogYW55LFxyXG4gICAgbmFtZTogYW55LFxyXG4gICAgcHJvZ3Jlc3M6IGFueVxyXG59XHJcblxyXG5jb25zdCBGaWxlU3RhcnRCaW5kaW5nczogSUZpbGVTdGFydEJpbmRpbmdzID0ge1xyXG4gICAgYnV0dG9uczogJzw/cGlwQnV0dG9ucycsXHJcbiAgICBuYW1lOiAnPHBpcE5hbWUnLFxyXG4gICAgdHlwZTogJzw/cGlwVHlwZScsXHJcbiAgICBwcm9ncmVzczogJzw/cGlwUHJvZ3Jlc3MnXHJcbn07XHJcblxyXG5cclxuY2xhc3MgRmlsZVN0YXJ0Q2hhbmdlcyBpbXBsZW1lbnRzIG5nLklPbkNoYW5nZXNPYmplY3QsIElGaWxlU3RhcnRCaW5kaW5ncyB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBuZy5JQ2hhbmdlc09iamVjdDxhbnk+O1xyXG5cclxuICAgIGJ1dHRvbnM6IG5nLklDaGFuZ2VzT2JqZWN0PEJ1dHRvbnNVcGxvYWRbXT47XHJcbiAgICBuYW1lOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmc+O1xyXG4gICAgdHlwZTogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxuICAgIHByb2dyZXNzOiBuZy5JQ2hhbmdlc09iamVjdDxudW1iZXI+O1xyXG59XHJcblxyXG5cclxuaW50ZXJmYWNlIElGaWxlU3RhcnRDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIHByb2dyZXNzOiBudW1iZXI7XHJcbiAgICBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbn1cclxuXHJcbmNsYXNzIEZpbGVTdGFydENvbnRyb2xsZXIgaW1wbGVtZW50cyBJRmlsZVN0YXJ0Q29udHJvbGxlciB7XHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHByb2dyZXNzOiBudW1iZXIgPSAwO1xyXG4gICAgcHVibGljIHR5cGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAgICBwdWJsaWMgJG9uQ2hhbmdlcyhjaGFuZ2VzOiBGaWxlU3RhcnRDaGFuZ2VzKSB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXMucHJvZ3Jlc3MpIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9ncmVzcyA9IGNoYW5nZXMucHJvZ3Jlc3MuY3VycmVudFZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuKCgpID0+IHtcclxuIFxyXG4gICAgY29uc3QgZmlsZVN0YXJ0RGlyZWN0aXZlID0ge1xyXG4gICAgICAgIGNvbnRyb2xsZXI6IEZpbGVTdGFydENvbnRyb2xsZXIsXHJcbiAgICAgICAgYmluZGluZ3M6IEZpbGVTdGFydEJpbmRpbmdzLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnc3RhcnQvRmlsZVN0YXJ0Lmh0bWwnXHJcbiAgICB9O1xyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCdwaXBGaWxlcy5TdGFydFVwbG9hZCcsIFtdKVxyXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcFN0YXJ0VXBsb2FkJywgZmlsZVN0YXJ0RGlyZWN0aXZlKVxyXG5cclxuXHJcbn0pKCk7XHJcbiIsIlxyXG5pbXBvcnQge1xyXG4gICAgQnV0dG9uc1VwbG9hZFxyXG59IGZyb20gXCIuLi9jb21tb24vQnV0dG9uc1VwbG9hZFwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJRmlsZVN1Y2Nlc3NCaW5kaW5ncyB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XHJcblxyXG4gICAgdHlwZTogYW55XHJcbiAgICBidXR0b25zOiBhbnksXHJcbiAgICBuYW1lOiBhbnlcclxufVxyXG5cclxuY29uc3QgRmlsZVN1Y2Nlc3NCaW5kaW5nczogSUZpbGVTdWNjZXNzQmluZGluZ3MgPSB7XHJcbiAgICBidXR0b25zOiAnPT9waXBCdXR0b25zJyxcclxuICAgIG5hbWU6ICc9cGlwTmFtZScsXHJcbiAgICB0eXBlOiAnPT9waXBUeXBlJyxcclxufTtcclxuXHJcblxyXG5pbnRlcmZhY2UgSUZpbGVTdWNjZXNzQ29udHJvbGxlciB7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICBidXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbn1cclxuXHJcbmNsYXNzIEZpbGVTdWNjZXNzQ29udHJvbGxlciBpbXBsZW1lbnRzIElGaWxlU3VjY2Vzc0NvbnRyb2xsZXIsIElGaWxlU3VjY2Vzc0JpbmRpbmdzIHtcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nID0gJ2ZpbGUnO1xyXG4gICAgcHVibGljIGJ1dHRvbnM6IEJ1dHRvbnNVcGxvYWRbXTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHt9XHJcblxyXG4gICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlcykge31cclxufVxyXG5cclxuXHJcbigoKSA9PiB7XHJcbiBcclxuICAgICBjb25zdCBmaWxlU3VjY2Vzc0RpcmVjdGl2ZSA9IHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogRmlsZVN1Y2Nlc3NDb250cm9sbGVyLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgICAgIGJpbmRpbmdzOiBGaWxlU3VjY2Vzc0JpbmRpbmdzLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3N1Y2Nlc3MvRmlsZVN1Y2Nlc3MuaHRtbCdcclxuICAgIH1cclxuXHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcEZpbGVzLlN1Y2Nlc3NVcGxvYWQnLCBbXSlcclxuICAgICAgICAuY29tcG9uZW50KCdwaXBTdWNjZXNVcGxvYWQnLCBmaWxlU3VjY2Vzc0RpcmVjdGl2ZSlcclxuXHJcblxyXG59KSgpOyIsIlxyXG5pbXBvcnQge1xyXG4gICAgSUZpbGVVcGxvYWRTZXJ2aWNlXHJcbn0gZnJvbSBcIi4uL3NlcnZpY2UvRmlsZVVwbG9hZFNlcnZpY2VcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgICBCdXR0b25zVXBsb2FkXHJcbn0gZnJvbSBcIi4uL2NvbW1vbi9CdXR0b25zVXBsb2FkXCI7XHJcblxyXG5jbGFzcyBGaWxlVXBsb2FkQnV0dG9ucyB7XHJcbiAgICByZXRyeTogRnVuY3Rpb247XHJcbiAgICBjYW5jZWw6IEZ1bmN0aW9uO1xyXG4gICAgYWJvcnQ6IEZ1bmN0aW9uO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgSUZpbGVVcGxvYWRDb250cm9sbGVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBwcm9ncmVzczogbnVtYmVyO1xyXG4gICAgb25DYW5jZWwoKTogdm9pZDtcclxuICAgIG9uUmV0cnkoKTogdm9pZDtcclxuICAgIG9uQWJvcnQoKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJRmlsZVVwbG9hZEJpbmRpbmdzIHtcclxuICAgIFtrZXk6IHN0cmluZ106IGFueTtcclxuXHJcbiAgICBidXR0b25GdW5jdGlvbjogYW55LFxyXG4gICAgYnV0dG9uczogYW55LFxyXG4gICAgZXJyb3I6IGFueSxcclxuICAgIG5hbWU6IGFueSxcclxuICAgIHN0YXRlOiBhbnksXHJcbiAgICB0eXBlOiBhbnksXHJcbiAgICBwcm9ncmVzczogYW55XHJcbn1cclxuXHJcbmNvbnN0IEZpbGVVcGxvYWRCaW5kaW5nczogSUZpbGVVcGxvYWRCaW5kaW5ncyA9IHtcclxuICAgIGJ1dHRvbkZ1bmN0aW9uOiAnPD9waXBCdXR0b25GdW5jdGlvbnMnLFxyXG4gICAgYnV0dG9uczogJzw/cGlwQnV0dG9ucycsXHJcbiAgICBlcnJvcjogJzw/cGlwRXJyb3InLFxyXG4gICAgbmFtZTogJzxwaXBOYW1lJyxcclxuICAgIHN0YXRlOiAnPHBpcFN0YXRlJyxcclxuICAgIHR5cGU6ICc8P3BpcFR5cGUnLFxyXG4gICAgcHJvZ3Jlc3M6ICc8cGlwUHJvZ3Jlc3MnXHJcbn1cclxuXHJcbmNsYXNzIEZpbGVVcGxvYWRDaGFuZ2VzIGltcGxlbWVudHMgbmcuSU9uQ2hhbmdlc09iamVjdCwgSUZpbGVVcGxvYWRCaW5kaW5ncyB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBuZy5JQ2hhbmdlc09iamVjdDxhbnk+O1xyXG5cclxuICAgIGJ1dHRvbkZ1bmN0aW9uOiBuZy5JQ2hhbmdlc09iamVjdDxGaWxlVXBsb2FkQnV0dG9ucz47XHJcbiAgICBidXR0b25zOiBuZy5JQ2hhbmdlc09iamVjdDxib29sZWFuPjtcclxuICAgIGVycm9yOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmc+O1xyXG4gICAgbmFtZTogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxuICAgIHN0YXRlOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmc+O1xyXG4gICAgdHlwZTogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxuICAgIHByb2dyZXNzOiBuZy5JQ2hhbmdlc09iamVjdDxudW1iZXI+O1xyXG59XHJcblxyXG5cclxuY2xhc3MgRmlsZVVwbG9hZENvbnRyb2xsZXIgaW1wbGVtZW50cyBJRmlsZVVwbG9hZENvbnRyb2xsZXIsIElGaWxlVXBsb2FkQmluZGluZ3Mge1xyXG4gICAgcHVibGljIGJ1dHRvbkZ1bmN0aW9uOiBGaWxlVXBsb2FkQnV0dG9ucztcclxuICAgIHB1YmxpYyB1cGxvYWRCdXR0b25zOiBCdXR0b25zVXBsb2FkW107XHJcbiAgICBwdWJsaWMgZmFpbEJ1dHRvbnM6IEJ1dHRvbnNVcGxvYWRbXTtcclxuICAgIHB1YmxpYyBzdGFydEJ1dHRvbnM6IEJ1dHRvbnNVcGxvYWRbXTtcclxuXHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHR5cGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBzdGF0ZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHByb2dyZXNzOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgYnV0dG9uczogYm9vbGVhbjtcclxuICAgIHB1YmxpYyBlcnJvcjogc3RyaW5nID0gbnVsbDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvciggJHNjb3BlOiBuZy5JU2NvcGUgKSB7fVxyXG4gICAgXHJcbiAgICBwdWJsaWMgJG9uSW5pdCgpIHtcclxuICAgICAgICAgaWYgKHRoaXMuYnV0dG9ucykge1xyXG4gICAgICAgICAgICB0aGlzLnVwbG9hZEJ1dHRvbnMgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5mYWlsQnV0dG9ucyA9IFtcclxuICAgICAgICAgICAgICAgIHt0aXRsZTogJ0NhbmNlbCcsIGNsaWNrOiAoKSA9PiB7IHRoaXMub25DYW5jZWwoKX19LFxyXG4gICAgICAgICAgICAgICAge3RpdGxlOiAnUmV0cnknLCBjbGljazogKCkgPT4geyB0aGlzLm9uUmV0cnkoKX19XHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRCdXR0b25zID0gW1xyXG4gICAgICAgICAgICAgICAge3RpdGxlOiAnQWJvcnQnLCBjbGljazogKCkgPT4geyB0aGlzLm9uQWJvcnQoKSB9fVxyXG4gICAgICAgICAgICBdO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlczogRmlsZVVwbG9hZENoYW5nZXMpIHtcclxuICAgICAgICBpZiAoY2hhbmdlcy5zdGF0ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gY2hhbmdlcy5zdGF0ZS5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoY2hhbmdlcy5wcm9ncmVzcykge1xyXG4gICAgICAgICAgICB0aGlzLnByb2dyZXNzID0gY2hhbmdlcy5wcm9ncmVzcy5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoY2hhbmdlcy5lcnJvcikge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yID0gY2hhbmdlcy5lcnJvci5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25DYW5jZWwoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuYnV0dG9uRnVuY3Rpb24uY2FuY2VsKSB0aGlzLmJ1dHRvbkZ1bmN0aW9uLmNhbmNlbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblJldHJ5KCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmJ1dHRvbkZ1bmN0aW9uLnJldHJ5KSB0aGlzLmJ1dHRvbkZ1bmN0aW9uLnJldHJ5KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uQWJvcnQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYnV0dG9uRnVuY3Rpb24uYWJvcnQpIHRoaXMuYnV0dG9uRnVuY3Rpb24uYWJvcnQoKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5jb25zdCBmaWxlVXBsb2FkRGlyZWN0aXZlID0ge1xyXG4gICAgY29udHJvbGxlcjogRmlsZVVwbG9hZENvbnRyb2xsZXIsXHJcbiAgICBiaW5kaW5nczogRmlsZVVwbG9hZEJpbmRpbmdzLFxyXG4gICAgdGVtcGxhdGVVcmw6ICd1cGxvYWQvRmlsZVVwbG9hZC5odG1sJ1xyXG59O1xyXG5cclxuKCgpID0+IHtcclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwRmlsZXMuRmlsZVVwbG9hZCcsIFtdKVxyXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcEZpbGVVcGxvYWQnLCBmaWxlVXBsb2FkRGlyZWN0aXZlKVxyXG4gICAgICAgXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdmYWlsL0ZpbGVGYWlsLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWZpbGVzIHBpcC1wcm9ncmVzcy1maWxlc1wiPjxkaXYgY2xhc3M9XCJwaXAtYm9keSBwaXAtc2Nyb2xsIHBpcC1wcm9ncmVzcy1ib2R5XCI+PGRpdiBjbGFzcz1cImxheW91dC1yb3dcIj48ZGl2IGNsYXNzPVwicGlwLXByb2dyZXNzLWljb24gY29sb3ItYmFkZ2UtYmdcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmNyb3NzXCI+PC9tZC1pY29uPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtcHJvZ3Jlc3MtY29udGVudFwiPjxoMyBjbGFzcz1cInBpcC10aXRsZVwiPlVwbG9hZGluZyB7eyRjdHJsLnR5cGV9fSBmYWlsZWQgd2l0aCBlcnJvcnMhPC9oMz48ZGl2IGNsYXNzPVwiY29sb3Itc2Vjb25kYXJ5LXRleHQgcGlwLXN1YnRpdGxlXCI+e3skY3RybC5uYW1lfX08L2Rpdj48ZGl2IGNsYXNzPVwiY29sb3ItZXJyb3IgcGlwLWVycm9yXCI+e3skY3RybC5lcnJvcn19PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1mb290ZXIgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tZW5kLWNlbnRlclwiIG5nLWlmPVwiJGN0cmwuYnV0dG9ucyAmJiAkY3RybC5idXR0b25zLmxlbmd0aCA+IDBcIj48ZGl2PjxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1yZXBlYXQ9XCJmYWlsIGluICRjdHJsLmJ1dHRvbnNcIiBuZy1jbGljaz1cImZhaWwuY2xpY2soKVwiPnt7OjpmYWlsLnRpdGxlfX08L21kLWJ1dHRvbj48L2Rpdj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnc2VsZWN0L0ZpbGVTZWxlY3QuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJwaXAtZmlsZS1zZWxlY3RcIj48Zm9ybSBpZD1cImlucF9mb3JtXCIgY2xhc3M9XCJwaXAtaGlkZGVuLWZvcm1cIj48aW5wdXQgdHlwZT1cImZpbGVcIiBmaWxlLW1vZGVsPVwiJGN0cmwubG9jYWxGaWxlXCIgaWQ9XCJpbnBfZmlsZVwiIG5nLW1vZGVsPVwiJGN0cmwubG9jYWxGaWxlXCI+PC9mb3JtPjxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWQgbWQtYWNjZW50IHBpcC1idXR0b25cIiBuZy1jbGljaz1cIiRjdHJsLm9uVXBsb2FkQnV0dG9uQ2xpY2soKVwiIG5nLWlmPVwiISRjdHJsLmxvY2FsRmlsZVwiPkNob29zZSBGaWxlPC9tZC1idXR0b24+PGRpdiBuZy1pZj1cIiRjdHJsLmxvY2FsRmlsZS5uYW1lXCIgY2xhc3M9XCJwaXAtZmlsZSBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1zdGFydC1jZW50ZXJcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmRvY3VtZW50XCIgY2xhc3M9XCJwaXAtaWNvblwiPjwvbWQtaWNvbj48ZGl2IGNsYXNzPVwiZmxleFwiPjxkaXYgY2xhc3M9XCJ0ZXh0LWJvZHkyIHRleHQtb3ZlcmZsb3dcIj57eyRjdHJsLmxvY2FsRmlsZS5uYW1lfX08L2Rpdj48ZGl2IG5nLWlmPVwiJGN0cmwubG9jYWxGaWxlLnNpemVcIiBjbGFzcz1cImNvbG9yLXNlY29uZGFyeS10ZXh0XCI+e3skY3RybC5sb2NhbEZpbGUuc2l6ZX19PC9kaXY+PC9kaXY+PG1kLWJ1dHRvbiBuZy1jbGljaz1cIiRjdHJsLm9uRGVsZXRlQnV0dG9uQ2xpY2soKVwiIGNsYXNzPVwibWQtaWNvbi1idXR0b25cIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmNyb3NzLWNpcmNsZVwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnc3RhcnQvRmlsZVN0YXJ0Lmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWZpbGVzIHBpcC1wcm9ncmVzcy1maWxlc1wiPjxkaXYgY2xhc3M9XCJwaXAtYm9keSBwaXAtc2Nyb2xsIHBpcC1wcm9ncmVzcy1ib2R5XCI+PGRpdiBjbGFzcz1cImxheW91dC1yb3dcIj48ZGl2IGNsYXNzPVwicGlwLXByb2dyZXNzLWljb24gYmItb3JhbmdlXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpwbGF5XCI+PC9tZC1pY29uPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtcHJvZ3Jlc3MtY29udGVudFwiPjxoMyBjbGFzcz1cInBpcC10aXRsZVwiPlVwbG9hZGluZyB7ezo6JGN0cmwudHlwZX19PC9oMz48ZGl2IGNsYXNzPVwiY29sb3Itc2Vjb25kYXJ5LXRleHQgcGlwLXN1YnRpdGxlXCI+e3skY3RybC5uYW1lfX08L2Rpdj48ZGl2PjxtZC1wcm9ncmVzcy1saW5lYXIgbWQtbW9kZT1cImRldGVybWluYXRlXCIgY2xhc3M9XCJtZC1hY2NlbnRcIiB2YWx1ZT1cInt7JGN0cmwucHJvZ3Jlc3N9fVwiIG5nLWlmPVwiJGN0cmwucHJvZ3Jlc3MgPCAxMDBcIj48L21kLXByb2dyZXNzLWxpbmVhcj48bWQtcHJvZ3Jlc3MtbGluZWFyIG1kLW1vZGU9XCJpbmRldGVybWluYXRlXCIgY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1pZj1cIiRjdHJsLnByb2dyZXNzID09IDEwMFwiPjwvbWQtcHJvZ3Jlc3MtbGluZWFyPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtZm9vdGVyIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXJcIiBuZy1pZj1cIiRjdHJsLmJ1dHRvbnNcIj48ZGl2PjxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1yZXBlYXQ9XCJzdGFydCBpbiAkY3RybC5idXR0b25zXCIgbmctY2xpY2s9XCJzdGFydC5jbGljaygpXCI+e3tzdGFydC50aXRsZX19PC9tZC1idXR0b24+PC9kaXY+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRmlsZXMuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3N1Y2Nlc3MvRmlsZVN1Y2Nlc3MuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJwaXAtZmlsZXMgcGlwLXByb2dyZXNzLWZpbGVzXCI+PGRpdiBjbGFzcz1cInBpcC1ib2R5IHBpcC1zY3JvbGwgcGlwLXByb2dyZXNzLWJvZHlcIj48ZGl2IGNsYXNzPVwibGF5b3V0LXJvd1wiPjxkaXYgY2xhc3M9XCJwaXAtcHJvZ3Jlc3MtaWNvbiBiYi1ncmVlblwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6Y2hlY2tcIj48L21kLWljb24+PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1wcm9ncmVzcy1jb250ZW50XCI+PGgzIGNsYXNzPVwicGlwLXRpdGxlXCI+VXBsb2FkZWQge3s6OnZtLnR5cGV9fSBzdWNjZXNzZnVsbHkhPC9oMz48ZGl2IGNsYXNzPVwiY29sb3Itc2Vjb25kYXJ5LXRleHQgcGlwLXN1YnRpdGxlXCI+e3t2bS5uYW1lfX08L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWZvb3RlciBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1lbmQtY2VudGVyXCIgbmctaWY9XCJ2bS5idXR0b25zICYmIHZtLmJ1dHRvbnMubGVuZ3RoID4gMFwiPjxkaXY+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWFjY2VudFwiIG5nLXJlcGVhdD1cInN0YXJ0IGluIHZtLmJ1dHRvbnNcIiBuZy1jbGljaz1cInN0YXJ0LmNsaWNrKClcIj57e3N0YXJ0LnRpdGxlfX08L21kLWJ1dHRvbj48L2Rpdj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBGaWxlcy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcEZpbGVzLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgndXBsb2FkL0ZpbGVVcGxvYWQuaHRtbCcsXG4gICAgJzxkaXY+PHBpcC1zdWNjZXMtdXBsb2FkIG5nLWlmPVwiJGN0cmwuc3RhdGUgPT0gXFwndXBsb2FkXFwnICYmICghJGN0cmwuYnV0dG9ucyB8fCAkY3RybC51cGxvYWRCdXR0b25zKVwiIHBpcC1uYW1lPVwiJGN0cmwubmFtZVwiIHBpcC10eXBlPVwiJGN0cmwudHlwZVwiIHBpcC1idXR0b25zPVwiJGN0cmwudXBsb2FkQnV0dG9uc1wiPjwvcGlwLXN1Y2Nlcy11cGxvYWQ+PHBpcC1mYWlsLXVwbG9hZCBuZy1pZj1cIiRjdHJsLnN0YXRlID09IFxcJ2ZhaWxcXCdcIiBwaXAtbmFtZT1cIiRjdHJsLm5hbWVcIiBwaXAtdHlwZT1cIiRjdHJsLnR5cGVcIiBwaXAtZXJyb3I9XCIkY3RybC5lcnJvclwiIHBpcC1idXR0b25zPVwiJGN0cmwuZmFpbEJ1dHRvbnNcIj48L3BpcC1mYWlsLXVwbG9hZD48cGlwLXN0YXJ0LXVwbG9hZCBuZy1pZj1cIiRjdHJsLnN0YXRlID09IFxcJ3N0YXJ0XFwnXCIgcGlwLW5hbWU9XCIkY3RybC5uYW1lXCIgcGlwLXR5cGU9XCIkY3RybC50eXBlXCIgcGlwLXByb2dyZXNzPVwiJGN0cmwucHJvZ3Jlc3NcIiBwaXAtYnV0dG9ucz1cIiRjdHJsLnN0YXJ0QnV0dG9uc1wiPjwvcGlwLXN0YXJ0LXVwbG9hZD48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcC13ZWJ1aS1maWxlcy1odG1sLm1pbi5qcy5tYXBcbiJdfQ=="}