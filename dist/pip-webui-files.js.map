{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/Translate.ts","src/fail/FileFail.ts","src/index.ts","src/model/FileModel.ts","src/select/FileSelect.ts","src/service/FileUploadService.ts","src/service/FileUploadState.ts","src/start/FileStart.ts","src/success/FileSuccess.ts","src/upload/FileUpload.ts","temp/pip-webui-files-html.js"],"names":[],"mappings":"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":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(() => {\r\n    'use strict';\r\n    function filerTranslate($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular.module('pipFiles.Translate', [])\r\n        .filter('translate', filerTranslate);\r\n\r\n})();","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\n\r\ninterface IFileFailBindings {\r\n    [key: string]: any;\r\n\r\n    buttons: any,\r\n    name: any,\r\n    type: any,\r\n    error: any\r\n}\r\n\r\nconst FileFailBindings: IFileFailBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    error: '<pipError'\r\n}\r\n\r\nclass FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n}\r\n\r\n\r\ninterface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileFailController implements IFileFailController, IFileFailBindings {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n(() => {\r\n\r\n    const fileFailComponent: ng.IComponentOptions = {\r\n        controller: FileFailController,\r\n        bindings: FileFailBindings,\r\n        templateUrl: 'fail/FileFail.html'\r\n    };\r\n\r\n    angular\r\n        .module('pipFiles.FailUpload', [])\r\n        .component('pipFailUpload', fileFailComponent)\r\n\r\n\r\n})();","﻿\r\nimport './service/FileUploadService';\r\nimport './model/FileModel';\r\nimport './success/FileSuccess';\r\nimport './upload/FileUpload';\r\nimport './start/FileStart';\r\nimport './fail/FileFail';\r\nimport './select/FileSelect';\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipFiles', [\r\n            'pipFiles.Service',\r\n            'pipFiles.Model',\r\n            'pipFiles.SuccessUpload',\r\n            'pipFiles.FileUpload',\r\n            'pipFiles.StartUpload',\r\n            'pipFiles.FailUpload',\r\n            'pipFiles.Select'\r\n        ])\r\n})();\r\n","\r\n(() => {\r\n    function fileModelLink(scope, element, attrs, $parse) {\r\n        let model = $parse(attrs.fileModel);\r\n        let modelSetter = model.assign;\r\n                \r\n        element.bind('change', () => {\r\n            scope.$apply(() => {\r\n                modelSetter(scope, element[0].files[0]);\r\n            });\r\n        });\r\n    }\r\n\r\n    function fileModelDirective($parse: ng.IParseProvider) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope: ng.IScope, element, attrs: ng.IAttributes) => { \r\n                fileModelLink(scope, element, attrs, $parse) \r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.Model', [])\r\n        .directive('fileModel', fileModelDirective)\r\n\r\n\r\n})();","\r\n(() => {\r\n\r\n    interface IFileSelectController {\r\n        localFile: any;\r\n        onUploadButtonClick(): void;\r\n        onDeleteButtonClick(): void;\r\n    }\r\n\r\n    interface IFileSelectBindings {\r\n        [key: string]: any;\r\n\r\n        localFile: any,\r\n        change: any\r\n    }\r\n\r\n    const FileSelectBindings: IFileSelectBindings = {\r\n        localFile: '<pipLocalFile',\r\n        change: '<pipChange'\r\n    }\r\n\r\n    class FileSelectController implements IFileSelectController {\r\n        public localFile: any;\r\n        public change: Function;\r\n\r\n        constructor($scope: ng.IScope) {\r\n            \"ngInject\";\r\n            $scope.$watch('$ctrl.localFile', (item) => {\r\n                if (this.change) {\r\n                    this.change(this.localFile);\r\n                }\r\n            })\r\n        }\r\n\r\n        public onUploadButtonClick(): void {\r\n            $('#inp_file').click();\r\n        }\r\n\r\n        public onDeleteButtonClick(): void {\r\n            this.localFile = null;\r\n            let forml = document.getElementById('inp_form');\r\n            (<any>forml).reset();\r\n\r\n        }\r\n    }\r\n\r\n    const fileSelectDirective = {\r\n        restrict: 'E',\r\n        replace: true,\r\n        bindings: FileSelectBindings,\r\n        controller: FileSelectController,\r\n        templateUrl: 'select/FileSelect.html'\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles.Select', [])\r\n        .component('pipFileSelect', fileSelectDirective)\r\n\r\n\r\n})();\r\n","import { FileUploadState } from './FileUploadState';\r\nimport { IFileUploadService } from './IFileUploadService';\r\n\r\nclass FileUploadService implements IFileUploadService {\r\n\r\n    public constructor(private $http: ng.IHttpService) { }\r\n\r\n    public upload(\r\n           url: string,\r\n           file: any, \r\n           callback?: (data: any, err: any) => void, \r\n           changeProgress?: (progress: number) => void, \r\n           changeState?: (state: string) => void ): void {\r\n\r\n        let fd: FormData = new FormData();\r\n        fd.append('file', file);\r\n\r\n        if (changeProgress) {\r\n            changeProgress(0);\r\n        }\r\n        if (changeState) { \r\n            changeState(FileUploadState.Start);\r\n        }\r\n\r\n        this.$http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable && changeProgress) {\r\n                       changeProgress((e.loaded / e.total) * 100);\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })\r\n            .success((response: any) => {\r\n                changeState(FileUploadState.Upload);\r\n\r\n                if (callback) callback(response, null);\r\n            })\r\n            .error((response: any) => {\r\n                changeState(FileUploadState.Fail);\r\n\r\n                if (callback) callback(null, response.Error || response);\r\n            });\r\n    }\r\n}\r\n\r\n\r\n(() => {\r\n\r\n\r\n    angular\r\n        .module('pipFiles.Service', [])\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileStartBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any,\r\n    progress: any\r\n}\r\n\r\nconst FileStartBindings: IFileStartBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    progress: '<?pipProgress'\r\n};\r\n\r\n\r\nclass FileStartChanges implements ng.IOnChangesObject, IFileStartBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\ninterface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number = 0;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() { }\r\n\r\n    public $onChanges(changes: FileStartChanges) {\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n(() => {\r\n\r\n    const fileStartDirective = {\r\n        controller: FileStartController,\r\n        bindings: FileStartBindings,\r\n        templateUrl: 'start/FileStart.html'\r\n    };\r\n\r\n    angular\r\n        .module('pipFiles.StartUpload', [])\r\n        .component('pipStartUpload', fileStartDirective)\r\n\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileSuccessBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any\r\n}\r\n\r\nconst FileSuccessBindings: IFileSuccessBindings = {\r\n    buttons: '=?pipButtons',\r\n    name: '=pipName',\r\n    type: '=?pipType',\r\n};\r\n\r\n\r\ninterface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\r\n    public name: string;\r\n    public type: string = 'file';\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() {}\r\n\r\n    public $onChanges(changes) {}\r\n}\r\n\r\n\r\n(() => {\r\n \r\n     const fileSuccessDirective = {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            bindings: FileSuccessBindings,\r\n            templateUrl: 'success/FileSuccess.html'\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.SuccessUpload', [])\r\n        .component('pipSuccesUpload', fileSuccessDirective)\r\n\r\n\r\n})();","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/IFileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nclass FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\ninterface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\ninterface IFileUploadBindings {\r\n    [key: string]: any;\r\n\r\n    buttonFunction: any,\r\n    buttons: any,\r\n    error: any,\r\n    name: any,\r\n    state: any,\r\n    type: any,\r\n    progress: any\r\n}\r\n\r\nconst FileUploadBindings: IFileUploadBindings = {\r\n    buttonFunction: '<?pipButtonFunctions',\r\n    buttons: '<?pipButtons',\r\n    error: '<?pipError',\r\n    name: '<pipName',\r\n    state: '<pipState',\r\n    type: '<?pipType',\r\n    progress: '<pipProgress'\r\n}\r\n\r\nclass FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\r\n    buttons: ng.IChangesObject<boolean>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    state: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\nclass FileUploadController implements IFileUploadController, IFileUploadBindings {\r\n    public buttonFunction: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor( $scope: ng.IScope ) {}\r\n    \r\n    public $onInit() {\r\n         if (this.buttons) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n    }\r\n    \r\n    public $onChanges(changes: FileUploadChanges) {\r\n        if (changes.state) {\r\n            this.state = changes.state.currentValue;\r\n        }\r\n\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n        if (changes.error) {\r\n            this.error = changes.error.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\r\n    }\r\n\r\n}\r\n\r\n\r\nconst fileUploadDirective = {\r\n    controller: FileUploadController,\r\n    bindings: FileUploadBindings,\r\n    templateUrl: 'upload/FileUpload.html'\r\n};\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipFiles.FileUpload', [])\r\n        .component('pipFileUpload', fileUploadDirective)\r\n       \r\n})();","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon color-badge-bg\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:cross\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '                 <h3 class=\"pip-title\">\\n' +\n    '                Uploading {{$ctrl.type}} failed with errors!\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{$ctrl.name}}\\n' +\n    '            </div>\\n' +\n    '            <div class=\"color-error pip-error\">\\n' +\n    '                 {{$ctrl.error}}\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\">\\n' +\n    '        <div>\\n' +\n    '           <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">\\n' +\n    '                {{::fail.title}}\\n' +\n    '            </md-button> \\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\">\\n' +\n    '      <form id=\"inp_form\" class=\"pip-hidden-form\">\\n' +\n    '        <input type=\"file\" file-model=\"$ctrl.localFile\" id=\"inp_file\" ng-model=\"$ctrl.localFile\"></input>\\n' +\n    '      </form>\\n' +\n    '        <md-button class=\"md-raised md-accent pip-button\"\\n' +\n    '                   ng-click=\"$ctrl.onUploadButtonClick()\" \\n' +\n    '                   ng-if=\"!$ctrl.localFile\">Choose File</md-button>\\n' +\n    '        <div ng-if=\"$ctrl.localFile.name\" class=\"pip-file layout-row layout-align-start-center\">\\n' +\n    '          <md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon>\\n' +\n    '            <div class=\"flex\">\\n' +\n    '                <div class=\"text-body2 text-overflow\">\\n' +\n    '                    {{$ctrl.localFile.name}}\\n' +\n    '                </div>\\n' +\n    '                <div ng-if=\"$ctrl.localFile.size\" class=\"color-secondary-text\">{{$ctrl.localFile.size}}</div>\\n' +\n    '            </div>\\n' +\n    '            <md-button ng-click=\"$ctrl.onDeleteButtonClick()\" class=\"md-icon-button\">\\n' +\n    '              <md-icon md-svg-icon=\"icons:cross-circle\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon bb-orange\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:play\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\">\\n' +\n    '                Uploading {{::$ctrl.type}}\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{$ctrl.name}}\\n' +\n    '            </div>\\n' +\n    '            <div>\\n' +\n    '                <md-progress-linear md-mode=\"determinate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    value=\"{{$ctrl.progress}}\" \\n' +\n    '                    ng-if=\"$ctrl.progress < 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '                <md-progress-linear md-mode=\"indeterminate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    ng-if=\"$ctrl.progress == 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"start in $ctrl.buttons\" ng-click=\"start.click()\">\\n' +\n    '                {{start.title}}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon bb-green\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:check\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\">\\n' +\n    '                Uploaded {{::vm.type}} successfully!\\n' +\n    '            </h3>\\n' +\n    '        \\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{vm.name}}\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\">\\n' +\n    '        <div>\\n' +\n    '           <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">\\n' +\n    '                {{start.title}}\\n' +\n    '            </md-button> \\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div>\\n' +\n    '    <pip-succes-upload \\n' +\n    '            ng-if=\"$ctrl.state == \\'upload\\' && (!$ctrl.buttons || $ctrl.uploadButtons)\"\\n' +\n    '            pip-name=\"$ctrl.name\" \\n' +\n    '            pip-type=\"$ctrl.type\" \\n' +\n    '            pip-buttons=\"$ctrl.uploadButtons\"></pip-succes-upload>\\n' +\n    '    <pip-fail-upload \\n' +\n    '            ng-if=\"$ctrl.state == \\'fail\\'\"\\n' +\n    '            pip-name=\"$ctrl.name\" \\n' +\n    '            pip-type=\"$ctrl.type\" \\n' +\n    '            pip-error=\"$ctrl.error\"\\n' +\n    '            pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload>\\n' +\n    '\\n' +\n    '    <pip-start-upload \\n' +\n    '            ng-if=\"$ctrl.state == \\'start\\'\"\\n' +\n    '            pip-name=\"$ctrl.name\" \\n' +\n    '            pip-type=\"$ctrl.type\" \\n' +\n    '            pip-progress=\"$ctrl.progress\"\\n' +\n    '            pip-buttons=\"$ctrl.startButtons\"></pip-start-upload>\\n' +\n    '</div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}