{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/translate.ts","src/fail/FileFailController.ts","src/fail/index.ts","src/files.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","src/start/FileStartController.ts","src/start/index.ts","src/success/FileSuccessController.ts","src/success/index.ts","src/upload/FileUploadController.ts","src/upload/index.ts","temp/pip-webui-files-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\n    public title: string;\n    public click: Function;\n}","/**\n * @file Optional filter to translate string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n \n/* global angular */\n\n(() => {\n    'use strict';\n    function filerTranslate($injector: angular.auto.IInjectorService) {\n        let pipTranslate: any = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return (key: string) => {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular.module('pipFiles.Translate', [])\n        .filter('translate', filerTranslate);\n\n})();","\nimport {\n    ButtonsUpload\n} from \"../common/ButtonsUpload\";\n\nimport {\n    FileFailChanges,\n    IFileFailBindings\n} from \"./index\";\n\nexport interface IFileFailController {\n    name: string;\n    type: string;\n    error: string;\n    buttons: ButtonsUpload[];\n}\n\nexport class FileFailController implements IFileFailController, IFileFailBindings {\n    public name: string;\n    public type: string;\n    public error: string;\n    public buttons: ButtonsUpload[];\n\n    constructor($scope: ng.IScope) {\n        \"ngInject\";\n        \n        // Init parameters\n        \n        $scope.$watch('error', (error: string) => {\n            this.error = error;\n        })\n    }\n}","\nimport { FileFailController } from './FileFailController';\nimport { ButtonsUpload } from '../common/ButtonsUpload';\n\nexport interface IFileFailBindings {\n    [key: string]: any;\n\n    buttons: any,\n    name: any,\n    type: any,\n    error: any\n}\n\nconst FileFailBindings: IFileFailBindings = {\n    buttons: '<?pipButtons',\n    name: '<pipName',\n    type: '<?pipType',\n    error: '<pipError'\n}\n\nexport class FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\n    error: ng.IChangesObject<string>;\n    name: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n}\n\nconst fileFailComponent: ng.IComponentOptions = {\n    controller: FileFailController,\n    bindings: FileFailBindings,\n    templateUrl: 'fail/FileFail.html'\n};\n\n\n(() => {\n\n    angular\n        .module('pipFiles.FailUpload', [])\n        .component('pipFailUpload', fileFailComponent)\n\n\n})();\n","﻿\nimport {FileSelectController} from './select/FileSelectController';\nimport {FileUploadService} from './service/FileUploadService';\n\nimport './success/index';\nimport './upload/index';\nimport './start/index';\nimport './fail/index';\n\n(() => {\n    function fileModelDirective($parse: any) {\n        \"ngInject\";\n\n        return {\n            restrict: 'A',\n            link: (scope, element, attrs) => {\n                let model = $parse(attrs.fileModel);\n                let modelSetter = model.assign;\n                \n                element.bind('change', () => {\n                    scope.$apply(() => {\n                        modelSetter(scope, element[0].files[0]);\n                    });\n                });\n            }\n        };\n    }\n\n    function fileSelectDirective() {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                localFile: '='\n            },\n            controller: FileSelectController,\n            controllerAs: 'vm',\n            templateUrl: 'select/FileSelect.html'\n        };\n    }\n\n    angular\n        .module('pipFiles', [\n            'pipFiles.SuccessUpload',\n            'pipFiles.FileUpload',\n            'pipFiles.StartUpload',\n            'pipFiles.FailUpload'\n        ])\n        .directive('fileModel', fileModelDirective)\n        .directive('pipFileSelect', fileSelectDirective)\n       //.directive('pipFailUpload', fileFailDirective)\n        .service('pipFileUpload', FileUploadService);\n\n\n})();\n","export interface IFileSelectController {\n    localFile: any;\n    onUploadButtonClick(): void ;\n    onDeleteButtonClick(): void;\n}\n\nexport class FileSelectController implements IFileSelectController {\n    public localFile: any;\n    \n    constructor($scope: ng.IScope) {\n        \"ngInject\";\n        this.localFile = $scope['localFile'];\n        $scope.$watch('vm.localFile', (item) => {\n            $scope['localFile'] = item;\n        }) \n    }\n\n    public onUploadButtonClick(): void {\n        $('#inp_file').click();\n    }\n\n    public onDeleteButtonClick(): void {\n        this.localFile = null;\n        let forml = document.getElementById('inp_form');\n        (<any>forml).reset();\n\n    }\n}","export class FileUploadState {\n    public static All: string[] = ['start', 'upload', 'fail'];\n    public static Start: string = 'start';\n    public static Upload: string = 'upload';\n    public static Fail: string = 'fail';\n}\n\nexport interface IFileUploadService {\n    progress: number;\n    state: string;\n    error: string;\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\n}\n\nexport class FileUploadService implements IFileUploadService {\n    public progress: number;\n    public state: string;\n    public error: string = null;\n\n    public constructor( private $http: ng.IHttpService) {}\n\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\n        \n        let fd: FormData = new FormData();\n        fd.append('file', file);\n        \n        this.progress = 0;\n        this.state = FileUploadState.Start;\n        this.$http.post(url, fd, <any>{\n            uploadEventHandlers: {\n                progress: (e: any) => {\n                    if (e.lengthComputable) {\n                        this.progress = (e.loaded / e.total) * 100;\n                    }\n                }\n            },\n            headers: { 'Content-Type': undefined }\n        })    \n        .success((response: any) => {\n            this.state = FileUploadState.Upload;\n\n            if (callback) callback(response, null);\n        })    \n        .error((response: any) => {\n            this.state = FileUploadState.Fail;\n            this.error = response.Error || response;\n\n            if (callback) callback(null, response);\n        });\n    }\n}","\nimport {\n    ButtonsUpload\n} from \"../common/ButtonsUpload\";\n\nexport interface IFileStartController {\n    name: string;\n    type: string;\n    progress: number;\n    buttons: ButtonsUpload[];\n}\n\nexport class FileStartController implements IFileStartController {\n    public name: string;\n    public progress: number = 0;\n    public type: string;\n    public buttons: ButtonsUpload[];\n\n    constructor($scope: ng.IScope) {\n        \"ngInject\";\n        \n        // Init parameters\n      \n        $scope.$watch('progress', (progress: number) => {\n            this.progress = progress;\n        })\n    }\n}","\nimport {FileStartController} from './FileStartController';\n\n(() => {\n \n    const fileStartDirective = {\n        restrict: 'E',\n        replace: true,\n        controller: FileStartController,\n        controllerAs: 'vm',\n        bindings: {\n            buttons: '=?pipButtons',\n            name: '=pipName',\n            type: '=?pipType',\n            progress: '=?pipProgress'\n        },\n        templateUrl: 'start/FileStart.html'\n    };\n\n    angular\n        .module('pipFiles.StartUpload', [])\n        .component('pipStartUpload', fileStartDirective)\n\n\n})();\n","\nimport {\n    ButtonsUpload\n} from \"../common/ButtonsUpload\";\n\nimport { IFileSuccessBindings} from './index';\n\nexport interface IFileSuccessController {\n    name: string;\n    type: string;\n    buttons: ButtonsUpload[];\n}\n\nexport class FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\n    public name: string;\n    public type: string = 'file';\n    public buttons: ButtonsUpload[];\n\n    constructor() {}\n\n    public $onChanges(changes) {}\n}","\nimport {FileSuccessController} from './FileSuccessController';\n\nexport interface IFileSuccessBindings {\n    [key: string]: any;\n\n    type: any\n    buttons: any,\n    name: any\n}\n\nconst FileSuccessBindings: IFileSuccessBindings = {\n    buttons: '=?pipButtons',\n    name: '=pipName',\n    type: '=?pipType',\n};\n\n(() => {\n \n     const fileSuccessDirective = {\n            restrict: 'E',\n            replace: true,\n            controller: FileSuccessController,\n            controllerAs: 'vm',\n            bindings: FileSuccessBindings,\n            templateUrl: 'success/FileSuccess.html'\n    }\n\n\n    angular\n        .module('pipFiles.SuccessUpload', [])\n        .component('pipSuccesUpload', fileSuccessDirective)\n\n\n})();\n","\nimport {\n    IFileUploadService\n} from \"../service/FileUploadService\";\n\nimport {\n    ButtonsUpload\n} from \"../common/ButtonsUpload\";\n\nimport {\n    FileUploadChanges\n} from \"./index\";\n\nexport interface IFileUploadController {\n    name: string;\n    type: string;\n    state: string;\n    progress: number;\n    onCancel(): void;\n    onRetry(): void;\n    onAbort(): void;\n}\n\nexport class FileUploadButtons {\n    retry: Function;\n    cancel: Function;\n    abort: Function;\n}\n\nexport class FileUploadController implements IFileUploadController {\n    public buttonFunction: FileUploadButtons;\n    public uploadButtons: ButtonsUpload[];\n    public failButtons: ButtonsUpload[];\n    public startButtons: ButtonsUpload[];\n\n    public name: string;\n    public type: string;\n    public state: string;\n    public progress: number;\n    public buttons: boolean;\n    public error: string = null;\n\n    constructor( $scope: ng.IScope ) {\n        \"ngInject\";\n        \n        // Init parameters\n        if (this.buttonFunction) {\n            this.uploadButtons = [];\n            this.failButtons = [\n                {title: 'Cancel', click: () => { this.onCancel()}},\n                {title: 'Retry', click: () => { this.onRetry()}}\n            ];\n            this.startButtons = [\n                {title: 'Abort', click: () => { this.onAbort() }}\n            ];\n        }\n    }\n\n    \n    public $onChanges(changes: FileUploadChanges) {\n        if (changes.state) {\n            this.state = changes.state.currentValue;\n        }\n\n        if (changes.progress) {\n            this.progress = changes.progress.currentValue;\n        }\n\n        if (changes.error) {\n            this.error = changes.error.currentValue;\n        }\n\n    }\n\n    public onCancel(): void {\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\n    }\n\n    public onRetry(): void {\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\n    }\n\n    public onAbort() {\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\n    }\n\n}","\nimport {FileUploadController, FileUploadButtons} from './FileUploadController';\n\nexport interface IFileUploadBindings {\n    [key: string]: any;\n\n    buttonFunction: any,\n    buttons: any,\n    error: any,\n    name: any,\n    state: any,\n    type: any,\n    progress: any\n}\n\nconst FileUploadBindings: IFileUploadBindings = {\n    buttonFunction: '<?pipButtonFunctions',\n    buttons: '<?pipButtons',\n    error: '<?pipError',\n    name: '<pipName',\n    state: '<pipState',\n    type: '<?pipType',\n    progress: '<pipProgress'\n}\n\nexport class FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\n    buttons: ng.IChangesObject<boolean>;\n    error: ng.IChangesObject<string>;\n    name: ng.IChangesObject<string>;\n    state: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n    progress: ng.IChangesObject<number>;\n}\n\nconst fileUploadDirective = {\n    controller: FileUploadController,\n    bindings: FileUploadBindings,\n    templateUrl: 'upload/FileUpload.html'\n};\n\n\n(() => {\n\n    angular\n        .module('pipFiles.FileUpload', [])\n        .component('pipFileUpload', fileUploadDirective)\n       \n})();\n","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{$ctrl.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div class=\"color-error pip-error\">{{$ctrl.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"vm.onUploadButtonClick()\" ng-if=\"!vm.localFile\">Choose File</md-button><div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{vm.localFile.name}}</div><div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div></div><md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::vm.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{vm.progress}}\" ng-if=\"vm.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"vm.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"$ctrl.state == \\'upload\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-buttons=\"$ctrl.buttons\"></pip-succes-upload><pip-fail-upload ng-if=\"$ctrl.state == \\'fail\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-error=\"$ctrl.error\" pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"$ctrl.state == \\'start\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-progress=\"$ctrl.progress\" pip-buttons=\"$ctrl.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}