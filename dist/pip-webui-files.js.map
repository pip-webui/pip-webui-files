{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/translate.ts","src/fail/FileFailController.ts","src/files.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","src/start/FileStartController.ts","src/success/FileSuccessController.ts","src/upload/FileUploadController.ts","temp/pip-webui-files-html.js"],"names":[],"mappings":"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":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFiles.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileFailController implements IFileFailController {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.error = $scope['error'] || null;\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n      \r\n    }\r\n}","﻿\r\nimport {FileSelectController} from './select/FileSelectController';\r\nimport {FileUploadController} from './upload/FileUploadController';\r\nimport {FileSuccessController} from './success/FileSuccessController';\r\nimport {FileFailController} from './fail/FileFailController';\r\nimport {FileUploadService} from './service/FileUploadService';\r\nimport {FileStartController} from './start/FileStartController';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'select/FileSelect.html'\r\n        };\r\n    }\r\n\r\n     function fileUploadDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileUploadController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttonFunction: '=?pipButtonFunctions',\r\n                buttons: '=?pipButtons',\r\n                error: '=?pipError',\r\n                name: '=pipName',\r\n                state: '=pipState',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'upload/FileUpload.html'\r\n        };\r\n    }\r\n\r\n     function fileSuccessDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n            },\r\n            templateUrl: 'success/FileSuccess.html'\r\n        };\r\n    }\r\n\r\n     function fileFailDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileFailController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                error: '=pipError'\r\n            },\r\n            templateUrl: 'fail/FileFail.html'\r\n        };\r\n    }\r\n\r\n    function fileStartDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileStartController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'start/FileStart.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', [])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        .directive('pipFileUpload', fileUploadDirective)\r\n        .directive('pipSuccesUpload', fileSuccessDirective)\r\n        .directive('pipFailUpload', fileFailDirective)\r\n        .directive('pipStartUpload', fileStartDirective)\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    state: string;\r\n    error: string;\r\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    private _http: ng.IHttpService;\r\n\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor(\r\n        $http: ng.IHttpService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._http = $http;\r\n    }\r\n\r\n    public upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void {\r\n        //console.log(file); \r\n\r\n        let fd = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        transaction.begin(FileUploadState.Start);\r\n        this.state = FileUploadState.Start;\r\n        this._http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.state = FileUploadState.Upload;\r\n            transaction.end(FileUploadState.Upload);\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.state = FileUploadState.Fail;\r\n            transaction.end(FileUploadState.Fail);\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.progress = $scope['progress'] || null;\r\n      \r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileSuccessController implements IFileSuccessController {\r\n    public name: string;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n      \r\n    }\r\n}","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\nexport class FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\nexport class FileUploadController implements IFileUploadController {\r\n    //private _buttonFunction: FileUploadButtons;\r\n    private _functions: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor(\r\n        $scope: ng.IScope\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._functions = $scope['buttonFunction'];\r\n        \r\n        // Init parameters\r\n        if (this._functions) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n        this.buttons = $scope['buttons'] || false;\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.state = $scope['state'];\r\n        this.error = $scope['error'];\r\n        this.progress = $scope['progress'];\r\n\r\n        $scope.$watch('state', (state: string) => {\r\n            this.state = state;\r\n        })\r\n\r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n\r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._functions.cancel) this._functions.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._functions.retry) this._functions.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this._functions.abort) this._functions.abort();\r\n    }\r\n\r\n}","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon color-badge-bg\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:cross\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '                 <h3 class=\"pip-title\">\\n' +\n    '                Uploading {{vm.type}} failed with errors!\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{vm.name}}\\n' +\n    '            </div>\\n' +\n    '            <div class=\"color-error pip-error\">\\n' +\n    '                 {{vm.error}}\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\">\\n' +\n    '        <div>\\n' +\n    '           <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"fail in vm.buttons\" ng-click=\"fail.click()\">\\n' +\n    '                {{::fail.title}}\\n' +\n    '            </md-button> \\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\">\\n' +\n    '      <form id=\"inp_form\" class=\"pip-hidden-form\">\\n' +\n    '        <input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></input>\\n' +\n    '      </form>\\n' +\n    '        <md-button class=\"md-raised md-accent pip-button\"\\n' +\n    '                   ng-click=\"vm.onUploadButtonClick()\" \\n' +\n    '                   ng-if=\"!vm.localFile\">Choose File</md-button>\\n' +\n    '        <div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\">\\n' +\n    '          <md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon>\\n' +\n    '            <div class=\"flex\">\\n' +\n    '                <div class=\"text-body2 text-overflow\">\\n' +\n    '                    {{vm.localFile.name}}\\n' +\n    '                </div>\\n' +\n    '                <div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div>\\n' +\n    '            </div>\\n' +\n    '            <md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\">\\n' +\n    '              <md-icon md-svg-icon=\"icons:cross-circle\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon bb-orange\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:play\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\">\\n' +\n    '                Uploading {{::vm.type}}\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{vm.name}}\\n' +\n    '            </div>\\n' +\n    '            <div>\\n' +\n    '                <md-progress-linear md-mode=\"determinate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    value=\"{{vm.progress}}\" \\n' +\n    '                    ng-if=\"vm.progress < 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '                <md-progress-linear md-mode=\"indeterminate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    ng-if=\"vm.progress == 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">\\n' +\n    '                {{start.title}}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon bb-green\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:check\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\">\\n' +\n    '                Uploaded {{::vm.type}} successfully!\\n' +\n    '            </h3>\\n' +\n    '        \\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{vm.name}}\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\">\\n' +\n    '        <div>\\n' +\n    '           <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">\\n' +\n    '                {{start.title}}\\n' +\n    '            </md-button> \\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div>\\n' +\n    '    <pip-succes-upload \\n' +\n    '        ng-if=\"vm.state == \\'upload\\'\"\\n' +\n    '        pip-name=\"vm.name\" \\n' +\n    '        pip-type=\"vm.type\" \\n' +\n    '        pip-buttons=\"vm.buttons\"></pip-succes-upload>\\n' +\n    '    <pip-fail-upload \\n' +\n    '        ng-if=\"vm.state == \\'fail\\'\"\\n' +\n    '        pip-name=\"vm.name\" \\n' +\n    '        pip-type=\"vm.type\" \\n' +\n    '        pip-error=\"vm.error\"\\n' +\n    '        pip-buttons=\"vm.failButtons\"></pip-fail-upload>\\n' +\n    '\\n' +\n    '<pip-start-upload \\n' +\n    '        ng-if=\"vm.state == \\'start\\'\"\\n' +\n    '        pip-name=\"vm.name\" \\n' +\n    '        pip-type=\"vm.type\" \\n' +\n    '        pip-progress=\"vm.progress\"\\n' +\n    '        pip-buttons=\"vm.startButtons\"></pip-start-upload>\\n' +\n    '</div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}