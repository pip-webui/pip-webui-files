<<<<<<< HEAD
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/TranslateFilter.ts","src/fail/FileFail.ts","src/index.ts","src/model/FileModel.ts","src/select/FileSelect.ts","src/service/FileUploadService.ts","src/service/FileUploadState.ts","src/start/FileStart.ts","src/success/FileSuccess.ts","src/upload/FileUpload.ts","temp/pip-webui-files-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\n    public title: string;\n    public click: Function;\n}","{\n    function translateFilter($injector: angular.auto.IInjectorService) {\n        let pipTranslate: any = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return (key: string) => {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipFiles.Translate', [])\n        .filter('translate', translateFilter);\n}","import { ButtonsUpload } from \"../common/ButtonsUpload\";\n\ninterface IFileFailBindings {\n    [key: string]: any;\n\n    buttons: any,\n    name: any,\n    type: any,\n    error: any\n}\n\nconst FileFailBindings: IFileFailBindings = {\n    buttons: '<?pipButtons',\n    name: '<pipName',\n    type: '<?pipType',\n    error: '<pipError'\n}\n\nclass FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\n    error: ng.IChangesObject<string>;\n    name: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n}\n\n\ninterface IFileFailController {\n    name: string;\n    type: string;\n    error: string;\n    buttons: ButtonsUpload[];\n}\n\nclass FileFailController implements IFileFailController, IFileFailBindings {\n    public name: string;\n    public type: string;\n    public error: string;\n    public buttons: ButtonsUpload[];\n\n    constructor($scope: ng.IScope) {\n        \"ngInject\";\n        \n        // Init parameters\n        \n        $scope.$watch('error', (error: string) => {\n            this.error = error;\n        })\n    }\n}\n\nconst fileFailComponent: ng.IComponentOptions = {\n    controller: FileFailController,\n    bindings: FileFailBindings,\n    templateUrl: 'fail/FileFail.html'\n};\n\nangular\n    .module('pipFiles.FailUpload', [])\n    .component('pipFailUpload', fileFailComponent)\n","﻿\nimport './service/FileUploadService';\nimport './model/FileModel';\nimport './success/FileSuccess';\nimport './upload/FileUpload';\nimport './start/FileStart';\nimport './fail/FileFail';\nimport './select/FileSelect';\n\nangular\n    .module('pipFiles', [\n        'pipFiles.Service',\n        'pipFiles.Model',\n        'pipFiles.SuccessUpload',\n        'pipFiles.FileUpload',\n        'pipFiles.StartUpload',\n        'pipFiles.FailUpload',\n        'pipFiles.Select'\n    ]);\n","{\n    function fileModelLink(scope, element, attrs, $parse) {\n        let model = $parse(attrs.fileModel);\n        let modelSetter = model.assign;\n                \n        element.bind('change', () => {\n            scope.$apply(() => {\n                modelSetter(scope, element[0].files[0]);\n            });\n        });\n    }\n\n    function fileModelDirective($parse: ng.IParseProvider) {\n        \"ngInject\";\n\n        return {\n            restrict: 'A',\n            link: (scope: ng.IScope, element, attrs: ng.IAttributes) => { \n                fileModelLink(scope, element, attrs, $parse) \n            }\n        };\n    }\n\n    angular\n        .module('pipFiles.Model', [])\n        .directive('fileModel', fileModelDirective)\n}","{\n\n    interface IFileSelectController {\n        localFile: any;\n        onUploadButtonClick(): void;\n        onDeleteButtonClick(): void;\n    }\n\n    interface IFileSelectBindings {\n        [key: string]: any;\n\n        localFile: any,\n        change: any\n    }\n\n    const FileSelectBindings: IFileSelectBindings = {\n        localFile: '<pipLocalFile',\n        change: '<pipChange'\n    }\n\n    class FileSelectController implements IFileSelectController {\n        public localFile: any;\n        public change: Function;\n\n        constructor($scope: ng.IScope) {\n            \"ngInject\";\n            $scope.$watch('$ctrl.localFile', (item) => {\n                if (this.change) {\n                    this.change(this.localFile);\n                }\n            })\n        }\n\n        public onUploadButtonClick(): void {\n            $('#inp_file').click();\n        }\n\n        public onDeleteButtonClick(): void {\n            this.localFile = null;\n            let forml = document.getElementById('inp_form');\n            (<any>forml).reset();\n\n        }\n    }\n\n    const fileSelectDirective = {\n        restrict: 'E',\n        replace: true,\n        bindings: FileSelectBindings,\n        controller: FileSelectController,\n        templateUrl: 'select/FileSelect.html'\n    }\n\n    angular\n        .module('pipFiles.Select', [])\n        .component('pipFileSelect', fileSelectDirective)\n\n}\n","import { FileUploadState } from './FileUploadState';\nimport { IFileUploadService } from './IFileUploadService';\n\nclass FileUploadService implements IFileUploadService {\n\n    public constructor(private $http: ng.IHttpService) {\n        \"ngInject\";\n    }\n\n    public upload(file: any, url: string,\n        resultCallback?: (data: any, err: any) => void,\n        progressCallback?: (state: FileUploadState, progress: number) => void\n    ): void {\n\n        let fd: FormData = new FormData();\n        fd.append('file', file);\n\n        if (progressCallback)\n            progressCallback(FileUploadState.Uploading, 0);\n\n        this.$http.post(url, fd, <any>{\n            uploadEventHandlers: {\n                progress: (e: any) => {\n                    if (e.lengthComputable && progressCallback) {\n                        progressCallback(FileUploadState.Uploading, (e.loaded / e.total) * 100);\n                    }\n                }\n            },\n            headers: { 'Content-Type': undefined }\n        })\n        .success((response: any) => {\n            if (progressCallback)\n                progressCallback(FileUploadState.Completed, 100);\n\n            if (resultCallback)\n                resultCallback(response, null);\n        })\n        .error((response: any) => {\n            if (progressCallback)\n                progressCallback(FileUploadState.Failed, 0);\n\n            if (resultCallback)\n                resultCallback(null, response.Error || response);\n        });\n    }\n}\n\nangular\n    .module('pipFiles.Service', [])\n    .service('pipFileUpload', FileUploadService);\n","export enum FileUploadState {\n    Uploading,\n    Completed,\n    Failed\n}","import { ButtonsUpload } from \"../common/ButtonsUpload\";\n\ninterface IFileStartBindings {\n    [key: string]: any;\n\n    type: any\n    buttons: any,\n    name: any,\n    progress: any\n}\n\nconst FileStartBindings: IFileStartBindings = {\n    buttons: '<?pipButtons',\n    name: '<pipName',\n    type: '<?pipType',\n    progress: '<?pipProgress'\n};\n\n\nclass FileStartChanges implements ng.IOnChangesObject, IFileStartBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\n    name: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n    progress: ng.IChangesObject<number>;\n}\n\n\ninterface IFileStartController {\n    name: string;\n    type: string;\n    progress: number;\n    buttons: ButtonsUpload[];\n}\n\nclass FileStartController implements IFileStartController {\n    public name: string;\n    public progress: number = 0;\n    public type: string;\n    public buttons: ButtonsUpload[];\n\n    constructor() { }\n\n    public $onChanges(changes: FileStartChanges) {\n        if (changes.progress) {\n            this.progress = changes.progress.currentValue;\n        }\n\n    }\n\n}\n\nconst fileStartDirective = {\n    controller: FileStartController,\n    bindings: FileStartBindings,\n    templateUrl: 'start/FileStart.html'\n};\n\nangular\n    .module('pipFiles.StartUpload', [])\n    .component('pipStartUpload', fileStartDirective)\n","import { ButtonsUpload } from \"../common/ButtonsUpload\";\n\ninterface IFileSuccessBindings {\n    [key: string]: any;\n\n    type: any\n    buttons: any,\n    name: any\n}\n\nconst FileSuccessBindings: IFileSuccessBindings = {\n    buttons: '=?pipButtons',\n    name: '=pipName',\n    type: '=?pipType',\n}\n\ninterface IFileSuccessController {\n    name: string;\n    type: string;\n    buttons: ButtonsUpload[];\n}\n\nclass FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\n    public name: string;\n    public type: string = 'file';\n    public buttons: ButtonsUpload[];\n\n    constructor() {}\n\n    public $onChanges(changes) {}\n}\n\nconst fileSuccessDirective = {\n    restrict: 'E',\n    replace: true,\n    controller: FileSuccessController,\n    controllerAs: 'vm',\n    bindings: FileSuccessBindings,\n    templateUrl: 'success/FileSuccess.html'\n}\n\n\nangular\n    .module('pipFiles.SuccessUpload', [])\n    .component('pipSuccesUpload', fileSuccessDirective)\n","import { IFileUploadService } from \"../service/IFileUploadService\";\nimport { ButtonsUpload } from \"../common/ButtonsUpload\";\n\nclass FileUploadButtons {\n    retry: Function;\n    cancel: Function;\n    abort: Function;\n}\n\ninterface IFileUploadController {\n    name: string;\n    type: string;\n    state: string;\n    progress: number;\n    onCancel(): void;\n    onRetry(): void;\n    onAbort(): void;\n}\n\ninterface IFileUploadBindings {\n    [key: string]: any;\n\n    buttonFunction: any,\n    buttons: any,\n    error: any,\n    name: any,\n    state: any,\n    type: any,\n    progress: any\n}\n\nconst FileUploadBindings: IFileUploadBindings = {\n    buttonFunction: '<?pipButtonFunctions',\n    buttons: '<?pipButtons',\n    error: '<?pipError',\n    name: '<pipName',\n    state: '<pipState',\n    type: '<?pipType',\n    progress: '<pipProgress'\n}\n\nclass FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\n    buttons: ng.IChangesObject<boolean>;\n    error: ng.IChangesObject<string>;\n    name: ng.IChangesObject<string>;\n    state: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n    progress: ng.IChangesObject<number>;\n}\n\n\nclass FileUploadController implements IFileUploadController, IFileUploadBindings {\n    public buttonFunction: FileUploadButtons;\n    public uploadButtons: ButtonsUpload[];\n    public failButtons: ButtonsUpload[];\n    public startButtons: ButtonsUpload[];\n\n    public name: string;\n    public type: string;\n    public state: string;\n    public progress: number;\n    public buttons: boolean;\n    public error: string = null;\n\n    constructor($scope: ng.IScope) { }\n\n    public $onInit() {\n        if (this.buttons) {\n            this.uploadButtons = [];\n            this.failButtons = [\n                { title: 'Cancel', click: () => { this.onCancel() } },\n                { title: 'Retry', click: () => { this.onRetry() } }\n            ];\n            this.startButtons = [\n                { title: 'Abort', click: () => { this.onAbort() } }\n            ];\n        }\n    }\n\n    public $onChanges(changes: FileUploadChanges) {\n        if (changes.state) {\n            this.state = changes.state.currentValue;\n        }\n\n        if (changes.progress) {\n            this.progress = changes.progress.currentValue;\n        }\n\n        if (changes.error) {\n            this.error = changes.error.currentValue;\n        }\n\n    }\n\n    public onCancel(): void {\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\n    }\n\n    public onRetry(): void {\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\n    }\n\n    public onAbort() {\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\n    }\n\n}\n\nconst fileUploadDirective = {\n    controller: FileUploadController,\n    bindings: FileUploadBindings,\n    templateUrl: 'upload/FileUpload.html'\n};\n\n\nangular\n    .module('pipFiles.FileUpload', [])\n    .component('pipFileUpload', fileUploadDirective)\n","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{$ctrl.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div class=\"color-error pip-error\">{{$ctrl.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"$ctrl.localFile\" id=\"inp_file\" ng-model=\"$ctrl.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"$ctrl.onUploadButtonClick()\" ng-if=\"!$ctrl.localFile\">Choose File</md-button><div ng-if=\"$ctrl.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{$ctrl.localFile.name}}</div><div ng-if=\"$ctrl.localFile.size\" class=\"color-secondary-text\">{{$ctrl.localFile.size}}</div></div><md-button ng-click=\"$ctrl.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::$ctrl.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{$ctrl.progress}}\" ng-if=\"$ctrl.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"$ctrl.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in $ctrl.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"$ctrl.state == 1 && (!$ctrl.buttons || $ctrl.uploadButtons)\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-buttons=\"$ctrl.buttons\"></pip-succes-upload><pip-fail-upload ng-if=\"$ctrl.state == 2\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-error=\"$ctrl.error\" pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"$ctrl.state == 0\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-progress=\"$ctrl.progress\" pip-buttons=\"$ctrl.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
=======
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/TranslateFilter.ts","src/fail/FileFail.ts","src/index.ts","src/model/FileModel.ts","src/select/FileSelect.ts","src/service/FileUploadService.ts","src/service/FileUploadState.ts","src/start/FileStart.ts","src/success/FileSuccess.ts","src/upload/FileUpload.ts","temp/pip-webui-files-html.js"],"names":[],"mappings":"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":"pip-webui-files.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","{\r\n    function translateFilter($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles.Translate', [])\r\n        .filter('translate', translateFilter);\r\n}","import { ButtonsUpload } from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileFailBindings {\r\n    [key: string]: any;\r\n\r\n    buttons: any,\r\n    name: any,\r\n    type: any,\r\n    error: any\r\n}\r\n\r\nconst FileFailBindings: IFileFailBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    error: '<pipError'\r\n}\r\n\r\nclass FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n}\r\n\r\n\r\ninterface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileFailController implements IFileFailController, IFileFailBindings {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n    }\r\n}\r\n\r\nconst fileFailComponent: ng.IComponentOptions = {\r\n    controller: FileFailController,\r\n    bindings: FileFailBindings,\r\n    templateUrl: 'fail/FileFail.html'\r\n};\r\n\r\nangular\r\n    .module('pipFiles.FailUpload', [])\r\n    .component('pipFailUpload', fileFailComponent)\r\n","﻿\r\nimport './service/FileUploadService';\r\nimport './model/FileModel';\r\nimport './success/FileSuccess';\r\nimport './upload/FileUpload';\r\nimport './start/FileStart';\r\nimport './fail/FileFail';\r\nimport './select/FileSelect';\r\n\r\nangular\r\n    .module('pipFiles', [\r\n        'pipFiles.Service',\r\n        'pipFiles.Model',\r\n        'pipFiles.SuccessUpload',\r\n        'pipFiles.FileUpload',\r\n        'pipFiles.StartUpload',\r\n        'pipFiles.FailUpload',\r\n        'pipFiles.Select'\r\n    ]);\r\n","{\r\n    function fileModelLink(scope, element, attrs, $parse) {\r\n        let model = $parse(attrs.fileModel);\r\n        let modelSetter = model.assign;\r\n                \r\n        element.bind('change', () => {\r\n            scope.$apply(() => {\r\n                modelSetter(scope, element[0].files[0]);\r\n            });\r\n        });\r\n    }\r\n\r\n    function fileModelDirective($parse: ng.IParseProvider) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope: ng.IScope, element, attrs: ng.IAttributes) => { \r\n                fileModelLink(scope, element, attrs, $parse) \r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles.Model', [])\r\n        .directive('fileModel', fileModelDirective)\r\n}","{\r\n\r\n    interface IFileSelectController {\r\n        localFile: any;\r\n        onUploadButtonClick(): void;\r\n        onDeleteButtonClick(): void;\r\n    }\r\n\r\n    interface IFileSelectBindings {\r\n        [key: string]: any;\r\n\r\n        localFile: any,\r\n        change: any\r\n    }\r\n\r\n    const FileSelectBindings: IFileSelectBindings = {\r\n        localFile: '<pipLocalFile',\r\n        change: '<pipChange'\r\n    }\r\n\r\n    class FileSelectController implements IFileSelectController {\r\n        public localFile: any;\r\n        public change: Function;\r\n\r\n        constructor($scope: ng.IScope) {\r\n            \"ngInject\";\r\n            $scope.$watch('$ctrl.localFile', (item) => {\r\n                if (this.change) {\r\n                    this.change(this.localFile);\r\n                }\r\n            })\r\n        }\r\n\r\n        public onUploadButtonClick(): void {\r\n            $('#inp_file').click();\r\n        }\r\n\r\n        public onDeleteButtonClick(): void {\r\n            this.localFile = null;\r\n            let forml = document.getElementById('inp_form');\r\n            (<any>forml).reset();\r\n\r\n        }\r\n    }\r\n\r\n    const fileSelectDirective = {\r\n        restrict: 'E',\r\n        replace: true,\r\n        bindings: FileSelectBindings,\r\n        controller: FileSelectController,\r\n        templateUrl: 'select/FileSelect.html'\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles.Select', [])\r\n        .component('pipFileSelect', fileSelectDirective)\r\n\r\n}\r\n","import { FileUploadState } from './FileUploadState';\r\nimport { IFileUploadService } from './IFileUploadService';\r\n\r\nclass FileUploadService implements IFileUploadService {\r\n\r\n    public constructor(private $http: ng.IHttpService) {\r\n        \"ngInject\";\r\n    }\r\n\r\n    public upload(file: any, url: string,\r\n        resultCallback?: (data: any, err: any) => void,\r\n        progressCallback?: (state: FileUploadState, progress: number) => void\r\n    ): void {\r\n\r\n        let fd: FormData = new FormData();\r\n        fd.append('file', file);\r\n\r\n        if (progressCallback)\r\n            progressCallback(FileUploadState.Uploading, 0);\r\n\r\n        this.$http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable && progressCallback) {\r\n                        progressCallback(FileUploadState.Uploading, (e.loaded / e.total) * 100);\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })\r\n        .success((response: any) => {\r\n            if (progressCallback)\r\n                progressCallback(FileUploadState.Completed, 100);\r\n\r\n            if (resultCallback)\r\n                resultCallback(response, null);\r\n        })\r\n        .error((response: any) => {\r\n            if (progressCallback)\r\n                progressCallback(FileUploadState.Failed, 0);\r\n\r\n            if (resultCallback)\r\n                resultCallback(null, response.Error || response);\r\n        });\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipFiles.Service', [])\r\n    .service('pipFileUpload', FileUploadService);\r\n","export enum FileUploadState {\r\n    Uploading,\r\n    Completed,\r\n    Failed\r\n}","import { ButtonsUpload } from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileStartBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any,\r\n    progress: any\r\n}\r\n\r\nconst FileStartBindings: IFileStartBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    progress: '<?pipProgress'\r\n};\r\n\r\n\r\nclass FileStartChanges implements ng.IOnChangesObject, IFileStartBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\ninterface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number = 0;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() { }\r\n\r\n    public $onChanges(changes: FileStartChanges) {\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst fileStartDirective = {\r\n    controller: FileStartController,\r\n    bindings: FileStartBindings,\r\n    templateUrl: 'start/FileStart.html'\r\n};\r\n\r\nangular\r\n    .module('pipFiles.StartUpload', [])\r\n    .component('pipStartUpload', fileStartDirective)\r\n","import { ButtonsUpload } from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileSuccessBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any\r\n}\r\n\r\nconst FileSuccessBindings: IFileSuccessBindings = {\r\n    buttons: '=?pipButtons',\r\n    name: '=pipName',\r\n    type: '=?pipType',\r\n}\r\n\r\ninterface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\r\n    public name: string;\r\n    public type: string = 'file';\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() {}\r\n\r\n    public $onChanges(changes) {}\r\n}\r\n\r\nconst fileSuccessDirective = {\r\n    restrict: 'E',\r\n    replace: true,\r\n    controller: FileSuccessController,\r\n    controllerAs: 'vm',\r\n    bindings: FileSuccessBindings,\r\n    templateUrl: 'success/FileSuccess.html'\r\n}\r\n\r\n\r\nangular\r\n    .module('pipFiles.SuccessUpload', [])\r\n    .component('pipSuccesUpload', fileSuccessDirective)\r\n","import { IFileUploadService } from \"../service/IFileUploadService\";\r\nimport { ButtonsUpload } from \"../common/ButtonsUpload\";\r\n\r\nclass FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\ninterface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\ninterface IFileUploadBindings {\r\n    [key: string]: any;\r\n\r\n    buttonFunction: any,\r\n    buttons: any,\r\n    error: any,\r\n    name: any,\r\n    state: any,\r\n    type: any,\r\n    progress: any\r\n}\r\n\r\nconst FileUploadBindings: IFileUploadBindings = {\r\n    buttonFunction: '<?pipButtonFunctions',\r\n    buttons: '<?pipButtons',\r\n    error: '<?pipError',\r\n    name: '<pipName',\r\n    state: '<pipState',\r\n    type: '<?pipType',\r\n    progress: '<pipProgress'\r\n}\r\n\r\nclass FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\r\n    buttons: ng.IChangesObject<boolean>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    state: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\nclass FileUploadController implements IFileUploadController, IFileUploadBindings {\r\n    public buttonFunction: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor($scope: ng.IScope) { }\r\n\r\n    public $onInit() {\r\n        if (this.buttons) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                { title: 'Cancel', click: () => { this.onCancel() } },\r\n                { title: 'Retry', click: () => { this.onRetry() } }\r\n            ];\r\n            this.startButtons = [\r\n                { title: 'Abort', click: () => { this.onAbort() } }\r\n            ];\r\n        }\r\n    }\r\n\r\n    public $onChanges(changes: FileUploadChanges) {\r\n        if (changes.state) {\r\n            this.state = changes.state.currentValue;\r\n        }\r\n\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n        if (changes.error) {\r\n            this.error = changes.error.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\r\n    }\r\n\r\n}\r\n\r\nconst fileUploadDirective = {\r\n    controller: FileUploadController,\r\n    bindings: FileUploadBindings,\r\n    templateUrl: 'upload/FileUpload.html'\r\n};\r\n\r\n\r\nangular\r\n    .module('pipFiles.FileUpload', [])\r\n    .component('pipFileUpload', fileUploadDirective)\r\n","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon color-badge-bg\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:cross\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '                 <h3 class=\"pip-title\">\\n' +\n    '                Uploading {{$ctrl.type}} failed with errors!\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{$ctrl.name}}\\n' +\n    '            </div>\\n' +\n    '            <div class=\"color-error pip-error\">\\n' +\n    '                 {{$ctrl.error}}\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\">\\n' +\n    '        <div>\\n' +\n    '           <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">\\n' +\n    '                {{::fail.title}}\\n' +\n    '            </md-button> \\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\">\\n' +\n    '      <form id=\"inp_form\" class=\"pip-hidden-form\">\\n' +\n    '        <input type=\"file\" file-model=\"$ctrl.localFile\" id=\"inp_file\" ng-model=\"$ctrl.localFile\"></input>\\n' +\n    '      </form>\\n' +\n    '        <md-button class=\"md-raised md-accent pip-button\"\\n' +\n    '                   ng-click=\"$ctrl.onUploadButtonClick()\" \\n' +\n    '                   ng-if=\"!$ctrl.localFile\">Choose File</md-button>\\n' +\n    '        <div ng-if=\"$ctrl.localFile.name\" class=\"pip-file layout-row layout-align-start-center\">\\n' +\n    '          <md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon>\\n' +\n    '            <div class=\"flex\">\\n' +\n    '                <div class=\"text-body2 text-overflow\">\\n' +\n    '                    {{$ctrl.localFile.name}}\\n' +\n    '                </div>\\n' +\n    '                <div ng-if=\"$ctrl.localFile.size\" class=\"color-secondary-text\">{{$ctrl.localFile.size}}</div>\\n' +\n    '            </div>\\n' +\n    '            <md-button ng-click=\"$ctrl.onDeleteButtonClick()\" class=\"md-icon-button\">\\n' +\n    '              <md-icon md-svg-icon=\"icons:cross-circle\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon bb-orange\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:play\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\">\\n' +\n    '                Uploading {{::$ctrl.type}}\\n' +\n    '            </h3>\\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{$ctrl.name}}\\n' +\n    '            </div>\\n' +\n    '            <div>\\n' +\n    '                <md-progress-linear md-mode=\"determinate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    value=\"{{$ctrl.progress}}\" \\n' +\n    '                    ng-if=\"$ctrl.progress < 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '                <md-progress-linear md-mode=\"indeterminate\" \\n' +\n    '                    class=\"md-accent\" \\n' +\n    '                    ng-if=\"$ctrl.progress == 100\">\\n' +\n    '                </md-progress-linear>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"start in $ctrl.buttons\" ng-click=\"start.click()\">\\n' +\n    '                {{start.title}}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\">\\n' +\n    '  <div class=\"pip-body pip-scroll pip-progress-body\"> \\n' +\n    '    <div class=\"layout-row\">\\n' +\n    '        <div class=\"pip-progress-icon bb-green\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:check\"></md-icon>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-progress-content\">\\n' +\n    '            <h3 class=\"pip-title\">\\n' +\n    '                Uploaded {{::vm.type}} successfully!\\n' +\n    '            </h3>\\n' +\n    '        \\n' +\n    '            <div class=\"color-secondary-text pip-subtitle\">\\n' +\n    '                {{vm.name}}\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\">\\n' +\n    '        <div>\\n' +\n    '           <md-button class=\"md-accent\" \\n' +\n    '                       ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">\\n' +\n    '                {{start.title}}\\n' +\n    '            </md-button> \\n' +\n    '        </div>\\n' +\n    '    </div>  \\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div>\\n' +\n    '    <pip-succes-upload \\n' +\n    '            ng-if=\"$ctrl.state == 1 && (!$ctrl.buttons || $ctrl.uploadButtons)\"\\n' +\n    '            pip-name=\"$ctrl.name\" \\n' +\n    '            pip-type=\"$ctrl.type\" \\n' +\n    '            pip-buttons=\"$ctrl.buttons\"></pip-succes-upload>\\n' +\n    '    <pip-fail-upload \\n' +\n    '            ng-if=\"$ctrl.state == 2\"\\n' +\n    '            pip-name=\"$ctrl.name\" \\n' +\n    '            pip-type=\"$ctrl.type\" \\n' +\n    '            pip-error=\"$ctrl.error\"\\n' +\n    '            pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload>\\n' +\n    '\\n' +\n    '    <pip-start-upload \\n' +\n    '            ng-if=\"$ctrl.state == 0\"\\n' +\n    '            pip-name=\"$ctrl.name\" \\n' +\n    '            pip-type=\"$ctrl.type\" \\n' +\n    '            pip-progress=\"$ctrl.progress\"\\n' +\n    '            pip-buttons=\"$ctrl.startButtons\"></pip-start-upload>\\n' +\n    '</div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
>>>>>>> 3e641bcbf70b3577450d0591d37055116c573ee5
