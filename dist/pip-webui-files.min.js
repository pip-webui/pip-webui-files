!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(e.pip||(e.pip={})).files=t()}}(function(){return function t(e,i,n){function o(r,s){if(!i[r]){if(!e[r]){var p="function"==typeof require&&require;if(!s&&p)return p(r,!0);if(l)return l(r,!0);var c=new Error("Cannot find module '"+r+"'");throw c.code="MODULE_NOT_FOUND",c}var a=i[r]={exports:{}};e[r][0].call(a.exports,function(t){var i=e[r][1][t];return o(i?i:t)},a,a.exports,t,e,i,n)}return i[r].exports}for(var l="function"==typeof require&&require,r=0;r<n.length;r++)o(n[r]);return o}({1:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=function(){function t(){}return t}();i.ButtonsUpload=n},{}],2:[function(t,e,i){!function(){"use strict";function t(t){var e=t.has("pipTranslate")?t.get("pipTranslate"):null;return function(t){return e?e.translate(t)||t:t}}t.$inject=["$injector"],angular.module("pipFiles.Translate",[]).filter("translate",t)}()},{}],3:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n={buttons:"<?pipButtons",name:"<pipName",type:"<?pipType",error:"<pipError"},o=(function(){function t(){}return t}(),{controller:l,bindings:n,templateUrl:"fail/FileFail.html"}),l=function(){function t(t){"ngInject";var e=this;t.$watch("error",function(t){e.error=t})}return t.$inject=["$scope"],t}();!function(){angular.module("pipFiles.FailUpload",[]).component("pipFailUpload",o)}()},{}],4:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=t("./select/FileSelectController"),o=t("./service/FileUploadService");t("./success/FileSuccess"),t("./upload/FileUpload"),t("./start/FileStart"),t("./fail/FileFail"),function(){function t(t){"ngInject";return{restrict:"A",link:function(e,i,n){var o=t(n.fileModel),l=o.assign;i.bind("change",function(){e.$apply(function(){l(e,i[0].files[0])})})}}}function e(){return{restrict:"E",replace:!0,scope:{localFile:"="},controller:n.FileSelectController,controllerAs:"vm",templateUrl:"select/FileSelect.html"}}t.$inject=["$parse"],angular.module("pipFiles",["pipFiles.SuccessUpload","pipFiles.FileUpload","pipFiles.StartUpload","pipFiles.FailUpload"]).directive("fileModel",t).directive("pipFileSelect",e).service("pipFileUpload",o.FileUploadService)}()},{"./fail/FileFail":3,"./select/FileSelectController":5,"./service/FileUploadService":6,"./start/FileStart":7,"./success/FileSuccess":8,"./upload/FileUpload":9}],5:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=function(){function t(t){"ngInject";this.localFile=t.localFile,t.$watch("vm.localFile",function(e){t.localFile=e})}return t.$inject=["$scope"],t.prototype.onUploadButtonClick=function(){$("#inp_file").click()},t.prototype.onDeleteButtonClick=function(){this.localFile=null;var t=document.getElementById("inp_form");t.reset()},t}();i.FileSelectController=n},{}],6:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=function(){function t(){}return t}();n.All=["start","upload","fail"],n.Start="start",n.Upload="upload",n.Fail="fail",i.FileUploadState=n;var o=function(){function t(t){this.$http=t,this.error=null}return t.prototype.upload=function(t,e,i){var o=this,l=new FormData;l.append("file",e),this.progress=0,this.state=n.Start,this.$http.post(t,l,{uploadEventHandlers:{progress:function(t){t.lengthComputable&&(o.progress=t.loaded/t.total*100)}},headers:{"Content-Type":void 0}}).success(function(t){o.state=n.Upload,i&&i(t,null)}).error(function(t){o.state=n.Fail,o.error=t.Error||t,i&&i(null,t)})},t}();i.FileUploadService=o},{}],7:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n={buttons:"<?pipButtons",name:"<pipName",type:"<?pipType",progress:"<?pipProgress"},o=(function(){function t(){}return t}(),function(){function t(){this.progress=0}return t.prototype.$onChanges=function(t){t.progress&&(this.progress=t.progress.currentValue)},t}());!function(){var t={controller:o,bindings:n,templateUrl:"start/FileStart.html"};angular.module("pipFiles.StartUpload",[]).component("pipStartUpload",t)}()},{}],8:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n={buttons:"=?pipButtons",name:"=pipName",type:"=?pipType"},o=function(){function t(){this.type="file"}return t.prototype.$onChanges=function(t){},t}();!function(){var t={restrict:"E",replace:!0,controller:o,controllerAs:"vm",bindings:n,templateUrl:"success/FileSuccess.html"};angular.module("pipFiles.SuccessUpload",[]).component("pipSuccesUpload",t)}()},{}],9:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=(function(){function t(){}return t}(),{buttonFunction:"<?pipButtonFunctions",buttons:"<?pipButtons",error:"<?pipError",name:"<pipName",state:"<pipState",type:"<?pipType",progress:"<pipProgress"}),o=(function(){function t(){}return t}(),function(){function t(t){this.error=null}return t.prototype.$onInit=function(){var t=this;this.buttons&&(this.uploadButtons=[],this.failButtons=[{title:"Cancel",click:function(){t.onCancel()}},{title:"Retry",click:function(){t.onRetry()}}],this.startButtons=[{title:"Abort",click:function(){t.onAbort()}}])},t.prototype.$onChanges=function(t){t.state&&(this.state=t.state.currentValue),t.progress&&(this.progress=t.progress.currentValue),t.error&&(this.error=t.error.currentValue)},t.prototype.onCancel=function(){this.buttonFunction.cancel&&this.buttonFunction.cancel()},t.prototype.onRetry=function(){this.buttonFunction.retry&&this.buttonFunction.retry()},t.prototype.onAbort=function(){this.buttonFunction.abort&&this.buttonFunction.abort()},t}()),l={controller:o,bindings:n,templateUrl:"upload/FileUpload.html"};!function(){angular.module("pipFiles.FileUpload",[]).component("pipFileUpload",l)}()},{}],10:[function(t,e,i){!function(t){try{t=angular.module("pipFiles.Templates")}catch(e){t=angular.module("pipFiles.Templates",[])}t.run(["$templateCache",function(t){t.put("fail/FileFail.html",'<div class="pip-files pip-progress-files"><div class="pip-body pip-scroll pip-progress-body"><div class="layout-row"><div class="pip-progress-icon color-badge-bg"><md-icon md-svg-icon="icons:cross"></md-icon></div><div class="pip-progress-content"><h3 class="pip-title">Uploading {{$ctrl.type}} failed with errors!</h3><div class="color-secondary-text pip-subtitle">{{$ctrl.name}}</div><div class="color-error pip-error">{{$ctrl.error}}</div></div></div></div><div class="pip-footer layout-row layout-align-end-center" ng-if="$ctrl.buttons && $ctrl.buttons.length > 0"><div><md-button class="md-accent" ng-repeat="fail in $ctrl.buttons" ng-click="fail.click()">{{::fail.title}}</md-button></div></div></div>')}])}(),function(t){try{t=angular.module("pipFiles.Templates")}catch(e){t=angular.module("pipFiles.Templates",[])}t.run(["$templateCache",function(t){t.put("select/FileSelect.html",'<div class="pip-file-select"><form id="inp_form" class="pip-hidden-form"><input type="file" file-model="vm.localFile" id="inp_file" ng-model="vm.localFile"></form><md-button class="md-raised md-accent pip-button" ng-click="vm.onUploadButtonClick()" ng-if="!vm.localFile">Choose File</md-button><div ng-if="vm.localFile.name" class="pip-file layout-row layout-align-start-center"><md-icon md-svg-icon="icons:document" class="pip-icon"></md-icon><div class="flex"><div class="text-body2 text-overflow">{{vm.localFile.name}}</div><div ng-if="vm.localFile.size" class="color-secondary-text">{{vm.localFile.size}}</div></div><md-button ng-click="vm.onDeleteButtonClick()" class="md-icon-button"><md-icon md-svg-icon="icons:cross-circle"></md-icon></md-button></div></div>')}])}(),function(t){try{t=angular.module("pipFiles.Templates")}catch(e){t=angular.module("pipFiles.Templates",[])}t.run(["$templateCache",function(t){t.put("start/FileStart.html",'<div class="pip-files pip-progress-files"><div class="pip-body pip-scroll pip-progress-body"><div class="layout-row"><div class="pip-progress-icon bb-orange"><md-icon md-svg-icon="icons:play"></md-icon></div><div class="pip-progress-content"><h3 class="pip-title">Uploading {{::$ctrl.type}}</h3><div class="color-secondary-text pip-subtitle">{{$ctrl.name}}</div><div><md-progress-linear md-mode="determinate" class="md-accent" value="{{$ctrl.progress}}" ng-if="$ctrl.progress < 100"></md-progress-linear><md-progress-linear md-mode="indeterminate" class="md-accent" ng-if="$ctrl.progress == 100"></md-progress-linear></div></div></div></div><div class="pip-footer layout-row layout-align-end-center" ng-if="$ctrl.buttons"><div><md-button class="md-accent" ng-repeat="start in $ctrl.buttons" ng-click="start.click()">{{start.title}}</md-button></div></div></div>')}])}(),function(t){try{t=angular.module("pipFiles.Templates")}catch(e){t=angular.module("pipFiles.Templates",[])}t.run(["$templateCache",function(t){t.put("success/FileSuccess.html",'<div class="pip-files pip-progress-files"><div class="pip-body pip-scroll pip-progress-body"><div class="layout-row"><div class="pip-progress-icon bb-green"><md-icon md-svg-icon="icons:check"></md-icon></div><div class="pip-progress-content"><h3 class="pip-title">Uploaded {{::vm.type}} successfully!</h3><div class="color-secondary-text pip-subtitle">{{vm.name}}</div></div></div></div><div class="pip-footer layout-row layout-align-end-center" ng-if="vm.buttons && vm.buttons.length > 0"><div><md-button class="md-accent" ng-repeat="start in vm.buttons" ng-click="start.click()">{{start.title}}</md-button></div></div></div>')}])}(),function(t){try{t=angular.module("pipFiles.Templates")}catch(e){t=angular.module("pipFiles.Templates",[])}t.run(["$templateCache",function(t){t.put("upload/FileUpload.html",'<div><pip-succes-upload ng-if="$ctrl.state == \'upload\' && (!$ctrl.buttons || $ctrl.uploadButtons)" pip-name="$ctrl.name" pip-type="$ctrl.type" pip-buttons="$ctrl.uploadButtons"></pip-succes-upload><pip-fail-upload ng-if="$ctrl.state == \'fail\'" pip-name="$ctrl.name" pip-type="$ctrl.type" pip-error="$ctrl.error" pip-buttons="$ctrl.failButtons"></pip-fail-upload><pip-start-upload ng-if="$ctrl.state == \'start\'" pip-name="$ctrl.name" pip-type="$ctrl.type" pip-progress="$ctrl.progress" pip-buttons="$ctrl.startButtons"></pip-start-upload></div>')}])}()},{}]},{},[10,1,2,3,4,5,6,7,8,9])(10)});
//# sourceMappingURL=pip-webui-files.min.js.map
