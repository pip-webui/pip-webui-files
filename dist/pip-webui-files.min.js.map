{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/files.ts","src/progress/FileProgressController.ts","src/service/FileSelectService.ts","src/upload/FileSelectController.ts","temp/pip-webui-files-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","files","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","thisModule","angular","filter","$injector","pipTranslate","has","get","key","translate","FileSelectController_1","FileProgressController_1","FileSelectService_1","fileModelDirective","$parse","restrict","scope","element","attrs","model","fileModel","modelSetter","assign","bind","$apply","fileSelectDirective","replace","localFile","controller","FileSelectController","controllerAs","templateUrl","fileProgressDirective","FileProgressController","cancel","retry","name","type","$inject","directive","service","FileSelectService","$scope","pipFileSelect","_cancel","_retry","_service","prototype","globalProgress","errorFail","error","localProgress","progress","onCancel","onRetry","abort","4","GlobalProgress","All","Start","Upload","Fail","$http","pipTransaction","_http","transaction","create","upload","url","file","callback","_this","fd","FormData","append","begin","lengthComputable","loaded","total","headers","Content-Type","undefined","success","response","end","5","$watch","item","onUploadButtonClick","$","click","onDeleteButtonClick","forml","document","getElementById","reset","6","run","$templateCache","put"],"mappings":"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","file":"pip-webui-files.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFiles.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","ï»¿\r\nimport {FileSelectController} from './upload/FileSelectController';\r\nimport {FileProgressController} from './progress/FileProgressController';\r\nimport {FileSelectService} from './service/FileSelectService';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'upload/FileSelect.html'\r\n        };\r\n    }\r\n\r\n     function fileProgressDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileProgressController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                cancel: '=pipCancel',\r\n                retry: '=pipRetry' ,\r\n                name: '=pipName',\r\n                type: '=?pipType'\r\n            },\r\n            templateUrl: 'progress/FileProgress.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', [])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        .directive('pipFileProgress', fileProgressDirective)\r\n        .service('pipFileSelect', FileSelectService);\r\n\r\n\r\n})();\r\n","\r\nimport {\r\n    IFileSelectService\r\n} from \"../service/FileSelectService\";\r\n\r\nexport interface IFileProgressController {\r\n    name: string;\r\n    type: string;\r\n    globalProgress(): string;\r\n    localProgress(): number;\r\n    onCancel(): void;\r\n    onCancel(): void;\r\n    abort(): void;\r\n}\r\n\r\nexport class FileProgressController implements IFileProgressController {\r\n    private _service: IFileSelectService;\r\n    private _cancel: Function;\r\n    private _retry: Function;\r\n    \r\n    public name: string;\r\n    public type: string;\r\n\r\n    constructor(\r\n        $scope: ng.IScope, \r\n        pipFileSelect: IFileSelectService\r\n    ) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this._cancel = $scope['cancel'];\r\n        this._retry = $scope['retry'];\r\n        this.name = $scope['name'];\r\n\r\n        this._service = pipFileSelect;\r\n    }\r\n\r\n    public globalProgress(): string {\r\n        return this._service.globalProgress;\r\n    }\r\n\r\n    public errorFail(): string {\r\n        return this._service.error;\r\n    }\r\n\r\n    public localProgress(): number {\r\n        return this._service.progress;\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._cancel) this._cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._retry) this._retry();\r\n    }\r\n\r\n    public abort() {\r\n        this._service.abort();\r\n        if (this._cancel) this._cancel();\r\n    }\r\n\r\n}","export class GlobalProgress {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileSelectService {\r\n    progress: number;\r\n    globalProgress: string;\r\n    error: string;\r\n    transaction;//: pip.services.Transaction;\r\n    upload(url: string, file: any, callback?: (data: any, err: any) => void): void;\r\n    abort(): void;\r\n}\r\n\r\nexport class FileSelectService implements IFileSelectService {\r\n    private _http: ng.IHttpService;\r\n\r\n    public progress: number;\r\n    public globalProgress: string;\r\n    public error: string = null;\r\n    public transaction;//: pip.services.Transaction;\r\n\r\n    public constructor(\r\n        $http: ng.IHttpService,\r\n        pipTransaction//: pip.services.ITransactionService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._http = $http;\r\n        this.transaction = pipTransaction.create('upload file');\r\n    }\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n        //console.log(file); \r\n\r\n        let fd = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        this.transaction.begin(GlobalProgress.Start);\r\n        this.globalProgress = GlobalProgress.Start;\r\n        this._http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.globalProgress = GlobalProgress.Upload;\r\n            this.transaction.end(GlobalProgress.Upload);\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.globalProgress = GlobalProgress.Fail;\r\n            this.transaction.end(GlobalProgress.Fail);\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n\r\n    public abort(): void {\r\n        this.transaction.abort();\r\n        //this.globalProgress = null;\r\n    }\r\n\r\n\r\n}","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('progress/FileProgress.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon\" ng-class=\"{\\'color-badge-bg\\': vm.globalProgress() == \\'fail\\', \\'bb-orange\\': vm.globalProgress() == \\'start\\', \\'bb-green\\': vm.globalProgress() == \\'upload\\' }\"><md-icon md-svg-icon=\"icons:check\" ng-if=\"vm.globalProgress() == \\'upload\\'\"></md-icon><md-icon md-svg-icon=\"bootbarn-icons:play\" ng-if=\"vm.globalProgress() == \\'start\\'\"></md-icon><md-icon md-svg-icon=\"icons:cross\" ng-if=\"vm.globalProgress() == \\'fail\\'\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\" ng-if=\"vm.globalProgress() == \\'start\\'\">Uploading {{vm.type}}</h3><h3 class=\"pip-title\" ng-if=\"vm.globalProgress() == \\'upload\\'\">Uploaded {{vm.type}} successfully!</h3><h3 class=\"pip-title\" ng-if=\"vm.globalProgress() == \\'fail\\'\">Uploading {{vm.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div class=\"color-error pip-error\" ng-if=\"vm.globalProgress() == \\'fail\\'\">{{vm.errorFail()}}</div><div ng-if=\"vm.globalProgress() == \\'start\\'\"><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{vm.localProgress()}}\" ng-if=\"vm.localProgress() < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"vm.localProgress() == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\" ng-show=\"!vm.globalProgress() || vm.globalProgress() == \\'fail\\'\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onRetry()\" ng-show=\"vm.globalProgress() == \\'fail\\'\">Retry</md-button><md-button class=\"md-accent\" ng-click=\"vm.abort()\" ng-show=\"vm.globalProgress() == \\'start\\'\">Abort</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileSelect.html',\n    '<div class=\"pip-file-upload\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"vm.onUploadButtonClick()\" ng-if=\"!vm.localFile\">Choose File</md-button><div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{vm.localFile.name}}</div><div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div></div><md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"]}