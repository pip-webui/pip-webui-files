{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/Translate.ts","src/fail/FileFail.ts","src/index.ts","src/model/FileModel.ts","src/select/FileSelect.ts","src/service/FileUploadService.ts","src/service/FileUploadState.ts","src/start/FileStart.ts","src/success/FileSuccess.ts","src/upload/FileUpload.ts","temp/pip-webui-files-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","files","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ButtonsUpload","filerTranslate","$injector","has","get","key","pipTranslate","translate","$inject","filter","Object","defineProperty","value","FileFailBindings","buttons","name","type","error","FileFailController","FileFailChanges","$scope","_this","$watch","fileFailComponent","controller","bindings","templateUrl","./model/FileModel","./select/FileSelect","./service/FileUploadService","./start/FileStart","./success/FileSuccess","./upload/FileUpload","5","fileModelDirective","$parse","scope","element","attrs","model","fileModel","assign","bind","$apply","modelSetter","angular","directive","FileSelectController","item","console","log","prototype","onUploadButtonClick","$","click","onDeleteButtonClick","localFile","forml","document","getElementById","reset","replace","7","FileUploadService","$http","upload","url","file","callback","fd","FormData","FileUploadState","Start","progress","lengthComputable","loaded","total","Content-Type","undefined","success","response","state","FileUploadState_1","Upload","Fail","service","8","10","FileStartBindings","FileStartChanges","FileStartController","$onChanges","changes","currentValue","fileStartDirective","component","11","FileSuccessBindings","FileSuccessController","fileSuccessDirective","restrict","12","FileUploadBindings","FileUploadButtons","buttonFunction","FileUploadChanges","FileUploadController","$onInit","uploadButtons","failButtons","title","onCancel","onRetry","startButtons","onAbort","cancel","retry","abort","fileUploadDirective","13","run","$templateCache","put"],"mappings":"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","file":"pip-webui-files.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(() => {\r\n    'use strict';\r\n    function filerTranslate($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular.module('pipFiles.Translate', [])\r\n        .filter('translate', filerTranslate);\r\n\r\n})();","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\n\r\ninterface IFileFailBindings {\r\n    [key: string]: any;\r\n\r\n    buttons: any,\r\n    name: any,\r\n    type: any,\r\n    error: any\r\n}\r\n\r\nconst FileFailBindings: IFileFailBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    error: '<pipError'\r\n}\r\n\r\nclass FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n}\r\n\r\n\r\ninterface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileFailController implements IFileFailController, IFileFailBindings {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n(() => {\r\n\r\n    const fileFailComponent: ng.IComponentOptions = {\r\n        controller: FileFailController,\r\n        bindings: FileFailBindings,\r\n        templateUrl: 'fail/FileFail.html'\r\n    };\r\n\r\n    angular\r\n        .module('pipFiles.FailUpload', [])\r\n        .component('pipFailUpload', fileFailComponent)\r\n\r\n\r\n})();","﻿\r\nimport './service/FileUploadService';\r\nimport './model/FileModel';\r\nimport './success/FileSuccess';\r\nimport './upload/FileUpload';\r\nimport './start/FileStart';\r\nimport './fail/FileFail';\r\nimport './select/FileSelect';\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipFiles', [\r\n            'pipFiles.Service',\r\n            'pipFiles.Model',\r\n            'pipFiles.SuccessUpload',\r\n            'pipFiles.FileUpload',\r\n            'pipFiles.StartUpload',\r\n            'pipFiles.FailUpload',\r\n            'pipFiles.Select'\r\n        ])\r\n})();\r\n","\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.Model', [])\r\n        .directive('fileModel', fileModelDirective)\r\n\r\n\r\n})();","\r\n(() => {\r\n\r\n    interface IFileSelectController {\r\n        localFile: any;\r\n        onUploadButtonClick(): void;\r\n        onDeleteButtonClick(): void;\r\n    }\r\n\r\n    class FileSelectController implements IFileSelectController {\r\n        public localFile: any;\r\n\r\n        constructor($scope: ng.IScope) {\r\n            \"ngInject\";\r\n            /*this.localFile = $scope['localFile'];\r\n             */\r\n            $scope.$watch('$ctrl.localFile', (item) => {\r\n                //this.localFile = item;\r\n                console.log('aa', item);\r\n                //$scope['localFile'] = item;\r\n                console.log($scope);\r\n            })\r\n        }\r\n\r\n        public onUploadButtonClick(): void {\r\n            $('#inp_file').click();\r\n        }\r\n\r\n        public onDeleteButtonClick(): void {\r\n            this.localFile = null;\r\n            let forml = document.getElementById('inp_form');\r\n            (<any>forml).reset();\r\n\r\n        }\r\n    }\r\n\r\n    const fileSelectDirective = {\r\n        restrict: 'E',\r\n        replace: true,\r\n        bindings: {\r\n            localFile: '@'\r\n        },\r\n        controller: FileSelectController,\r\n        templateUrl: 'select/FileSelect.html'\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles.Select', [])\r\n        .component('pipFileSelect', fileSelectDirective)\r\n\r\n\r\n})();\r\n","import { FileUploadState } from './FileUploadState';\r\nimport { IFileUploadService } from './IFileUploadService';\r\n\r\nclass FileUploadService implements IFileUploadService {\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor(private $http: ng.IHttpService) { }\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n\r\n        let fd: FormData = new FormData();\r\n        fd.append('file', file);\r\n\r\n        this.progress = 0;\r\n        this.state = FileUploadState.Start;\r\n        this.$http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })\r\n            .success((response: any) => {\r\n                this.state = FileUploadState.Upload;\r\n\r\n                if (callback) callback(response, null);\r\n            })\r\n            .error((response: any) => {\r\n                this.state = FileUploadState.Fail;\r\n                this.error = response.Error || response;\r\n\r\n                if (callback) callback(null, response);\r\n            });\r\n    }\r\n}\r\n\r\n\r\n(() => {\r\n\r\n\r\n    angular\r\n        .module('pipFiles.Service', [])\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileStartBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any,\r\n    progress: any\r\n}\r\n\r\nconst FileStartBindings: IFileStartBindings = {\r\n    buttons: '<?pipButtons',\r\n    name: '<pipName',\r\n    type: '<?pipType',\r\n    progress: '<?pipProgress'\r\n};\r\n\r\n\r\nclass FileStartChanges implements ng.IOnChangesObject, IFileStartBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\r\n    name: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\ninterface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number = 0;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() { }\r\n\r\n    public $onChanges(changes: FileStartChanges) {\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n(() => {\r\n\r\n    const fileStartDirective = {\r\n        controller: FileStartController,\r\n        bindings: FileStartBindings,\r\n        templateUrl: 'start/FileStart.html'\r\n    };\r\n\r\n    angular\r\n        .module('pipFiles.StartUpload', [])\r\n        .component('pipStartUpload', fileStartDirective)\r\n\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\ninterface IFileSuccessBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any\r\n}\r\n\r\nconst FileSuccessBindings: IFileSuccessBindings = {\r\n    buttons: '=?pipButtons',\r\n    name: '=pipName',\r\n    type: '=?pipType',\r\n};\r\n\r\n\r\ninterface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nclass FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\r\n    public name: string;\r\n    public type: string = 'file';\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() {}\r\n\r\n    public $onChanges(changes) {}\r\n}\r\n\r\n\r\n(() => {\r\n \r\n     const fileSuccessDirective = {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            bindings: FileSuccessBindings,\r\n            templateUrl: 'success/FileSuccess.html'\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.SuccessUpload', [])\r\n        .component('pipSuccesUpload', fileSuccessDirective)\r\n\r\n\r\n})();","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/IFileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nclass FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\ninterface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\ninterface IFileUploadBindings {\r\n    [key: string]: any;\r\n\r\n    buttonFunction: any,\r\n    buttons: any,\r\n    error: any,\r\n    name: any,\r\n    state: any,\r\n    type: any,\r\n    progress: any\r\n}\r\n\r\nconst FileUploadBindings: IFileUploadBindings = {\r\n    buttonFunction: '<?pipButtonFunctions',\r\n    buttons: '<?pipButtons',\r\n    error: '<?pipError',\r\n    name: '<pipName',\r\n    state: '<pipState',\r\n    type: '<?pipType',\r\n    progress: '<pipProgress'\r\n}\r\n\r\nclass FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\r\n    buttons: ng.IChangesObject<boolean>;\r\n    error: ng.IChangesObject<string>;\r\n    name: ng.IChangesObject<string>;\r\n    state: ng.IChangesObject<string>;\r\n    type: ng.IChangesObject<string>;\r\n    progress: ng.IChangesObject<number>;\r\n}\r\n\r\n\r\nclass FileUploadController implements IFileUploadController, IFileUploadBindings {\r\n    public buttonFunction: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor( $scope: ng.IScope ) {}\r\n    \r\n    public $onInit() {\r\n         if (this.buttons) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n    }\r\n    \r\n    public $onChanges(changes: FileUploadChanges) {\r\n        if (changes.state) {\r\n            this.state = changes.state.currentValue;\r\n        }\r\n\r\n        if (changes.progress) {\r\n            this.progress = changes.progress.currentValue;\r\n        }\r\n\r\n        if (changes.error) {\r\n            this.error = changes.error.currentValue;\r\n        }\r\n\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\r\n    }\r\n\r\n}\r\n\r\n\r\nconst fileUploadDirective = {\r\n    controller: FileUploadController,\r\n    bindings: FileUploadBindings,\r\n    templateUrl: 'upload/FileUpload.html'\r\n};\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipFiles.FileUpload', [])\r\n        .component('pipFileUpload', fileUploadDirective)\r\n       \r\n})();","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{$ctrl.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div class=\"color-error pip-error\">{{$ctrl.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"$ctrl.localFile\" id=\"inp_file\" ng-model=\"$ctrl.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"$ctrl.onUploadButtonClick()\" ng-if=\"!$ctrl.localFile\">Choose File</md-button><div ng-if=\"$ctrl.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{$ctrl.localFile.name}}</div><div ng-if=\"$ctrl.localFile.size\" class=\"color-secondary-text\">{{$ctrl.localFile.size}}</div></div><md-button ng-click=\"$ctrl.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::$ctrl.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{$ctrl.progress}}\" ng-if=\"$ctrl.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"$ctrl.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in $ctrl.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"$ctrl.state == \\'upload\\' && (!$ctrl.buttons || $ctrl.uploadButtons)\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-buttons=\"$ctrl.uploadButtons\"></pip-succes-upload><pip-fail-upload ng-if=\"$ctrl.state == \\'fail\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-error=\"$ctrl.error\" pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"$ctrl.state == \\'start\\'\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-progress=\"$ctrl.progress\" pip-buttons=\"$ctrl.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"]}