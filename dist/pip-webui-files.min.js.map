{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/translate.ts","src/fail/FileFailController.ts","src/files.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","src/start/FileStartController.ts","src/success/FileSuccessController.ts","src/success/index.ts","src/upload/FileUploadController.ts","src/upload/index.ts","temp/pip-webui-files-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","files","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ButtonsUpload","filerTranslate","$injector","has","get","key","pipTranslate","translate","$inject","filter","Object","defineProperty","value","FileFailController","$scope","_this","type","name","buttons","error","$watch","FileSelectController_1","FileFailController_1","FileUploadService_1","FileStartController_1","fileModelDirective","$parse","scope","element","attrs","model","fileModel","assign","bind","$apply","modelSetter","fileSelectDirective","localFile","controller","FileSelectController","controllerAs","templateUrl","fileFailDirective","restrict","replace","fileStartDirective","FileStartController","progress","directive","./fail/FileFailController","./select/FileSelectController","./service/FileUploadService","./start/FileStartController","./success/index","./upload/index","5","item","prototype","onUploadButtonClick","$","click","onDeleteButtonClick","forml","document","getElementById","reset","6","FileUploadState","All","Start","Upload","Fail","FileUploadService","$http","upload","url","file","callback","fd","FormData","lengthComputable","loaded","total","headers","Content-Type","undefined","success","response","state","7","FileSuccessController","9","FileSuccessController_1","FileSuccessBindings","fileSuccessDirective","component","10","FileUploadButtons","FileUploadController","_functions","uploadButtons","failButtons","title","onCancel","onRetry","startButtons","onAbort","cancel","retry","fileUploadDirective","FileUploadController_1","buttonFunction","angular","./FileUploadController","12","run","$templateCache","put"],"mappings":"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","file":"pip-webui-files.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(() => {\r\n    'use strict';\r\n    function filerTranslate($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular.module('pipFiles.Translate', [])\r\n        .filter('translate', filerTranslate);\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileFailController implements IFileFailController {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.error = $scope['error'] || null;\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n      \r\n    }\r\n}","ï»¿\r\nimport {FileSelectController} from './select/FileSelectController';\r\nimport {FileFailController} from './fail/FileFailController';\r\nimport {FileUploadService} from './service/FileUploadService';\r\nimport {FileStartController} from './start/FileStartController';\r\n\r\nimport './success/index';\r\nimport './upload/index';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'select/FileSelect.html'\r\n        };\r\n    }\r\n     function fileFailDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileFailController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                error: '=pipError'\r\n            },\r\n            templateUrl: 'fail/FileFail.html'\r\n        };\r\n    }\r\n\r\n    function fileStartDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileStartController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'start/FileStart.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', ['pipFiles.SuccessUpload', 'pipFiles.FileUpload'])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        //.directive('pipFileUpload', fileUploadDirective)\r\n        //.component('pipSuccesUpload', fileSuccessDirective)\r\n        .directive('pipFailUpload', fileFailDirective)\r\n        .directive('pipStartUpload', fileStartDirective)\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    state: string;\r\n    error: string;\r\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor( private $http: ng.IHttpService) {}\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n        \r\n        let fd: FormData = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        this.state = FileUploadState.Start;\r\n        this.$http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.state = FileUploadState.Upload;\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.state = FileUploadState.Fail;\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.progress = $scope['progress'] || null;\r\n      \r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nimport { IFileSuccessBindings} from './index';\r\n\r\nexport interface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\r\n    public name: string;\r\n    public type: string = 'file';\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor() {}\r\n\r\n    public $onChanges(changes) {}\r\n}","\r\nimport {FileSuccessController} from './FileSuccessController';\r\n\r\nexport interface IFileSuccessBindings {\r\n    [key: string]: any;\r\n\r\n    type: any\r\n    buttons: any,\r\n    name: any\r\n}\r\n\r\nconst FileSuccessBindings: IFileSuccessBindings = {\r\n    buttons: '=?pipButtons',\r\n    name: '=pipName',\r\n    type: '=?pipType',\r\n};\r\n\r\n(() => {\r\n \r\n     const fileSuccessDirective = {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            bindings: FileSuccessBindings,\r\n            templateUrl: 'success/FileSuccess.html'\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipFiles.SuccessUpload', [])\r\n        .component('pipSuccesUpload', fileSuccessDirective)\r\n\r\n\r\n})();\r\n","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\nexport class FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\nexport class FileUploadController implements IFileUploadController {\r\n    //private _buttonFunction: FileUploadButtons;\r\n    private _functions: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor(\r\n        $scope: ng.IScope\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._functions = $scope['buttonFunction'];\r\n        \r\n        // Init parameters\r\n        if (this._functions) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n        this.buttons = $scope['buttons'] || false;\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.state = $scope['state'];\r\n        this.error = $scope['error'];\r\n        this.progress = $scope['progress'];\r\n\r\n        $scope.$watch('state', (state: string) => {\r\n            this.state = state;\r\n        })\r\n\r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n\r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._functions.cancel) this._functions.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._functions.retry) this._functions.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this._functions.abort) this._functions.abort();\r\n    }\r\n\r\n}","\r\nimport {FileUploadController} from './FileUploadController';\r\n\r\n(() => {\r\n    \r\n     function fileUploadDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileUploadController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttonFunction: '=?pipButtonFunctions',\r\n                buttons: '=?pipButtons',\r\n                error: '=?pipError',\r\n                name: '=pipName',\r\n                state: '=pipState',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'upload/FileUpload.html'\r\n        };\r\n  \r\n    }\r\n\r\n    angular\r\n        .module('pipFiles.FileUpload', [])\r\n        .directive('pipFileUpload', fileUploadDirective)\r\n       \r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{vm.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div class=\"color-error pip-error\">{{vm.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in vm.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"vm.onUploadButtonClick()\" ng-if=\"!vm.localFile\">Choose File</md-button><div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{vm.localFile.name}}</div><div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div></div><md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::vm.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{vm.progress}}\" ng-if=\"vm.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"vm.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"vm.state == \\'upload\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-buttons=\"vm.buttons\"></pip-succes-upload><pip-fail-upload ng-if=\"vm.state == \\'fail\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-error=\"vm.error\" pip-buttons=\"vm.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"vm.state == \\'start\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-progress=\"vm.progress\" pip-buttons=\"vm.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"]}