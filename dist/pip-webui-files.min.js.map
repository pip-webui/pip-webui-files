{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/TranslateFilter.ts","src/fail/FileFail.ts","src/index.ts","src/model/FileModel.ts","src/select/FileSelect.ts","src/service/FileUploadService.ts","src/service/FileUploadState.ts","src/start/FileStart.ts","src/success/FileSuccess.ts","src/upload/FileUpload.ts","temp/pip-webui-files-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","files","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ButtonsUpload","translateFilter","$injector","has","get","key","pipTranslate","translate","$inject","filter","Object","defineProperty","value","FileFailBindings","buttons","name","type","error","FileFailController","FileFailChanges","$scope","_this","$watch","fileFailComponent","controller","bindings","templateUrl","./model/FileModel","./select/FileSelect","./service/FileUploadService","./start/FileStart","./success/FileSuccess","./upload/FileUpload","5","fileModelLink","scope","element","attrs","$parse","model","fileModel","assign","bind","$apply","modelSetter","fileModelDirective","restrict","link","angular","FileSelectBindings","localFile","change","FileSelectController","item","prototype","onUploadButtonClick","$","click","onDeleteButtonClick","forml","document","getElementById","reset","fileSelectDirective","replace","7","FileUploadService","$http","upload","file","url","resultCallback","progressCallback","fd","FormData","FileUploadState_1","FileUploadState","Uploading","progress","lengthComputable","loaded","total","headers","Content-Type","undefined","success","response","Completed","Failed","service","8","10","FileStartBindings","FileStartChanges","FileStartController","$onChanges","changes","currentValue","fileStartDirective","component","11","FileSuccessBindings","FileSuccessController","fileSuccessDirective","12","FileUploadBindings","FileUploadButtons","buttonFunction","state","FileUploadChanges","FileUploadController","$onInit","uploadButtons","failButtons","title","onCancel","onRetry","startButtons","onAbort","cancel","retry","abort","fileUploadDirective","13","run","$templateCache","put"],"mappings":"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","file":"pip-webui-files.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\n    public title: string;\n    public click: Function;\n}","{\n    function translateFilter($injector: angular.auto.IInjectorService) {\n        let pipTranslate: any = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return (key: string) => {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipFiles.Translate', [])\n        .filter('translate', translateFilter);\n}","import { ButtonsUpload } from \"../common/ButtonsUpload\";\n\ninterface IFileFailBindings {\n    [key: string]: any;\n\n    buttons: any,\n    name: any,\n    type: any,\n    error: any\n}\n\nconst FileFailBindings: IFileFailBindings = {\n    buttons: '<?pipButtons',\n    name: '<pipName',\n    type: '<?pipType',\n    error: '<pipError'\n}\n\nclass FileFailChanges implements ng.IOnChangesObject, IFileFailBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\n    error: ng.IChangesObject<string>;\n    name: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n}\n\n\ninterface IFileFailController {\n    name: string;\n    type: string;\n    error: string;\n    buttons: ButtonsUpload[];\n}\n\nclass FileFailController implements IFileFailController, IFileFailBindings {\n    public name: string;\n    public type: string;\n    public error: string;\n    public buttons: ButtonsUpload[];\n\n    constructor($scope: ng.IScope) {\n        \"ngInject\";\n        \n        // Init parameters\n        \n        $scope.$watch('error', (error: string) => {\n            this.error = error;\n        })\n    }\n}\n\nconst fileFailComponent: ng.IComponentOptions = {\n    controller: FileFailController,\n    bindings: FileFailBindings,\n    templateUrl: 'fail/FileFail.html'\n};\n\nangular\n    .module('pipFiles.FailUpload', [])\n    .component('pipFailUpload', fileFailComponent)\n","ï»¿\nimport './service/FileUploadService';\nimport './model/FileModel';\nimport './success/FileSuccess';\nimport './upload/FileUpload';\nimport './start/FileStart';\nimport './fail/FileFail';\nimport './select/FileSelect';\n\nangular\n    .module('pipFiles', [\n        'pipFiles.Service',\n        'pipFiles.Model',\n        'pipFiles.SuccessUpload',\n        'pipFiles.FileUpload',\n        'pipFiles.StartUpload',\n        'pipFiles.FailUpload',\n        'pipFiles.Select'\n    ]);\n","{\n    function fileModelLink(scope, element, attrs, $parse) {\n        let model = $parse(attrs.fileModel);\n        let modelSetter = model.assign;\n                \n        element.bind('change', () => {\n            scope.$apply(() => {\n                modelSetter(scope, element[0].files[0]);\n            });\n        });\n    }\n\n    function fileModelDirective($parse: ng.IParseProvider) {\n        \"ngInject\";\n\n        return {\n            restrict: 'A',\n            link: (scope: ng.IScope, element, attrs: ng.IAttributes) => { \n                fileModelLink(scope, element, attrs, $parse) \n            }\n        };\n    }\n\n    angular\n        .module('pipFiles.Model', [])\n        .directive('fileModel', fileModelDirective)\n}","{\n\n    interface IFileSelectController {\n        localFile: any;\n        onUploadButtonClick(): void;\n        onDeleteButtonClick(): void;\n    }\n\n    interface IFileSelectBindings {\n        [key: string]: any;\n\n        localFile: any,\n        change: any\n    }\n\n    const FileSelectBindings: IFileSelectBindings = {\n        localFile: '<pipLocalFile',\n        change: '<pipChange'\n    }\n\n    class FileSelectController implements IFileSelectController {\n        public localFile: any;\n        public change: Function;\n\n        constructor($scope: ng.IScope) {\n            \"ngInject\";\n            $scope.$watch('$ctrl.localFile', (item) => {\n                if (this.change) {\n                    this.change(this.localFile);\n                }\n            })\n        }\n\n        public onUploadButtonClick(): void {\n            $('#inp_file').click();\n        }\n\n        public onDeleteButtonClick(): void {\n            this.localFile = null;\n            let forml = document.getElementById('inp_form');\n            (<any>forml).reset();\n\n        }\n    }\n\n    const fileSelectDirective = {\n        restrict: 'E',\n        replace: true,\n        bindings: FileSelectBindings,\n        controller: FileSelectController,\n        templateUrl: 'select/FileSelect.html'\n    }\n\n    angular\n        .module('pipFiles.Select', [])\n        .component('pipFileSelect', fileSelectDirective)\n\n}\n","import { FileUploadState } from './FileUploadState';\nimport { IFileUploadService } from './IFileUploadService';\n\nclass FileUploadService implements IFileUploadService {\n\n    public constructor(private $http: ng.IHttpService) {\n        \"ngInject\";\n    }\n\n    public upload(file: any, url: string,\n        resultCallback?: (data: any, err: any) => void,\n        progressCallback?: (state: FileUploadState, progress: number) => void\n    ): void {\n\n        let fd: FormData = new FormData();\n        fd.append('file', file);\n\n        if (progressCallback)\n            progressCallback(FileUploadState.Uploading, 0);\n\n        this.$http.post(url, fd, <any>{\n            uploadEventHandlers: {\n                progress: (e: any) => {\n                    if (e.lengthComputable && progressCallback) {\n                        progressCallback(FileUploadState.Uploading, (e.loaded / e.total) * 100);\n                    }\n                }\n            },\n            headers: { 'Content-Type': undefined }\n        })\n        .success((response: any) => {\n            if (progressCallback)\n                progressCallback(FileUploadState.Completed, 100);\n\n            if (resultCallback)\n                resultCallback(response, null);\n        })\n        .error((response: any) => {\n            if (progressCallback)\n                progressCallback(FileUploadState.Failed, 0);\n\n            if (resultCallback)\n                resultCallback(null, response.Error || response);\n        });\n    }\n}\n\nangular\n    .module('pipFiles.Service', [])\n    .service('pipFileUpload', FileUploadService);\n","export enum FileUploadState {\n    Uploading,\n    Completed,\n    Failed\n}","import { ButtonsUpload } from \"../common/ButtonsUpload\";\n\ninterface IFileStartBindings {\n    [key: string]: any;\n\n    type: any\n    buttons: any,\n    name: any,\n    progress: any\n}\n\nconst FileStartBindings: IFileStartBindings = {\n    buttons: '<?pipButtons',\n    name: '<pipName',\n    type: '<?pipType',\n    progress: '<?pipProgress'\n};\n\n\nclass FileStartChanges implements ng.IOnChangesObject, IFileStartBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttons: ng.IChangesObject<ButtonsUpload[]>;\n    name: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n    progress: ng.IChangesObject<number>;\n}\n\n\ninterface IFileStartController {\n    name: string;\n    type: string;\n    progress: number;\n    buttons: ButtonsUpload[];\n}\n\nclass FileStartController implements IFileStartController {\n    public name: string;\n    public progress: number = 0;\n    public type: string;\n    public buttons: ButtonsUpload[];\n\n    constructor() { }\n\n    public $onChanges(changes: FileStartChanges) {\n        if (changes.progress) {\n            this.progress = changes.progress.currentValue;\n        }\n\n    }\n\n}\n\nconst fileStartDirective = {\n    controller: FileStartController,\n    bindings: FileStartBindings,\n    templateUrl: 'start/FileStart.html'\n};\n\nangular\n    .module('pipFiles.StartUpload', [])\n    .component('pipStartUpload', fileStartDirective)\n","import { ButtonsUpload } from \"../common/ButtonsUpload\";\n\ninterface IFileSuccessBindings {\n    [key: string]: any;\n\n    type: any\n    buttons: any,\n    name: any\n}\n\nconst FileSuccessBindings: IFileSuccessBindings = {\n    buttons: '=?pipButtons',\n    name: '=pipName',\n    type: '=?pipType',\n}\n\ninterface IFileSuccessController {\n    name: string;\n    type: string;\n    buttons: ButtonsUpload[];\n}\n\nclass FileSuccessController implements IFileSuccessController, IFileSuccessBindings {\n    public name: string;\n    public type: string = 'file';\n    public buttons: ButtonsUpload[];\n\n    constructor() {}\n\n    public $onChanges(changes) {}\n}\n\nconst fileSuccessDirective = {\n    restrict: 'E',\n    replace: true,\n    controller: FileSuccessController,\n    controllerAs: 'vm',\n    bindings: FileSuccessBindings,\n    templateUrl: 'success/FileSuccess.html'\n}\n\n\nangular\n    .module('pipFiles.SuccessUpload', [])\n    .component('pipSuccesUpload', fileSuccessDirective)\n","import { IFileUploadService } from \"../service/IFileUploadService\";\nimport { ButtonsUpload } from \"../common/ButtonsUpload\";\n\nclass FileUploadButtons {\n    retry: Function;\n    cancel: Function;\n    abort: Function;\n}\n\ninterface IFileUploadController {\n    name: string;\n    type: string;\n    state: string;\n    progress: number;\n    onCancel(): void;\n    onRetry(): void;\n    onAbort(): void;\n}\n\ninterface IFileUploadBindings {\n    [key: string]: any;\n\n    buttonFunction: any,\n    buttons: any,\n    error: any,\n    name: any,\n    state: any,\n    type: any,\n    progress: any\n}\n\nconst FileUploadBindings: IFileUploadBindings = {\n    buttonFunction: '<?pipButtonFunctions',\n    buttons: '<?pipButtons',\n    error: '<?pipError',\n    name: '<pipName',\n    state: '<pipState',\n    type: '<?pipType',\n    progress: '<pipProgress'\n}\n\nclass FileUploadChanges implements ng.IOnChangesObject, IFileUploadBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    buttonFunction: ng.IChangesObject<FileUploadButtons>;\n    buttons: ng.IChangesObject<boolean>;\n    error: ng.IChangesObject<string>;\n    name: ng.IChangesObject<string>;\n    state: ng.IChangesObject<string>;\n    type: ng.IChangesObject<string>;\n    progress: ng.IChangesObject<number>;\n}\n\n\nclass FileUploadController implements IFileUploadController, IFileUploadBindings {\n    public buttonFunction: FileUploadButtons;\n    public uploadButtons: ButtonsUpload[];\n    public failButtons: ButtonsUpload[];\n    public startButtons: ButtonsUpload[];\n\n    public name: string;\n    public type: string;\n    public state: string;\n    public progress: number;\n    public buttons: boolean;\n    public error: string = null;\n\n    constructor($scope: ng.IScope) { }\n\n    public $onInit() {\n        if (this.buttons) {\n            this.uploadButtons = [];\n            this.failButtons = [\n                { title: 'Cancel', click: () => { this.onCancel() } },\n                { title: 'Retry', click: () => { this.onRetry() } }\n            ];\n            this.startButtons = [\n                { title: 'Abort', click: () => { this.onAbort() } }\n            ];\n        }\n    }\n\n    public $onChanges(changes: FileUploadChanges) {\n        if (changes.state) {\n            this.state = changes.state.currentValue;\n        }\n\n        if (changes.progress) {\n            this.progress = changes.progress.currentValue;\n        }\n\n        if (changes.error) {\n            this.error = changes.error.currentValue;\n        }\n\n    }\n\n    public onCancel(): void {\n        if (this.buttonFunction.cancel) this.buttonFunction.cancel();\n    }\n\n    public onRetry(): void {\n        if (this.buttonFunction.retry) this.buttonFunction.retry();\n    }\n\n    public onAbort() {\n        if (this.buttonFunction.abort) this.buttonFunction.abort();\n    }\n\n}\n\nconst fileUploadDirective = {\n    controller: FileUploadController,\n    bindings: FileUploadBindings,\n    templateUrl: 'upload/FileUpload.html'\n};\n\n\nangular\n    .module('pipFiles.FileUpload', [])\n    .component('pipFileUpload', fileUploadDirective)\n","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{$ctrl.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div class=\"color-error pip-error\">{{$ctrl.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons && $ctrl.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in $ctrl.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"$ctrl.localFile\" id=\"inp_file\" ng-model=\"$ctrl.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"$ctrl.onUploadButtonClick()\" ng-if=\"!$ctrl.localFile\">Choose File</md-button><div ng-if=\"$ctrl.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{$ctrl.localFile.name}}</div><div ng-if=\"$ctrl.localFile.size\" class=\"color-secondary-text\">{{$ctrl.localFile.size}}</div></div><md-button ng-click=\"$ctrl.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::$ctrl.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{$ctrl.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{$ctrl.progress}}\" ng-if=\"$ctrl.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"$ctrl.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"$ctrl.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in $ctrl.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"$ctrl.state == 1 && (!$ctrl.buttons || $ctrl.uploadButtons)\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-buttons=\"$ctrl.buttons\"></pip-succes-upload><pip-fail-upload ng-if=\"$ctrl.state == 2\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-error=\"$ctrl.error\" pip-buttons=\"$ctrl.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"$ctrl.state == 0\" pip-name=\"$ctrl.name\" pip-type=\"$ctrl.type\" pip-progress=\"$ctrl.progress\" pip-buttons=\"$ctrl.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"]}