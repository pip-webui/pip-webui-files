{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/ButtonsUpload.ts","src/dependencies/translate.ts","src/fail/FileFailController.ts","src/files.ts","src/select/FileSelectController.ts","src/service/FileUploadService.ts","src/start/FileStartController.ts","src/success/FileSuccessController.ts","src/upload/FileUploadController.ts","temp/pip-webui-files-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","files","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ButtonsUpload","thisModule","angular","filter","$injector","pipTranslate","has","get","key","translate","FileFailController","$scope","_this","type","name","buttons","error","$watch","$inject","Object","defineProperty","value","FileSelectController_1","FileUploadController_1","FileSuccessController_1","FileFailController_1","FileUploadService_1","FileStartController_1","fileModelDirective","$parse","scope","element","attrs","model","fileModel","modelSetter","assign","bind","$apply","fileSelectDirective","restrict","localFile","controller","FileSelectController","controllerAs","templateUrl","fileUploadDirective","replace","FileUploadController","buttonFunction","state","progress","fileSuccessDirective","FileSuccessController","fileFailDirective","fileStartDirective","FileStartController","directive","item","prototype","onUploadButtonClick","$","click","onDeleteButtonClick","forml","document","getElementById","reset","6","FileUploadState","All","Start","Upload","Fail","FileUploadService","$http","_http","upload","url","file","callback","fd","FormData","lengthComputable","loaded","total","headers","Content-Type","undefined","success","response","7","9","FileUploadButtons","_functions","uploadButtons","failButtons","title","onCancel","onRetry","startButtons","onAbort","cancel","retry","abort","10","run","$templateCache","put"],"mappings":"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","file":"pip-webui-files.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ButtonsUpload {\r\n    public title: string;\r\n    public click: Function;\r\n}","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipFiles.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileFailController {\r\n    name: string;\r\n    type: string;\r\n    error: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileFailController implements IFileFailController {\r\n    public name: string;\r\n    public type: string;\r\n    public error: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.error = $scope['error'] || null;\r\n        \r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n      \r\n    }\r\n}","ï»¿\r\nimport {FileSelectController} from './select/FileSelectController';\r\nimport {FileUploadController} from './upload/FileUploadController';\r\nimport {FileSuccessController} from './success/FileSuccessController';\r\nimport {FileFailController} from './fail/FileFailController';\r\nimport {FileUploadService} from './service/FileUploadService';\r\nimport {FileStartController} from './start/FileStartController';\r\n\r\n(() => {\r\n    function fileModelDirective($parse: any) {\r\n        \"ngInject\";\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: (scope, element, attrs) => {\r\n                let model = $parse(attrs.fileModel);\r\n                let modelSetter = model.assign;\r\n                \r\n                element.bind('change', () => {\r\n                    scope.$apply(() => {\r\n                        modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function fileSelectDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                localFile: '='\r\n            },\r\n            controller: FileSelectController,\r\n            controllerAs: 'vm',\r\n            templateUrl: 'select/FileSelect.html'\r\n        };\r\n    }\r\n\r\n     function fileUploadDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileUploadController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttonFunction: '=?pipButtonFunctions',\r\n                buttons: '=?pipButtons',\r\n                error: '=?pipError',\r\n                name: '=pipName',\r\n                state: '=pipState',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'upload/FileUpload.html'\r\n        };\r\n    }\r\n\r\n     function fileSuccessDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileSuccessController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n            },\r\n            templateUrl: 'success/FileSuccess.html'\r\n        };\r\n    }\r\n\r\n     function fileFailDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileFailController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                error: '=pipError'\r\n            },\r\n            templateUrl: 'fail/FileFail.html'\r\n        };\r\n    }\r\n\r\n    function fileStartDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            controller: FileStartController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                buttons: '=?pipButtons',\r\n                name: '=pipName',\r\n                type: '=?pipType',\r\n                progress: '=pipProgress'\r\n            },\r\n            templateUrl: 'start/FileStart.html'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipFiles', [])\r\n        .directive('fileModel', fileModelDirective)\r\n        .directive('pipFileSelect', fileSelectDirective)\r\n        .directive('pipFileUpload', fileUploadDirective)\r\n        .directive('pipSuccesUpload', fileSuccessDirective)\r\n        .directive('pipFailUpload', fileFailDirective)\r\n        .directive('pipStartUpload', fileStartDirective)\r\n        .service('pipFileUpload', FileUploadService);\r\n\r\n\r\n})();\r\n","export interface IFileSelectController {\r\n    localFile: any;\r\n    onUploadButtonClick(): void ;\r\n    onDeleteButtonClick(): void;\r\n}\r\n\r\nexport class FileSelectController implements IFileSelectController {\r\n    public localFile: any;\r\n    \r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        this.localFile = $scope['localFile'];\r\n        $scope.$watch('vm.localFile', (item) => {\r\n            $scope['localFile'] = item;\r\n        }) \r\n    }\r\n\r\n    public onUploadButtonClick(): void {\r\n        $('#inp_file').click();\r\n    }\r\n\r\n    public onDeleteButtonClick(): void {\r\n        this.localFile = null;\r\n        let forml = document.getElementById('inp_form');\r\n        (<any>forml).reset();\r\n\r\n    }\r\n}","export class FileUploadState {\r\n    public static All: string[] = ['start', 'upload', 'fail'];\r\n    public static Start: string = 'start';\r\n    public static Upload: string = 'upload';\r\n    public static Fail: string = 'fail';\r\n}\r\n\r\nexport interface IFileUploadService {\r\n    progress: number;\r\n    state: string;\r\n    error: string;\r\n    upload(url: string, file: any, transaction: any, callback?: (data: any, err: any) => void): void;\r\n}\r\n\r\nexport class FileUploadService implements IFileUploadService {\r\n    private _http: ng.IHttpService;\r\n\r\n    public progress: number;\r\n    public state: string;\r\n    public error: string = null;\r\n\r\n    public constructor(\r\n        $http: ng.IHttpService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._http = $http;\r\n    }\r\n\r\n    public upload(url: string, file: any, callback?: (data: any, err: any) => void): void {\r\n        //console.log(file); \r\n\r\n        let fd = new FormData();\r\n        fd.append('file', file);\r\n        \r\n        this.progress = 0;\r\n        this.state = FileUploadState.Start;\r\n        this._http.post(url, fd, <any>{\r\n            uploadEventHandlers: {\r\n                progress: (e: any) => {\r\n                    if (e.lengthComputable) {\r\n                        this.progress = (e.loaded / e.total) * 100;\r\n                    }\r\n                }\r\n            },\r\n            headers: { 'Content-Type': undefined }\r\n        })    \r\n        .success((response: any) => {\r\n            this.state = FileUploadState.Upload;\r\n\r\n            if (callback) callback(response, null);\r\n        })    \r\n        .error((response: any) => {\r\n            this.state = FileUploadState.Fail;\r\n            this.error = response.Error || response;\r\n\r\n            if (callback) callback(null, response);\r\n        });\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileStartController {\r\n    name: string;\r\n    type: string;\r\n    progress: number;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileStartController implements IFileStartController {\r\n    public name: string;\r\n    public progress: number;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n        this.progress = $scope['progress'] || null;\r\n      \r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n}","\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileSuccessController {\r\n    name: string;\r\n    type: string;\r\n    buttons: ButtonsUpload[];\r\n}\r\n\r\nexport class FileSuccessController implements IFileSuccessController {\r\n    public name: string;\r\n    public type: string;\r\n    public buttons: ButtonsUpload[];\r\n\r\n    constructor($scope: ng.IScope) {\r\n        \"ngInject\";\r\n        \r\n        // Init parameters\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.buttons = $scope['buttons'] || null;\r\n      \r\n    }\r\n}","\r\nimport {\r\n    IFileUploadService\r\n} from \"../service/FileUploadService\";\r\n\r\nimport {\r\n    ButtonsUpload\r\n} from \"../common/ButtonsUpload\";\r\n\r\nexport interface IFileUploadController {\r\n    name: string;\r\n    type: string;\r\n    state: string;\r\n    progress: number;\r\n    onCancel(): void;\r\n    onRetry(): void;\r\n    onAbort(): void;\r\n}\r\n\r\nexport class FileUploadButtons {\r\n    retry: Function;\r\n    cancel: Function;\r\n    abort: Function;\r\n}\r\n\r\nexport class FileUploadController implements IFileUploadController {\r\n    //private _buttonFunction: FileUploadButtons;\r\n    private _functions: FileUploadButtons;\r\n    public uploadButtons: ButtonsUpload[];\r\n    public failButtons: ButtonsUpload[];\r\n    public startButtons: ButtonsUpload[];\r\n\r\n    public name: string;\r\n    public type: string;\r\n    public state: string;\r\n    public progress: number;\r\n    public buttons: boolean;\r\n    public error: string = null;\r\n\r\n    constructor(\r\n        $scope: ng.IScope\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._functions = $scope['buttonFunction'];\r\n        \r\n        // Init parameters\r\n        if (this._functions) {\r\n            this.uploadButtons = [];\r\n            this.failButtons = [\r\n                {title: 'Cancel', click: () => { this.onCancel()}},\r\n                {title: 'Retry', click: () => { this.onRetry()}}\r\n            ];\r\n            this.startButtons = [\r\n                {title: 'Abort', click: () => { this.onAbort() }}\r\n            ];\r\n        }\r\n        this.buttons = $scope['buttons'] || false;\r\n        this.type = $scope['type'] || 'file';\r\n        this.name = $scope['name'];\r\n        this.state = $scope['state'];\r\n        this.error = $scope['error'];\r\n        this.progress = $scope['progress'];\r\n\r\n        $scope.$watch('state', (state: string) => {\r\n            this.state = state;\r\n        })\r\n\r\n        $scope.$watch('error', (error: string) => {\r\n            this.error = error;\r\n        })\r\n\r\n        $scope.$watch('progress', (progress: number) => {\r\n            this.progress = progress;\r\n        })\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this._functions.cancel) this._functions.cancel();\r\n    }\r\n\r\n    public onRetry(): void {\r\n        if (this._functions.retry) this._functions.retry();\r\n    }\r\n\r\n    public onAbort() {\r\n        if (this._functions.abort) this._functions.abort();\r\n    }\r\n\r\n}","(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('fail/FileFail.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon color-badge-bg\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{vm.type}} failed with errors!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div class=\"color-error pip-error\">{{vm.error}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"fail in vm.buttons\" ng-click=\"fail.click()\">{{::fail.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('select/FileSelect.html',\n    '<div class=\"pip-file-select\"><form id=\"inp_form\" class=\"pip-hidden-form\"><input type=\"file\" file-model=\"vm.localFile\" id=\"inp_file\" ng-model=\"vm.localFile\"></form><md-button class=\"md-raised md-accent pip-button\" ng-click=\"vm.onUploadButtonClick()\" ng-if=\"!vm.localFile\">Choose File</md-button><div ng-if=\"vm.localFile.name\" class=\"pip-file layout-row layout-align-start-center\"><md-icon md-svg-icon=\"icons:document\" class=\"pip-icon\"></md-icon><div class=\"flex\"><div class=\"text-body2 text-overflow\">{{vm.localFile.name}}</div><div ng-if=\"vm.localFile.size\" class=\"color-secondary-text\">{{vm.localFile.size}}</div></div><md-button ng-click=\"vm.onDeleteButtonClick()\" class=\"md-icon-button\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('start/FileStart.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-orange\"><md-icon md-svg-icon=\"icons:play\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploading {{::vm.type}}</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div><div><md-progress-linear md-mode=\"determinate\" class=\"md-accent\" value=\"{{vm.progress}}\" ng-if=\"vm.progress < 100\"></md-progress-linear><md-progress-linear md-mode=\"indeterminate\" class=\"md-accent\" ng-if=\"vm.progress == 100\"></md-progress-linear></div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('success/FileSuccess.html',\n    '<div class=\"pip-files pip-progress-files\"><div class=\"pip-body pip-scroll pip-progress-body\"><div class=\"layout-row\"><div class=\"pip-progress-icon bb-green\"><md-icon md-svg-icon=\"icons:check\"></md-icon></div><div class=\"pip-progress-content\"><h3 class=\"pip-title\">Uploaded {{::vm.type}} successfully!</h3><div class=\"color-secondary-text pip-subtitle\">{{vm.name}}</div></div></div></div><div class=\"pip-footer layout-row layout-align-end-center\" ng-if=\"vm.buttons && vm.buttons.length > 0\"><div><md-button class=\"md-accent\" ng-repeat=\"start in vm.buttons\" ng-click=\"start.click()\">{{start.title}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipFiles.Templates');\n} catch (e) {\n  module = angular.module('pipFiles.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('upload/FileUpload.html',\n    '<div><pip-succes-upload ng-if=\"vm.state == \\'upload\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-buttons=\"vm.buttons\"></pip-succes-upload><pip-fail-upload ng-if=\"vm.state == \\'fail\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-error=\"vm.error\" pip-buttons=\"vm.failButtons\"></pip-fail-upload><pip-start-upload ng-if=\"vm.state == \\'start\\'\" pip-name=\"vm.name\" pip-type=\"vm.type\" pip-progress=\"vm.progress\" pip-buttons=\"vm.startButtons\"></pip-start-upload></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-files-html.min.js.map\n"]}