{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/index.ts","src/routing/BackDecorator.ts","src/routing/RedirectDecorator.ts","src/routing/RoutingEvents.ts","src/routing/index.ts","src/session/IdentityService.ts","src/session/SessionService.ts","src/session/index.ts","src/transactions/Transaction.ts","src/transactions/TransactionError.ts","src/transactions/TransactionService.ts","src/transactions/TransactionStrings.ts","src/transactions/index.ts","src/translate/TranslateDirective.ts","src/translate/TranslateFilter.ts","src/translate/TranslateService.ts","src/translate/Translation.ts","src/translate/index.ts","src/utilities/Codes.ts","src/utilities/Format.ts","src/utilities/PageResetService.ts","src/utilities/ScrollService.ts","src/utilities/SystemInfo.ts","src/utilities/Tags.ts","src/utilities/TimerService.ts","src/utilities/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","services","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","__export","captureStateTranslations","$rootScope","$on","event","toState","toParams","fromState","fromParams","CurrentState","name","url","params","PreviousState","decorateBackStateService","$delegate","$window","goBack","history","back","goBackAndSelect","state","_","cloneDeep","extend","go","addBackStateDecorator","$provide","decorator","$inject","defineProperty","value","run","3","decorateRedirectStateProvider","redirect","RedirectedStates","addRedirectStateProviderDecorator","$timeout","isNull","preventDefault","transitionTo","location","addRedirectStateDecorator","config","hookRoutingEvents","$log","$state","RoutingVar","error","5","m","p","hasOwnProperty","./RedirectDecorator","./RoutingEvents","6","IdentityRootVar","IdentityChangedEvent","IdentityService","setRootVar","identity","_setRootVar","_identity","_rootScope","_log","prototype","$emit","debug","JSON","stringify","enumerable","configurable","IdentityProvider","_service","get","set","$get","provider","SessionRootVar","SessionOpenedEvent","SessionClosedEvent","SessionService","session","_session","isOpened","open","fullReset","partialReset","close","oldSession","SessionProvider","8","./SessionService","9","Transaction","scope","_scope","_id","_operation","_progress","_error","message","reset","busy","failed","empty","aborted","id","begin","operation","Date","getTime","toString","update","progress","Math","max","abort","10","TransactionError","decode","details","cause","stack_trace","data","statusText","status","11","TransactionService","_transactions","create","transaction","Transaction_1","12","$injector","pipTranslate","has","setTranslations","ENTERING","PROCESSING","LOADING","SAVING","configureTransactionStrings","13","./TransactionError","./TransactionService","./TransactionStrings","14","restrict","key1","key2","link","element","attrs","key","translate","text","directive","translateDirective","translateHtmlDirective","15","translateFilter","16","initTranslate","language","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","__","constructor","LanguageRootVar","LanguageChangedEvent","TranslateService","translation","persist","$mdDateLocale","_persist","_translation","_window","_mdDateLocale","localStorage","getItem","save","changeLocale","locale","localeDate","moment","localeData","months","isArray","_months","format","shortMonths","_monthsShort","days","_weekdays","shortDays","_weekdaysMin","firstDayOfWeek","_week","dow","setItem","PageResetService_1","ResetPageEvent","use","translations","translateArray","keys","translateSet","keyProp","valueProp","translateObjects","items","translateWithPrefix","prefix","translateSetWithPrefix","translateSetWithPrefix2","_super","_this","TranslateProvider","Translation","./Translation","17","en","ru","es","pt","de","fr","_language","map","_translations","isUndefined","values","k","push","each","item","replace","toUpperCase","./TranslateFilter","./TranslateService","19","Codes","hash","result","verification","random","substr","Format","cache","sample","maxLength","indexOf","substring","strRepeat","str","qty","getType","variable","slice","toLowerCase","fmt","match","parse_tree","arg_names","exec","_fmt","field_list","replacement_field","field_match","argv","tree_length","node_type","output","arg","cursor","sprintf","test","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","abs","pad_character","charAt","pad_length","pad","join","parseFormat","args","21","pipPageReset","ResetAreaEvent","area","resetArea","ResetRootVar","ResetAreaRootVar","PageResetService","_timeout","performReset","scrollTo","parentElement","childElement","animationDuration","undefined","setTimeout","$","position","scrollTop","top","animate","ScrollService","SystemInfo","ua","navigator","userAgent","search","version","browserName","browser","split","osAll","osAndroid","err","isDesktop","platform","isMobile","isCordova","isSupported","supported","edge","opera","browserVersion","service","Tags","normalizeOne","tag","trim","compressOne","equal","tag1","tag2","normalizeAll","tags","isString","compressAll","entity","field","hashTags","concat","uniq","TimerEvent","timeout","DefaultEvents","TimerService","$interval","_started","_events","_interval","isStarted","addEvent","existingEvent","find","newEvent","startEvent","removeEvent","stopEvent","splice","clearEvents","stop","interval","cancel","ex","start"],"mappings":"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","file":"pip-webui-services.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿import './translate';\nimport './session';\nimport './transactions';\nimport './routing';\nimport './utilities';\n\nangular.module('pipServices', [\n    'pipTranslate',\n    'pipSession',\n    'pipTransaction',\n    'pipRouting',\n    'pipFormat',\n    'pipTimer',\n    'pipScroll',\n    'pipTags',\n    'pipCodes',\n    'pipSystemInfo',\n    'pipPageReset'\n]);\n\nexport * from './translate';\nexport * from './session';\nexport * from './transactions';\nexport * from './routing';\nexport * from './utilities';\n","export let CurrentState: any;\nexport let PreviousState: any;\n\nfunction captureStateTranslations($rootScope: ng.IRootScopeService) {\n    \"ngInject\";\n\n    $rootScope.$on('$stateChangeSuccess',\n        (event, toState, toParams, fromState, fromParams) => {\n            CurrentState = {\n                name: toState.name, \n                url: toState.url, \n                params: toParams\n            };\n\n            PreviousState = {\n                name: fromState.name, \n                url: fromState.url, \n                params: fromParams\n            };\n        }\n    );\n\n}\n\nfunction decorateBackStateService($delegate: any, $window: ng.IWindowService): any {\n    \"ngInject\";\n\n    $delegate.goBack = goBack;\n    $delegate.goBackAndSelect = goBackAndSelect;\n\n    return $delegate;\n    //////////////////////////////////////////////////\n\n    function goBack(): void {\n        $window.history.back()\n    }\n\n    function goBackAndSelect(params: any): void {\n        // todo: define end fix PreviousState\n        if (PreviousState != null \n            && PreviousState.name != null) {\n\n            let state = _.cloneDeep(PreviousState);\n\n            // Override selected parameters\n            state.params = _.extend(state.params, params);\n\n            $delegate.go(state.name, state.params);\n        } else {\n            $window.history.back();\n        }\n    }\n}\n\nfunction addBackStateDecorator($provide) {\n    $provide.decorator('$state', decorateBackStateService);\n}\n\nangular\n    .module('pipRouting')\n    .config(addBackStateDecorator)\n    .run(captureStateTranslations);\n    ","let RedirectedStates: any = {};\n\nfunction decorateRedirectStateProvider($delegate) {\n    \"ngInject\";\n\n    $delegate.redirect = redirect;\n\n    return $delegate;\n    /////////////////////////////////////////////\n\n    // Specify automatic redirect from one state to another\n    function redirect(fromState, toState) {\n        RedirectedStates[fromState] = toState;  \n        return this;\n    }\n}\n\nfunction addRedirectStateProviderDecorator($provide) {\n    \"ngInject\";\n\n    $provide.decorator('$state', decorateRedirectStateProvider);\n}\n\nfunction decorateRedirectStateService($delegate, $timeout) {\n    \"ngInject\";\n\n    $delegate.redirect = redirect;\n    \n    return $delegate;\n    ////////////////////////////////\n    \n    // Todo: Move this code directly to event handler?\n    // Todo: Nothing calls this code!!\n    function redirect(event, state, params) {\n        let toState = RedirectedStates[state.name];\n        if (_.isFunction(toState)) {\n            toState = toState(state.name, params);\n\n            if (_.isNull(toState))\n                throw new Error('Redirected toState cannot be null');\n        }\n\n        if (!!toState) {\n            $timeout(() => {\n                event.preventDefault();\n                $delegate.transitionTo(toState, params, {location: 'replace'});\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\nfunction addRedirectStateDecorator($provide) {\n    \"ngInject\";\n\n    $provide.decorator('$state', decorateRedirectStateService);\n}\n\nangular\n    .module('pipRouting')\n    .config(addRedirectStateProviderDecorator)\n    .config(addRedirectStateDecorator);\n    ","export let RoutingVar: string = \"$routing\";\n\nfunction hookRoutingEvents(\n    $rootScope: ng.IRootScopeService,\n    $log: ng.ILogService,\n    $state: ng.ui.IStateService\n) {\n    \"ngInject\";\n\n    $rootScope.$on('$stateChangeStart',\n        (event, toState, toParams, fromState, fromParams) => {\n            $rootScope[RoutingVar] = true;\n        }\n    );\n\n    $rootScope.$on('$stateChangeSuccess',\n        (event, toState, toParams, fromState, fromParams) => {\n            // Unset routing variable to disable page transition\n            $rootScope[RoutingVar] = false;                \n        }\n    );\n\n    // Intercept route error\n    $rootScope.$on('$stateChangeError',\n        (event, toState, toParams, fromState, fromParams, error) => {\n            // Unset routing variable to disable page transition\n            $rootScope[RoutingVar] = false;\n\n            $log.error('Error while switching route to ' + toState.name);\n            $log.error(error);\n        }\n    );\n\n}\n\nangular\n    .module('pipRouting')\n    .run(hookRoutingEvents);\n    ","angular.module('pipRouting', ['ui.router']);\n\nimport './BackDecorator';\nimport './RedirectDecorator';\nimport './RoutingEvents';\n\nexport * from './BackDecorator';\nexport * from './RoutingEvents';\n","export let IdentityRootVar = \"$identity\";\nexport let IdentityChangedEvent = \"pipIdentityChanged\";\n\nexport interface IIdentity {\n    id: string;\n    full_name: string;\n    details: string;\n    email: string;\n    photo_url: string;\n    groups: string[];\n}\n\nexport interface IIdentityService {\n    identity: any;\n}\n\nexport interface IIdentityProvider extends ng.IServiceProvider {\n    setRootVar: boolean;\n    identity: any;\n}\n\n\nclass IdentityService implements IIdentityService {\n    private _identity: any;\n    private _setRootVar: boolean;\n    private _rootScope: ng.IRootScopeService;\n    private _log: ng.ILogService;\n\n    public constructor(\n        setRootVar: boolean,\n        identity: any,\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService\n    ) {\n        this._setRootVar = setRootVar;\n        this._identity = identity;\n        this._rootScope = $rootScope;\n        this._log = $log;\n\n        this.setRootVar();\n    }\n\n    private setRootVar(): void {\n        if (this._setRootVar)\n            this._rootScope[IdentityRootVar] = this._identity;\n    }\n\n    public get identity(): any {\n        return this._identity;\n    }\n\n    public set identity(value: any) {\n        this._identity = value;\n        this.setRootVar();\n        this._rootScope.$emit(IdentityChangedEvent, this._identity);\n\n        let identity: any = value || {};\n        this._log.debug(\"Changed identity to \" + JSON.stringify(identity));\n    }\n}\n\nclass IdentityProvider implements IdentityProvider {\n    private _setRootVar = true;\n    private _identity: any = null;\n    private _service: IdentityService = null;\n\n    public constructor() { }\n\n    public get setRootVar(): boolean {\n        return this._setRootVar;  \n    }\n\n    public set setRootVar(value: boolean) {\n        this._setRootVar = !!value;\n    }\n\n    public get identity(): any {\n        return this._identity;  \n    }\n\n    public set identity(value: any) {\n        this._identity = value;\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService\n    ): any {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new IdentityService(this._setRootVar, this._identity, $rootScope, $log);\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipSession')\n    .provider('pipIdentity', IdentityProvider);\n","export const SessionRootVar = \"$session\";\nexport const SessionOpenedEvent = \"pipSessionOpened\";\nexport const SessionClosedEvent = \"pipSessionClosed\";\n\nexport interface ISessionService {\n    session: any;\n    isOpened(): boolean;\n\n    open(session: any): void;\n    close(): void;\n}\n\nexport interface ISessionProvider extends ng.IServiceProvider {\n    setRootVar: boolean;\n    session: any;\n}\n\nclass SessionService implements ISessionService {\n    private _setRootVar: boolean;\n    private _session: any;\n    private _rootScope: ng.IRootScopeService;\n    private _log: ng.ILogService;\n\n    public constructor(\n        setRootVar: boolean, \n        session: any, \n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService\n    ) {\n        this._setRootVar = setRootVar;\n        this._session = session;\n        this._rootScope = $rootScope;\n        this._log = $log;\n\n        this.setRootVar();\n    }\n    \n    private setRootVar(): void {\n        if (this._setRootVar)\n            this._rootScope[SessionRootVar] = this._session;\n    }\n\n    public get session(): any {\n        return this._session;\n    }\n\n    public isOpened(): boolean {\n        return this._session != null;\n    }\n\n    public open(session: any, fullReset: boolean = false, partialReset: boolean = false) {\n        if (session == null)\n            throw new Error(\"Session cannot be null\");\n\n        this._session = session;\n        this.setRootVar();\n        this._rootScope.$emit(SessionOpenedEvent, session);\n\n        this._log.debug(\"Opened session \" + session);\n    }\n\n    public close(fullReset: boolean = false, partialReset: boolean = false) {\n        let oldSession = this._session;\n\n        this._session = null;\n        this.setRootVar();\n        this._rootScope.$emit(SessionClosedEvent, oldSession);\n\n        this._log.debug(\"Closed session \" + oldSession);\n    }\n}\n\nclass SessionProvider implements ISessionProvider {\n    private _setRootVar = true;\n    private _session: any = null;\n    private _service: SessionService = null;\n\n    public constructor() { }\n\n    public get setRootVar(): boolean {\n        return this._setRootVar;  \n    }\n\n    public set setRootVar(value: boolean) {\n        this._setRootVar = !!value;\n    }\n\n    public get session(): any {\n        return this._session;  \n    }\n\n    public set session(value: any) {\n        this._session = value;\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService\n    ): any {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SessionService(this._setRootVar, this._session, $rootScope, $log);\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipSession')\n    .provider('pipSession', SessionProvider); \n","angular.module('pipSession', []);\n\nimport './IdentityService';\nimport './SessionService';\n\nexport * from './IdentityService';\nexport * from './SessionService';\n","import { TransactionError } from './TransactionError'\n\nexport class Transaction {\n    private _scope: string = null;\n    private _id: string = null;\n    private _operation: string = null;\n    private _error: TransactionError = new TransactionError();\n    private _progress: number = 0;\n\n    public constructor(scope: string) {\n        this._scope = scope;\n    }\n\n    public get scope(): string {\n        return this._scope;\n    }\n\n    public get id(): string {\n        return this._id;\n    }\n\n    public get operation(): string {\n        return this._operation;\n    }\n\n    public get progress(): number {\n        return this._progress;\n    }\n\n    public get error(): TransactionError {\n        return this._error;\n    }\n\n    public get errorMessage(): string {\n        return this._error.message;\n    }\n\n    public reset(): void {\n        this._id = null;\n        this._operation = null;\n        this._progress = 0;\n        this._error.reset();\n    }\n\n    public busy(): boolean {\n        return this._id != null;\n    }\n\n    public failed(): boolean {\n        return !this._error.empty();\n    }\n\n    public aborted(id: string): boolean {\n        return this._id != id;\n    }\n\n    public begin(operation: string): string {\n        // Transaction is already running\n        if (this._id != null) return null;\n\n        this._id = new Date().getTime().toString();\n        this._operation = operation || 'PROCESSING'\n        this._error.reset();\n\n        return this._id;\n    }\n\n    public update(progress: number): void {\n        this._progress = Math.max(progress, 100);\n    }\n\n    public abort(): void {\n        this._id = null;\n        this._error.reset();\n    }\n\n    public end(error?: any): void {\n        this._error.decode(error);\n        this._id = null;\n    }\n}\n","export class TransactionError {\n    public code: string;\n    public message: string;\n    public details: any;\n    public cause: string;\n    public stack_trace: string;\n\n    public constructor(error?: any) {\n        if (error != null)\n            this.decode(error);\n    }\n\n    public reset(): void {\n        this.code = null;\n        this.message = null;\n        this.details = null;\n        this.cause = null;\n        this.stack_trace = null;\n    }\n\n    public empty(): boolean {\n        return this.message = null && this.code == null;\n    }\n\n    public decode(error: any): void {\n        this.reset();\n\n        if (error == null) return;\n\n        // Process regular messages\n        if (error.message) {\n            this.message = error.message;\n        }\n\n        // Process server application errors\n        if (error.data) {\n            if (error.data.code) { \n                // process server error codes here\n                this.message = this.message || 'ERROR_' + error.data.code;\n                this.code = this.code || error.data.code;\n            }\n\n            if (error.data.message) {\n                this.message = this.message || error.data.message;\n            }\n\n            this.message = this.message || error.data;\n            this.details = this.details || error.data;\n\n            this.cause = error.data.cause;\n            this.stack_trace = error.data.stack_trace;\n            this.details = error.data.details;            \n        }\n\n        // Process standard HTTP errors\n        if (error.statusText) {\n            this.message = this.message || error.statusText;\n        }\n        if (error.status) {\n            this.message = this.message || 'ERROR_' + error.status;\n            this.code = this.code || error.status;\n        }\n        \n        this.message = this.message || error;\n        this.details = this.details || error;\n    }\n}\n","import { Transaction } from './Transaction';\n\nexport interface ITransactionService {\n    create(scope?: string): Transaction;\n    get(scope?: string): Transaction;\n}\n\nclass TransactionService implements ITransactionService {\n    private _transactions: Transaction = <Transaction>{};\n\n    public constructor() {}\n\n    public create(scope?: string): Transaction {\n        let transaction: Transaction = new Transaction(scope);\n        \n        if (scope != null)\n            this._transactions[scope] = transaction;\n\n        return transaction;\n    }\n\n    public get(scope?: string): Transaction {\n        let transaction: Transaction = scope != null ? <Transaction>this._transactions[scope] : null;\n\n        if (transaction == null) {\n            transaction = new Transaction(scope);\n            if (scope != null)\n                this._transactions[scope] = transaction;\n        }\n\n        return transaction;\n    }\n}\n\nangular\n    .module('pipTransaction')\n    .service('pipTransaction', TransactionService);\n","import { ITranslateService } from '../translate/TranslateService';\n\nfunction configureTransactionStrings($injector: ng.auto.IInjectorService) {\n    \"ngInject\";\n\n    let pipTranslate: ITranslateService = $injector.has('pipTranslateProvider') \n        ? <ITranslateService>$injector.get('pipTranslateProvider') : null;\n\n    if (pipTranslate) {\n        pipTranslate.setTranslations('en', {\n            'ENTERING': 'Entering...',\n            'PROCESSING': 'Processing...',\n            'LOADING': 'Loading...',\n            'SAVING': 'Saving...'\n        });\n\n        pipTranslate.setTranslations('ru', {\n            'ENTERING': 'Вход в систему...',\n            'PROCESSING': 'Обрабатывается...',\n            'LOADING': 'Загружается...',\n            'SAVING': 'Сохраняется...'\n        });   \n    }\n    \n}\n\nangular\n    .module('pipTransaction')\n    .config(configureTransactionStrings);\n","angular.module('pipTransaction', []);\n\nimport './TransactionStrings';\nimport './TransactionError';\nimport './Transaction';\nimport './TransactionService';\n\nexport * from './TransactionError';\nexport * from './Transaction';\nexport * from './TransactionService';\n","import { ITranslateService } from '../translate/TranslateService';\n\nfunction translateDirective(pipTranslate): ng.IDirective {\n    \"ngInject\";\n\n    return {\n        restrict: 'EA',\n        scope: {\n            key1: '@pipTranslate',\n            key2: '@key'\n        },\n        link: (scope: ng.IScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => {\n            let key: string = scope.key1 || scope.key2;\n            let value: string = pipTranslate.translate(key);\n            element.text(value);\n        }\n    };\n}\n\nfunction translateHtmlDirective(pipTranslate: ITranslateService): ng.IDirective {\n    \"ngInject\";\n\n    return {\n        restrict: 'EA',\n        scope: {\n            key1: '@pipTranslateHtml',\n            key2: '@key'\n        },\n        link: (scope: any, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => {\n            let key: string = scope.key1 || scope.key2;\n            let value: string = pipTranslate.translate(key);\n            element.html(value);\n        }\n    };\n}\n\nangular\n    .module('pipTranslate')\n    .directive('pipTranslate', translateDirective)\n    .directive('pipTranslateHtml', translateHtmlDirective);\n","import { ITranslateService } from './TranslateService';\n\nfunction translateFilter(pipTranslate: ITranslateService) {\n    \"ngInject\";\n\n    return function (key: string) {\n        return pipTranslate.translate(key) || key;\n    }\n}\n\nfunction optionalTranslateFilter($injector: ng.auto.IInjectorService) {\n    \"ngInject\";\n\n    let pipTranslate: ITranslateService = $injector.has('pipTranslate') \n        ? <ITranslateService>$injector.get('pipTranslate') : null;\n\n    return function (key: string) {\n        return pipTranslate  ? pipTranslate.translate(key) || key : key;\n    }\n}\n\nangular\n    .module('pipTranslate')\n    .filter('translate', translateFilter);\n","﻿import { Translation } from './Translation';\nimport { ResetPageEvent } from '../utilities/PageResetService';\n\nexport let LanguageRootVar = \"$language\";\nexport let LanguageChangedEvent = \"pipLanguageChanged\";    \n\nexport interface ITranslateService {\n    language: string;\n\n    use(language: string): string;\n    setTranslations(language: string, translations: any): void;\n    translations(language: string, translations: any): void;\n\n    translate(key: string): string;\n    translateArray(keys: string[]): string[];\n    translateSet(keys: string[], keyProp: string, valueProp: string): any[];\n    translateObjects(items: any[], keyProp: string, valueProp: string): any[];\n    translateWithPrefix(prefix: string, key: string);\n    translateSetWithPrefix(prefix: string, keys: string[], keyProp: string, valueProp: string);\n    translateSetWithPrefix2(prefix: string, keys: string[], keyProp: string, valueProp: string);\n}\n\nexport interface ITranslateProvider extends ITranslateService, ng.IServiceProvider {\n}\n\nclass TranslateService implements ITranslateService {\n    private _translation: Translation;\n    private _setRootVar: boolean;\n    private _persist: boolean;\n    private _rootScope: ng.IRootScopeService;\n    private _log: ng.ILogService;\n    private _window: ng.IWindowService;\n    private _mdDateLocale: angular.material.IDateLocaleProvider;\n\n    public constructor(\n        translation: Translation,\n        setRootVar: boolean,\n        persist: boolean,\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService,\n        $window: ng.IWindowService,\n        $mdDateLocale: angular.material.IDateLocaleProvider,\n    ) {\n        this._setRootVar = setRootVar;\n        this._persist = persist;\n        this._translation = translation;\n        this._rootScope = $rootScope;\n        this._log = $log;\n        this._window = $window;\n        this._mdDateLocale = $mdDateLocale;\n\n        if (this._persist && this._window.localStorage)\n            this._translation.language = this._window.localStorage.getItem('language') || this._translation.language;\n\n        this._log.debug(\"Set language to \" + this._translation.language);\n\n        this.save();\n    }\n\n    private changeLocale(locale: string) {\n        if (!locale) return;\n\n        // var localeDate: moment.MomentLanguageData;\n        var localeDate: any;\n\n        moment.locale(locale);\n        localeDate = moment.localeData();\n\n        this._mdDateLocale.months = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format;\n        this._mdDateLocale.shortMonths = angular.isArray(localeDate._monthsShort) ? localeDate._monthsShort : localeDate._monthsShort.format;\n        this._mdDateLocale.days = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format;\n        this._mdDateLocale.shortDays = localeDate._weekdaysMin;\n        this._mdDateLocale.firstDayOfWeek = localeDate._week.dow;\n    }\n\n    private save(): void {\n        if (this._setRootVar)\n            this._rootScope[LanguageRootVar] = this._translation.language;\n\n        if (this._persist && this._window.localStorage != null)\n            this._window.localStorage.setItem('language', this._translation.language);\n    }\n\n    public get language(): string {\n        return this._translation.language;\n    }\n\n    public set language(value: string) {\n        if (value != this._translation.language) {\n            this._translation.language = value;\n            \n            this._log.debug(\"Changing language to \" + value);\n\n            this.changeLocale(this._translation.language);\n            this.save();   \n\n            this._rootScope.$emit(LanguageChangedEvent, value);\n            this._rootScope.$emit(ResetPageEvent);\n        }\n    }\n\n    public use(language: string): string {\n        if (language != null)\n            this.language = language;\n        return this.language;\n    }\n\n    public setTranslations(language: string, translations: any): void {\n        return this._translation.setTranslations(language, translations);\n    }\n\n    public translations(language: string, translations: any): void {\n        return this._translation.setTranslations(language, translations);\n    }\n\n    public translate(key: string): string {\n        return this._translation.translate(key);\n    }\n\n    public translateArray(keys: string[]): string[] {\n        return this._translation.translateArray(keys);\n    }\n    \n    public translateSet(keys: string[], keyProp: string, valueProp: string): any[] {\n        return this._translation.translateSet(keys, keyProp, valueProp);\n    }\n\n    public translateObjects(items: any[], keyProp: string, valueProp: string): any[] {\n        return this._translation.translateObjects(items, keyProp, valueProp);\n    }\n\n    public translateWithPrefix(prefix: string, key: string) {\n        return this._translation.translateWithPrefix(prefix, key);\n    }\n\n    public translateSetWithPrefix(prefix: string, keys: string[], keyProp: string, valueProp: string) {\n        return this._translation.translateSetWithPrefix(prefix, keys, keyProp, valueProp);\n    }\n\n    public translateSetWithPrefix2(prefix: string, keys: string[], keyProp: string, valueProp: string) {\n        return this._translation.translateSetWithPrefix2(prefix, keys, keyProp, valueProp);\n    }\n}\n\nclass TranslateProvider extends Translation implements ITranslateProvider {\n    private _translation: Translation;\n    private _setRootVar: boolean = true;\n    private _persist: boolean = true;\n    private _service: TranslateService;\n    \n    public constructor() {\n        super();\n    }\n\n    public get setRootVar(): boolean {\n        return this._setRootVar;  \n    }\n\n    public set setRootVar(value: boolean) {\n        this._setRootVar = !!value;\n    }\n\n    public get persist(): boolean {\n        return this._persist;  \n    }\n\n    public set persist(value: boolean) {\n        this._persist = !!value;\n    }\n\n    public $get(\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService, \n        $window: ng.IWindowService,\n        $mdDateLocale: angular.material.IDateLocaleProvider\n    ): any {\n        \"ngInject\";\n\n        if (this._service == null) \n            this._service = new TranslateService(this, this._setRootVar, this._persist, $rootScope, $log, $window, $mdDateLocale);\n\n        return this._service;\n    }\n}\n\nfunction initTranslate(pipTranslate: ITranslateService) {\n    pipTranslate.language;\n}\n\nangular\n    .module('pipTranslate')\n    .provider('pipTranslate', TranslateProvider)\n    .run(initTranslate);\n","export class Translation {\n    protected _language: string = 'en';\n    protected _translations = {\n        en: {\n            'en': 'English',\n            'ru': 'Russian',\n            'es': 'Spanish',\n            'pt': 'Portuguese',\n            'de': 'German',\n            'fr': 'French'\n        },\n        ru: {\n            'en': 'Английский',\n            'ru': 'Русский',\n            'es': 'Испанский',\n            'pt': 'Португальский',\n            'de': 'Немецкий',\n            'fr': 'Французский'\n        }\n    };\n\n    public constructor() {}\n\n    public get language(): string { return this._language; }\n    public set language(value: string) { this._language = value; }\n\n    public use(language: string): string {\n        if (language != null)\n            this._language = language;\n        return this._language;\n    }\n\n    // Set translation strings for specific language\n    public setTranslations(language: string, translations: any): void {\n        let map = this._translations[language] || {};\n        this._translations[language] = _.extend(map, translations);\n    }\n\n    // Yet another method to set translation strings for specific language\n    public translations(language: string, translations: any): void {\n        this.setTranslations(language, translations);\n    }\n\n    // Translate a string by key using set language\n    public translate(key: string): string {\n        if (_.isNull(key) || _.isUndefined(key)) return '';\n\n        let translations = this._translations[this._language] || {};\n        return translations[key] || key;\n    }\n\n    // Translate an array of strings\n    public translateArray(keys: string[]): string[] {\n        if (_.isNull(keys) || keys.length == 0) return [];\n\n        let values: string[] = [];\n        let translations = this._translations[this._language] || {};\n\n        _.each(keys, function (k: string) {\n            let key = k || '';\n            values.push(translations[key] || key);\n        });\n\n        return values;\n    }\n\n    // Translate an array of strings into array of objects (set)\n    public translateSet(keys: string[], keyProp: string, valueProp: string): any[] {\n        if (_.isNull(keys) || keys.length == 0) return [];\n\n        keyProp = keyProp || 'id';\n        valueProp = valueProp || 'name';\n\n        let values: any[] = [];\n        let translations = this._translations[this._language] || {};\n\n        _.each(keys, function (key: string) {\n            let value: any = {};\n            key = key || '';\n\n            value[keyProp] = key;\n            value[valueProp] = translations[key] || key;\n\n            values.push(value);\n        });\n\n        return values;\n    }\n\n    // Translate a collection of objects\n    public translateObjects(items: any[], keyProp: string, valueProp: string): any[] {\n        if (_.isNull(items) || items.length == 0) return [];\n\n        keyProp = keyProp || 'name';\n        valueProp = valueProp || 'nameLocal';\n\n        let translations = this._translations[this._language] || {};\n\n        _.each(items, function (item: any) {\n            let key = item[keyProp] || '';\n\n            item[valueProp] = translations[key] || key;\n        });\n\n        return items;\n    }\n\n    // Translate a string by key  with prefix using set language todo\n    public translateWithPrefix(prefix: string, key: string) {\n        prefix = prefix ? prefix + '_' : '';\n        key = (prefix + key).replace(/ /g, '_').toUpperCase();\n        if (key == null) return '';\n        let translations = this._translations[this._language] || {};\n        return translations[key] || key;\n    };\n\n    public translateSetWithPrefix(prefix: string, keys: string[], keyProp: string, valueProp: string) {\n        if (_.isNull(keys) || keys.length == 0) return [];\n\n        prefix = prefix ? prefix.replace(/ /g, '_').toUpperCase() : '';\n        keyProp = keyProp || 'id';\n        valueProp = valueProp || 'name';\n\n        let values = [];\n        let translations = this._translations[this._language] || {};\n\n        _.each(keys, function (key: string) {\n            let value: any = {}; \n            key = key || '';\n\n            value[keyProp] = key;\n            value[valueProp] = translations[prefix + '_' + key] || key;\n\n            values.push(value);\n        });\n\n        return values;\n    }\n\n    // Translate an array of strings, apply uppercase and replace ' ' => '_'\n    public translateSetWithPrefix2(prefix: string, keys: string[], keyProp: string, valueProp: string) {\n        if (_.isNull(keys) || keys.length == 0) return [];\n\n        keyProp = keyProp || 'id';\n        valueProp = valueProp || 'name';\n        prefix = prefix ? prefix.replace(/ /g, '_').toUpperCase() + '_': '';\n\n        let values = [];\n        let translations = this._translations[this._language] || {};\n\n        _.each(keys, function (key: string) {\n            let value: any = {};\n            key = key || '';\n\n            value[keyProp] = key;\n            value[valueProp] = translations[prefix + key.replace(/ /g, '_').toUpperCase()]\n                || (prefix + key.replace(/ /g, '_').toUpperCase());\n\n            values.push(value);\n        });\n\n        return values;\n    }\n}\n","angular.module('pipTranslate', []);\n\nimport './Translation';\nimport './TranslateService';\nimport './TranslateFilter';\nimport './TranslateDirective';\n\nexport * from './Translation';\nexport * from './TranslateService';\n","export interface ICodes {\n    // Simple version of string hashcode\n    hash(value: string): number;\n    // Generates random big number for verification codes\n    verification(): string;\n}\n\n\nclass Codes implements ICodes {\n    // Simple version of string hashcode\n    public hash(value: string): number {\n        if (value == null) return 0;\n        \n        let result: number = 0;\n        for (let i = 0; i < value.length; i++)\n            result += value.charCodeAt(i);\n\n        return result;\n    }\n\n    // Generates random big number for verification codes\n    public verification(): string {\n        return Math.random().toString(36).substr(2, 10).toUpperCase(); // remove `0.`\n    }\n}\n\nangular\n    .module('pipCodes', [])\n    .service('pipCodes', Codes);\n","export interface IFormat {\n    // Creates a sample line from a text\n    sample(value: string, maxLength: number): string;\n\n    sprintf(message: string, ...args: any[]): string;\n}\n\n\nclass Format implements IFormat {\n    // Cached for parsed formats\n    private cache = {};\n\n    // Creates a sample line from a text\n    public sample(value: string, maxLength: number): string {\n        if (!value || value == '') {\n            return '';\n        }\n\n        var length: number = value.indexOf('\\n');\n        length = length >= 0 ? length : value.length;\n        length = length < maxLength ? value.length : maxLength;\n\n        return value.substring(0, length);\n    }\n\n    private strRepeat(str: string, qty: number): string {\n        if (qty < 1) { \n            return '';\n        }\n        var result: string = '';\n        while (qty > 0) {\n            if (qty & 1) result += str;\n            qty >>= 1, str += str;\n        }\n        return result;\n    }\n\n    private getType(variable): string {\n        return toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    private parseFormat(fmt: string): any {\n        let _fmt: string = fmt, match = [], parse_tree = [], arg_names: number = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    let field_list: string[] = [], replacement_field: string = match[2], field_match: string[] = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw new Error('Unknown error');\n                            }\n                        }\n                    }\n                    else {\n                        throw new Error('Unknown error');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw new Error('Mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw new Error('Unknown error');\n            }\n            _fmt = _fmt.substring(match[0].length);\n        }\n        return parse_tree;\n    }\n\n    private format(parse_tree: any, argv: any): string {\n        let cursor: number = 0; \n        let tree_length: number = parse_tree.length; \n        let output = [];\n\n        for (let i = 0; i < tree_length; i++) {\n            let node_type = this.getType(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                let match = parse_tree[i]; // convenience purposes only\n                let arg: any;\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (let k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw new Error(this.sprintf('Property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                } else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (this.getType(arg) != 'number')) {\n                    throw new Error(this.sprintf('Expecting number but found %s', this.getType(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n                    case 'u': arg = Math.abs(arg); break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);                \n                let pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';\n                let pad_length = match[6] - String(arg).length;\n                let pad = match[6] ? this.strRepeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    }\n    \n    public sprintf(message: string, ...args: any[]): string {\n        if (!this.cache.hasOwnProperty(message))\n            this.cache[message] = this.parseFormat(message);\n\n        return this.format(this.cache[message], args);\n    }\n}\n\n\nangular\n    .module('pipFormat', [])\n    .service('pipFormat', Format);\n","export let ResetPageEvent: string = \"pipResetPage\";\nexport let ResetAreaEvent: string = \"pipResetArea\";\n\nexport let ResetRootVar: string = \"$reset\";\nexport let ResetAreaRootVar: string = \"$resetArea\";\n\nexport interface IPageResetService {\n    reset(): void;\n    resetArea(area: string): void;\n}\n\n\nclass PageResetService implements IPageResetService {\n    private _rootScope: ng.IRootScopeService;\n    private _log: ng.ILogService;\n    private _timeout: ng.ITimeoutService;\n\n    public constructor(\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService, \n        $timeout: ng.ITimeoutService\n    ) {\n        this._rootScope = $rootScope;\n        this._log = $log;\n        this._timeout = $timeout;\n\n        $rootScope[ResetRootVar] = false;\n        $rootScope[ResetAreaRootVar] = null;\n    }\n\n    public reset(): void {\n        this._log.debug(\"Resetting the entire page\");\n        this.performReset(null);\n    }\n\n    public resetArea(area: string): void {\n        this._log.debug(\"Resetting the area \" + area);\n        this.performReset(area);\n    }\n\n    private performReset(area?: string): void {\n        this._rootScope[ResetRootVar] = area == null;\n        this._rootScope[ResetAreaRootVar] = area;\n\n        this._timeout(() => {\n            this._rootScope[ResetRootVar] = false;\n            this._rootScope[ResetAreaRootVar] = null;\n        }, 0);\n    }\n}\n\n\nfunction hookResetEvents(\n    $rootScope: ng.IRootScopeService, \n    pipPageReset: IPageResetService\n) {\n    $rootScope.$on(ResetPageEvent, () => { pipPageReset.reset(); });\n    $rootScope.$on(ResetAreaEvent, (event, area) => { pipPageReset.resetArea(area); });\n}\n\n\nangular.module('pipPageReset', [])\n    .service('pipPageReset', PageResetService)\n    .run(hookResetEvents);\n","export interface IScrollService {\n    scrollTo(parentElement, childElement, animationDuration): void;\n}\n\nclass ScrollService implements IScrollService {\n\n    public scrollTo(parentElement, childElement, animationDuration): void {\n        if (!parentElement || !childElement) return;\n        if (animationDuration == undefined) animationDuration = 300;\n\n        setTimeout(function () {\n            if (!$(childElement).position()) return;\n            var modDiff= Math.abs($(parentElement).scrollTop() - $(childElement).position().top);\n            if (modDiff < 20) return;\n            var scrollTo = $(parentElement).scrollTop() + ($(childElement).position().top - 20);\n            if (animationDuration > 0)\n                $(parentElement).animate({\n                    scrollTop: scrollTo + 'px'\n                }, animationDuration);\n        }, 100);\n    }\n\n}\n\n\nangular\n    .module('pipScroll', [])\n    .service('pipScroll', ScrollService);\n","export interface ISystemInfo {\n    browserName: string;\n    browserVersion: string;\n    platform: string;\n    os: string;\n\n    isDesktop(): boolean;\n    isMobile(): boolean;\n    isCordova(): boolean;\n    isSupported(supported?: any): boolean;\n}\n\n\nclass SystemInfo implements ISystemInfo {\n    private _window: ng.IWindowService;\n\n    public constructor($window: ng.IWindowService) {\n        \"ngInject\";\n\n        this._window = $window;\n    }\n\n    // todo add support for iPhone\n    public get browserName(): string {\n        let ua = this._window.navigator.userAgent;\n\n        if (ua.search(/Edge/) > -1) return \"edge\";\n        if (ua.search(/MSIE/) > -1) return \"ie\";\n        if (ua.search(/Trident/) > -1) return \"ie\";\n        if (ua.search(/Firefox/) > -1) return \"firefox\";\n        if (ua.search(/Opera/) > -1) return \"opera\";\n        if (ua.search(/OPR/) > -1) return \"opera\";\n        if (ua.search(/YaBrowser/) > -1) return \"yabrowser\";\n        if (ua.search(/Chrome/) > -1) return \"chrome\";\n        if (ua.search(/Safari/) > -1) return \"safari\";\n        if (ua.search(/Maxthon/) > -1) return \"maxthon\";\n        \n        return \"unknown\";\n    }\n\n    public get browserVersion(): string {\n        let version;\n        let ua = this._window.navigator.userAgent;\n        let browser = this.browserName;\n\n        switch (browser) {\n            case \"edge\":\n                version = (ua.split(\"Edge\")[1]).split(\"/\")[1];\n                break;\n            case \"ie\":\n                version = (ua.split(\"MSIE \")[1]).split(\";\")[0];\n                break;\n            case \"ie11\":\n                browser = \"ie\";\n                version = (ua.split(\"; rv:\")[1]).split(\")\")[0];\n                break;\n            case \"firefox\":\n                version = ua.split(\"Firefox/\")[1];\n                break;\n            case \"opera\":\n                version = ua.split(\"Version/\")[1];\n                break;\n            case \"operaWebkit\":\n                version = ua.split(\"OPR/\")[1];\n                break;\n            case \"yabrowser\":\n                version = (ua.split(\"YaBrowser/\")[1]).split(\" \")[0];\n                break;\n            case \"chrome\":\n                version = (ua.split(\"Chrome/\")[1]).split(\" \")[0];\n                break;\n            case \"safari\":\n                version = (ua.split(\"Version/\")[1]).split(\" \")[0];\n                break;\n            case \"maxthon\":\n                version = ua.split(\"Maxthon/\")[1];\n                break;\n        }\n\n        return version;\n    }\n    \n    public get platform(): string {\n        let ua = this._window.navigator.userAgent;\n\n        if (/iphone|ipad|ipod|android|blackberry|mini|windows\\sce|palm/i.test(ua.toLowerCase())) \n            return 'mobile';\n\n        return 'desktop';\n    }\n\n    public get os(): string {\n        let ua = this._window.navigator.userAgent;\n\n        try {\n            let osAll = (/(windows|mac|android|linux|blackberry|sunos|solaris|iphone)/.exec(ua.toLowerCase()) || [ua])[0].replace('sunos', 'solaris');\n            let osAndroid = (/(android)/.exec(ua.toLowerCase()) || '');\n            return osAndroid && (osAndroid == 'android' || (osAndroid[0] == 'android')) ? 'android' : osAll;\n        } catch (err) {\n            return 'unknown'\n        }\n    }\n\n    public isDesktop(): boolean {\n        return this.platform == 'desktop';\n    }\n\n    public isMobile(): boolean {\n        return this.platform == 'mobile';\n    }\n\n    // Todo: complete implementation\n    public isCordova(): boolean {\n        return false;\n    }\n\n    // Todo: Move to errors\n    public isSupported(supported?: any): boolean {\n        if (!supported) \n            supported = {\n                edge: 11,\n                ie: 11,\n                firefox: 43, //4, for testing\n                opera: 35,\n                chrome: 47\n            };\n\n        let browser = this.browserName;\n        let version = this.browserVersion;\n        version = version.split(\".\")[0]\n\n        if (browser && supported[browser] && version >= supported[browser]) \n            return true;\n\n        return true;\n    }\n}\n\n\nangular\n    .module('pipSystemInfo', [])\n    .service('pipSystemInfo', SystemInfo);\n","'use strict';\n\nexport interface ITags {\n    normalizeOne(tag: string): string;\n    compressOne(tag: string): string;\n    equal(tag1: string, tag2: string): boolean;\n    normalizeAll(tags: any): string[];\n    compressAll(tags: any): string[];\n    extract(entity: any, searchFields?: string[]): string[];\n}\n\n\nclass Tags implements ITags {\n\n    public normalizeOne(tag: string): string {\n        return tag \n            ? _.trim(tag.replace(/(_|#)+/g, ' '))\n            : null;\n    }\n\n    public compressOne(tag: string): string {\n        return tag\n            ? tag.replace(/( |_|#)/g, '').toLowerCase()\n            : null;\n    }\n\n    public equal(tag1: string, tag2: string): boolean {\n        if (tag1 == null && tag2 == null)\n            return true;\n        if (tag1 == null || tag2 == null)\n            return false;\n        return this.compressOne(tag1) == this.compressOne(tag2);\n    }\n\n    public normalizeAll(tags: any): string[] {\n        if (_.isString(tags))\n            tags = tags.split(/( |,|;)+/);\n\n        tags = _.map(tags, (tag: string) => this.normalizeOne(tag));\n\n        return tags;\n    }\n\n    public compressAll(tags: any): string[] {\n        if (_.isString(tags))\n            tags = tags.split(/( |,|;)+/);\n\n        tags = _.map(tags, (tag: string) => this.compressOne(tag));\n\n        return tags;\n    }\n\n    public extract(entity: any, searchFields?: string[]): string[] {\n        let tags = this.normalizeAll(entity.tags);\n\n        _.each(searchFields, (field) => {\n            let text = entity[field] || '';\n\n            if (text != '') {\n                let hashTags = text.match(/#\\w+/g);\n                tags = tags.concat(this.normalizeAll(hashTags));\n            }\n        });\n\n        return _.uniq(tags);\n    }\n}\n\n\nangular\n    .module('pipTags', [])\n    .service('pipTags', Tags);\n","export interface ITimerService {\n    isStarted(): boolean;\n\n    addEvent(event: string, timeout: number): void;\n    removeEvent(event: string): void;\n    clearEvents(): void;\n\n    start(): void;\n    stop(): void;\n}\n\n\nclass TimerEvent {\n    public event: string;\n    public timeout: number;\n    public interval: any;\n\n    public constructor(event: string, timeout: number) {\n        this.event = event;\n        this.timeout = timeout;\n    }\n}\n\n\nlet DefaultEvents: TimerEvent[] = [\n    new TimerEvent('pipAutoPullChanges', 60000), // 1 min\n    new TimerEvent('pipAutoUpdatePage', 15000), // 15 sec\n    new TimerEvent('pipAutoUpdateCollection', 300000) // 5 min\n];\n\n\nclass TimerService implements ITimerService {\n    private _rootScope: ng.IRootScopeService;\n    private _log: ng.ILogService;\n    private _interval: ng.IIntervalService;        \n    private _started = false;\n    private _events: TimerEvent[] = _.cloneDeep(DefaultEvents);\n\n    public constructor(\n        $rootScope: ng.IRootScopeService,\n        $log: ng.ILogService, \n        $interval: ng.IIntervalService\n    ) {\n        \"ngInject\";\n\n        this._rootScope = $rootScope;\n        this._log = $log;\n        this._interval = $interval;\n    }\n\n    public isStarted(): boolean {\n        return this._started;\n    }\n\n    public addEvent(event: string, timeout: number): void {\n        var existingEvent = _.find(this._events, (e) => e.event == event);\n        if (existingEvent != null) return;\n\n        let newEvent = <TimerEvent> {\n            event: event,\n            timeout: timeout\n        };\n        this._events.push(newEvent);\n\n        if (this._started)\n            this.startEvent(newEvent);\n    }\n\n    public removeEvent(event: string): void {\n        for (let i = this._events.length - 1; i >= 0; i--) {\n            let existingEvent = this._events[i];\n            if (existingEvent.event == event) {\n                this.stopEvent(existingEvent);\n                this._events.splice(i, 1);\n            }\n        }\n    }\n\n    public clearEvents(): void {\n        this.stop();\n        this._events = [];\n    }\n\n    private startEvent(event: TimerEvent): void {\n        event.interval = this._interval(\n            () => { \n                this._log.debug('Generated timer event ' + event.event); \n                this._rootScope.$emit(event.event)\n            },\n            event.timeout\n        )\n    }\n\n    private stopEvent(event: TimerEvent): void {\n        if (event.interval != null) {\n            try {\n                this._interval.cancel(event.interval);\n            } catch (ex) {\n                // Do nothing\n            }\n            event.interval = null;\n        }\n    }\n\n    public start(): void {\n        if (this._started) return;\n\n        _.each(this._events, (event) => {\n            this.startEvent(event);\n        });\n\n        this._started = true;\n    }\n\n    public stop(): void {\n        _.each(this._events, (event) => {\n            this.stopEvent(event);\n        });\n\n        this._started = false;\n    }\n}\n\n\nangular.module('pipTimer', [])\n    .service('pipTimer', TimerService);\n","import './Format';\nimport './TimerService';\nimport './ScrollService';\nimport './Tags';\nimport './Codes';\nimport './SystemInfo';\nimport './PageResetService';\n\nexport * from './Format';\nexport * from './TimerService';\nexport * from './ScrollService';\nexport * from './Tags';\nexport * from './Codes';\nexport * from './SystemInfo';\nexport * from './PageResetService';"]}